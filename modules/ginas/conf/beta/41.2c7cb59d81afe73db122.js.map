{"version":3,"sources":["./src/app/core/substance-form/polymer-classification/substance-form-polymer-classification.module.ts","./src/app/core/substance-form/polymer-classification/substance-form-polymer-classification.component.ts","./src/app/core/substance-form/polymer-classification/substance-form-polymer-classification.component.ts.pre-build-optimizer.js","./src/app/core/substance-form/polymer-classification/substance-form-polymer-classification.service.ts","./src/app/core/substance-form/polymer-classification/substance-form-polymer-classification.service.ts.pre-build-optimizer.js","./src/app/core/substance-form/polymer-classification/substance-form-polymer-classification.component.ngfactory.js.pre-build-optimizer.js","./src/app/core/substance-form/polymer-classification/substance-form-polymer-classification.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/core/substance-form/polymer-classification/substance-form-polymer-classification.component.html","./src/app/core/substance-form/polymer-classification/substance-form-polymer-classification.module.ngfactory.js.pre-build-optimizer.js","./src/app/core/substance-form/base-classes/substance-form-base.ts"],"names":["substanceFormPolymerClassificationService","gaService","cvService","subscriptions","dropdownSettings","analyticsEventCategory","_this","ngOnInit","this","menuLabelUpdate","emit","proteinSubscription","substancePolymerClassification","subscribe","classification","relatedSubstanceUuid","parentSubstance","refuuid","push","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","ngAfterViewInit","ngOnDestroy","forEach","subscription","unsubscribe","update","tags","polymerSubClass","updateType","type","sourceType","updateGeometry","polymerGeometry","updateClass","polymerClass","parentSubstanceUpdated","substance","relatedSubstance","refPname","_name","name","uuid","substanceClass","approvalID","updateAccess","access","substanceFormService","initSubtanceForm","polymer","resetState","propertyEmitter","next","get","asObservable","enumerable","configurable","SubstanceFormPolymerClassificationService","ngInjectableDef","factory","token","providedIn","RenderType_SubstanceFormPolymerClassificationComponent","encapsulation","styles","data","View_SubstanceFormPolymerClassificationComponent_1","_l","ad","$event","View_SubstanceFormPolymerClassificationComponent_0","View_SubstanceFormPolymerClassificationComponent_Host_0","_ck","_v","SubstanceFormPolymerClassificationComponentNgFactory","hiddenStateUpdate","canAddItemUpdate","componentDestroyed","SubstanceFormPolymerClassificationModuleNgFactory","separatorKeyCodes"],"mappings":"mHAYA,aAiBwD,OAjBxD,gB,wZCIA,cAcE,WACUA,EACDC,EACAC,GAHT,MAKE,cAAO,KClBH,ODcI,EAAAF,4CACD,EAAAC,YACA,EAAAC,YALD,EAAAC,cAAqC,GAC7C,EAAAC,iBAAsC,GAOpC,EAAKC,uBAAyB,wCCnBnBC,ED0Ef,OArEiE,SAiB/D,YAAAC,SAAA,sBACEC,KAAKC,gBAAgBC,KAAK,0BAC1B,IAAMC,EAAsBH,KAAKR,0CAA0CY,+BAA+BC,WAAU,SAAAC,GAClH,EAAKA,eAAiBA,EACtB,EAAKC,qBAAuB,EAAKD,eAAeE,iBAAmB,EAAKF,eAAeE,gBAAgBC,SAAW,MAEpHT,KAAKL,cAAce,KAAKP,GAExBH,KAAKJ,iBAAmB,CAAEe,iBAAiB,EAAOC,QAAS,QAASC,UAAW,UAAWC,cAAe,aACvGC,gBAAiB,eAAgBC,eAAgB,EAAGC,mBAAmB,IAG3E,YAAAC,gBAAA,aAGA,YAAAC,YAAA,WACEnB,KAAKL,cAAcyB,SAAQ,SAAAC,GACzBA,EAAaC,kBAIjB,YAAAC,OAAA,SAAOC,GACLxB,KAAKM,eAAemB,gBAAkBD,GAGxC,YAAAE,WAAA,SAAWC,GACT3B,KAAKM,eAAesB,WAAaD,GAGnC,YAAAE,eAAA,SAAeF,GACb3B,KAAKM,eAAewB,gBAAkBH,GAGxC,YAAAI,YAAA,SAAYJ,GACR3B,KAAKM,eAAe0B,aAAeL,GAGvC,YAAAM,uBAAA,SAAuBC,GACrB,IAAMC,EAAqC,CACzCC,SAAUF,EAAUG,MACpBC,KAAMJ,EAAUG,MAChB5B,QAASyB,EAAUK,KACnBC,eAAgB,YAChBC,WAAYP,EAAUO,YAExBzC,KAAKM,eAAeE,gBAAkB2B,EACtCnC,KAAKO,qBAAuB4B,GAAoBA,EAAiB1B,SAAW,IAG9E,YAAAiC,aAAA,SAAaC,GACX3C,KAAKM,eAAeqC,OAASA,GAEjC,EA3EA,C,UAMiE,G,wBEfjE,cAKE,WACSC,GADT,MAGE,YAAMA,IAAqB,KCHvB,ODCG,EAAAA,uBCDI9C,EAyBX,OD3B2D,SAQ7D,YAAA+C,iBAAA,sBACE,YAAMA,iBAAgB,WACtB,IAAMxB,EAAerB,KAAK4C,qBAAqBV,UAAU7B,WAAU,SAAA6B,GACjE,EAAKA,UAAYA,EACb,EAAKA,UAAUY,UAC4B,MAAzC,EAAKZ,UAAUY,QAAQxC,iBACzB,EAAK4B,UAAUY,QAAQxC,eAAiB,IAE1C,EAAKsC,qBAAqBG,aAC1B,EAAKC,gBAAgBC,KAAK,EAAKf,UAAUY,QAAQxC,oBAGrDN,KAAKL,cAAce,KAAKW,IAG1B,sBAAI,6CAA8B,CCH5B6B,IDGN,WACE,OAAOlD,KAAKgD,gBAAgBG,gBCDxBC,YAAY,EACZC,cAAc,IAElBC,EAA0CC,gBAAkB,KAAsB,CAAEC,QAAS,WAA+D,OAAO,IAAIF,EAA0C,KAAY,OAA8BG,MAAOH,EAA2CI,WAAY,IAClTJ,ED9BX,CAG+D,K,YEkB3DK,EAAyD,KAAQ,CAAEC,cAAe,EAAGC,OADhC,CCrB5C,CAAC,0mCDsBuIC,KAAM,KAE3J,SAASC,EAAmDC,GAAM,OAAO,KAAQ,EAAG,EE9BpF,gGACE,qFACE,4FACE,qFACA,+KACc,oBF2BZC,GADwC,IE3B1C,EAC4F,UF0B1ElC,YAAYmC,IACdD,GE5BhB,yJAEE,kLACc,oBF4BdA,GADuC,IE5BvC,EACyF,UF2BzEvC,WAAWwC,IACbD,GE7Bd,yJAIF,qFACE,uMACmB,mBF0BnBA,GADmC,IE1BnC,EAE+C,UFwB/B1C,OAAO2C,IACTD,GE3Bd,mJAGF,yLACyD,oBF0BvDA,GAD2C,IE1B7C,EACgG,UFyB9EpC,eAAeqC,IACjBD,GE3BhB,0JAKF,0GACE,6OAAwB,yBFwBtBA,GADmD,IEvBrD,EAEyD,UFqBvChC,uBAAuBiC,IACzBD,GExBhB,kMAKF,8GAAoB,kBFsBhBA,GADyC,IErB7C,EAAwF,UFqBpEvB,aAAawB,IACfD,GEtBlB,oGAAwF,gCArBtF,QAAuD,gBAAzB,gBACsB,EAAuC,6BACzF,QAA4D,cAA/B,sBACsB,EAAqC,2BAIxF,SAEmB,mBAFA,mBAC8B,EAAuC,gCAE1F,SAA6D,mBAA5B,mBACnB,EAA0C,gCAKxD,SACwB,kCAAgD,mBAA+B,mBAC/E,EAAgC,sBAG1D,SAAuD,EAAgC,+BFwBpF,SAASE,EAAmDH,GAAM,OAAO,KAAQ,EAAG,EEjD3F,qGAA0D,cAA1D,QAA0D,YAAD,wBFkDlD,SAASI,EAAwDJ,GAAM,OAAO,KAAQ,EAAG,EAAEA,MAAQ,KAAQ,EAAG,EAAG,KAAM,KAAM,EAAG,4CAA6C,GAAI,KAAM,KAAM,KAAMG,EAAoDR,IAA0D,KAAQ,EAAG,QAAS,KAAM,EAAG,EAAiD,CAAC,EAA+C,IAA4B,KAAiC,KAAM,QAAQ,SAAUU,EAAKC,GAAMD,EAAIC,EAAI,EAAG,KAAO,MACxiB,IAAIC,EAAuD,KAAQ,4CAA6C,EAAiDH,EAAyD,GAAI,CAAEnE,gBAAiB,kBAAmBuE,kBAAmB,oBAAqBC,iBAAkB,mBAAoBC,mBAAoB,sBAAwB,I,okBGnD9X,mFA2EA,IAAIC,GAAoD,KAAQ,EAA6C,IAAI,SAAUX,GAAM,OAAO,KAAQ,CAAC,KAAQ,IAAK,IAA6B,KAAqC,CAAC,CAAC,EAAG,CAAC,IAA8B,IAAgC,IAA+C,IAAyC,IAA4C,IAAqC,IAA8C,IAAsC,IAA6C,IAAwC,IAAmD,IAAgC,IAAkC,IAAiC,IAA2C,IAAsC,IAA0C,IAA4D,CAAC,EAAG,KAA8B,MAAkB,KAAQ,KAAM,IAAoB,IAA0B,CAAC,IAAc,CAAC,EAAG,OAA0C,KAAQ,KAAM,IAA6B,IAA6B,IAAK,KAAQ,KAAM,IAAuB,IAAuB,IAAK,KAAQ,KAAM,IAAiB,IAAiB,IAAK,KAAQ,KAAM,IAAqC,IAAqC,IAAK,KAAQ,KAAM,IAAa,IAAa,CAAC,IAA2B,IAAsB,IAA6B,IAA4B,IAA+B,IAAa,IAAW,IAAc,IAAoB,CAAC,EAAG,OAAiB,KAAQ,KAAM,IAAQ,IAAQ,CAAC,MAAe,KAAQ,KAAM,IAAgC,IAAiD,CAAC,MAAe,KAAQ,KAAM,KAA8B,KAAU,CAAC,MAAe,KAAQ,KAAM,KAAiC,KAAyC,CAAC,MAAe,KAAQ,KAAM,KAA2B,IAAmB,CAAC,CAAC,EAAG,KAAyB,CAAC,EAAG,OAAwB,KAAQ,KAAM,KAAsC,KAA8C,CAAC,MAAe,KAAQ,KAAM,IAAgC,IAAiD,CAAC,MAAe,KAAQ,OAAQ,IAAe,IAAe,CAAC,IAAa,IAAa,CAAC,EAAG,KAAe,CAAC,EAAG,KAAiC,IAAgC,CAAC,EAAG,KAAgB,MAAwB,KAAQ,WAAY,IAAkB,IAAkB,IAAK,KAAQ,WAAY,KAAkC,KAAkC,IAAK,KAAQ,WAAY,IAAqB,IAAqB,IAAK,KAAQ,WAAY,KAAwB,KAAwB,IAAK,KAAQ,WAAY,KAAoB,KAAoB,IAAK,KAAQ,WAAY,KAAqB,KAAqB,IAAK,KAAQ,WAAY,KAAoB,KAAoB,IAAK,KAAQ,WAAY,IAAqC,IAAqC,IAAK,KAAQ,WAAY,IAAyB,IAAyB,IAAK,KAAQ,WAAY,IAAiB,IAAiB,IAAK,KAAQ,WAAY,IAAgB,IAAgB,IAAK,KAAQ,WAAY,KAAkB,KAAkB,IAAK,KAAQ,WAAY,KAAqB,KAAqB,IAAK,KAAQ,WAAY,IAAmB,IAAmB,IAAK,KAAQ,WAAY,IAAqB,IAAqB,CAAC,CAAC,EAAG,KAA6B,CAAC,EAAG,QAAsB,KAAQ,WAAY,IAAqB,IAAqB,IAAK,KAAQ,WAAY,IAA6B,IAA6B,IAAK,KAAQ,WAAY,IAAqB,IAAqB,IAAK,KAAQ,WAAY,IAAqB,IAAqB,IAAK,KAAQ,WAAY,KAA8B,KAA8B,IAAK,KAAQ,WAAY,KAAmB,KAAmB,IAAK,KAAQ,WAAY,KAAyC,KAAyC,IAAK,KAAQ,WAAY,KAAuB,KAAuB,IAAK,KAAQ,WAAY,KAAqB,KAAqB,IAAK,KAAQ,WAAY,KAAmB,KAAmB,IAAK,KAAQ,WAAY,KAAgB,KAAgB,IAAK,KAAQ,WAAY,KAAsB,KAAsB,IAAK,KAAQ,WAAY,KAAmB,KAAmB,IAAK,KAAQ,WAAY,KAAsB,KAAsB,IAAK,KAAQ,WAAY,KAAoB,KAAoB,IAAK,KAAQ,WAAY,KAA2B,KAA2B,IAAK,KAAQ,WAAY,KAAoB,KAAoB,IAAK,KAAQ,WAAY,IAAqB,IAAqB,IAAK,KAAQ,WAAY,KAAoB,KAAoB,IAAK,KAAQ,WAAY,KAAoB,KAAoB,IAAK,KAAQ,WAAY,KAAwB,KAAwB,IAAK,KAAQ,WAAY,KAAwB,KAAwB,IAAK,KAAQ,WAAY,KAAoB,KAAoB,IAAK,KAAQ,WAAY,KAAoB,KAAoB,IAAK,KAAQ,WAAY,KAAyB,KAAyB,IAAK,KAAQ,WAAY,KAA+B,KAA+B,IAAK,KAAQ,WAAY,KAAkB,KAAkB,CAAC,CAAC,EAAG,MAAwC,CAAC,EAAG,QAAe,KAAQ,WAAY,KAA0B,KAA0B,IAAK,KAAQ,WAAY,KAA6B,KAA6B,IAAK,KAAQ,WAAY,IAAmB,IAAmB,IAAK,KAAQ,WAAY,KAAmB,KAAmB,IAAK,KAAQ,WAAY,KAAsB,KAAsB,IAAK,KAAQ,WAAY,KAA2B,KAA2B,IAAK,KAAQ,WAAY,KAAyB,KAAyB,IAAK,KAAQ,WAAY,KAAyB,KAAyB,IAAK,KAAQ,WAAY,KAA0B,KAA0B,IAAK,KAAQ,WAAY,KAAmB,KAAmB,IAAK,KAAQ,WAAY,KAAwB,KAAwB,IAAK,KAAQ,WAAY,EAA6C,EAA6C,IAAK,KAAQ,IAAK,KAA+B,CAAEY,kBAAmB,CAAC,OAAc,IAAK,KAAQ,KAAM,MAAY,WAAc,MAAO,CAAC,MAAQ,IAAK,KAAQ,IAAK,KAAuB,EAAiD,U,oCC3EvmN,kDAEA,aAMA,OANA,WAEc,KAAA3E,gBAAkB,IAAI,IACtB,KAAAuE,kBAAoB,IAAI,IACxB,KAAAC,iBAAmB,IAAI,IACvB,KAAAC,mBAAqB,IAAI,KALvC","file":"41.2c7cb59d81afe73db122.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SubstanceFormModule } from '../substance-form.module';\nimport { NameResolverModule } from '../../name-resolver/name-resolver.module';\nimport {SubstanceFormPolymerClassificationComponent} from '@gsrs-core/substance-form/polymer-classification/substance-form-polymer-classification.component';\nimport {SubstanceSelectorModule} from '@gsrs-core/substance-selector/substance-selector.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(SubstanceFormPolymerClassificationComponent),\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatSelectModule,\n    SubstanceFormModule,\n    NameResolverModule,\n    SubstanceSelectorModule\n  ],\n  declarations: [\n    SubstanceFormPolymerClassificationComponent\n  ]\n})\nexport class SubstanceFormPolymerClassificationModule { }\n","import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\nimport {\n  Polymer,\n  PolymerClassification,\n  Protein,\n  SubstanceDetail,\n  SubstanceName,\n  SubstanceRelated, SubstanceSummary\n} from '@gsrs-core/substance';\nimport {Subscription} from 'rxjs';\nimport {GoogleAnalyticsService} from '@gsrs-core/google-analytics';\nimport {ControlledVocabularyService, VocabularyTerm} from '@gsrs-core/controlled-vocabulary';\nimport { IDropdownSettings} from 'ng-multiselect-dropdown';\nimport { SubstanceFormBase } from '../base-classes/substance-form-base';\nimport { SubstanceFormPolymerClassificationService } from './substance-form-polymer-classification.service';\n\n@Component({\n  selector: 'app-substance-form-polymer-classification',\n  templateUrl: './substance-form-polymer-classification.component.html',\n  styleUrls: ['./substance-form-polymer-classification.component.scss']\n})\n// tslint:disable-next-line:max-line-length\nexport class SubstanceFormPolymerClassificationComponent extends SubstanceFormBase\n  implements OnInit, AfterViewInit, OnDestroy {\n\n  classification: PolymerClassification;\n  parent: SubstanceRelated;\n  relatedSubstanceUuid: string;\n  private subscriptions: Array<Subscription> = [];\n  dropdownSettings: IDropdownSettings = {};\n  constructor(\n    private substanceFormPolymerClassificationService: SubstanceFormPolymerClassificationService,\n    public gaService: GoogleAnalyticsService,\n    public cvService: ControlledVocabularyService\n  ) {\n    super();\n    this.analyticsEventCategory = 'substance form Polymer Classification';\n  }\n\n  ngOnInit() {\n    this.menuLabelUpdate.emit('Polymer Classification');\n    const proteinSubscription = this.substanceFormPolymerClassificationService.substancePolymerClassification.subscribe(classification => {\n      this.classification = classification;\n      this.relatedSubstanceUuid = this.classification.parentSubstance && this.classification.parentSubstance.refuuid || '';\n    });\n    this.subscriptions.push(proteinSubscription);\n\n    this.dropdownSettings = { singleSelection: false, idField: 'value', textField: 'display', selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All', itemsShowLimit: 3, allowSearchFilter: true};\n  }\n\n  ngAfterViewInit() {\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  update(tags: Array<string>): void {\n    this.classification.polymerSubClass = tags;\n  }\n\n  updateType(type: string): void {\n    this.classification.sourceType = type;\n  }\n\n  updateGeometry(type: string): void {\n    this.classification.polymerGeometry = type;\n  }\n\n  updateClass(type: string): void {\n      this.classification.polymerClass = type;\n  }\n\n  parentSubstanceUpdated(substance: SubstanceSummary): void {\n    const relatedSubstance: SubstanceRelated = {\n      refPname: substance._name,\n      name: substance._name,\n      refuuid: substance.uuid,\n      substanceClass: 'reference',\n      approvalID: substance.approvalID\n    };\n    this.classification.parentSubstance = relatedSubstance;\n    this.relatedSubstanceUuid = relatedSubstance && relatedSubstance.refuuid || '';\n  }\n\n  updateAccess(access: Array<string>): void {\n    this.classification.access = access;\n  }\n}\n","import * as tslib_1 from \"tslib\";\nimport { AfterViewInit, OnDestroy, OnInit } from '@angular/core';\nimport { PolymerClassification, SubstanceRelated, SubstanceSummary } from '@gsrs-core/substance';\nimport { GoogleAnalyticsService } from '@gsrs-core/google-analytics';\nimport { ControlledVocabularyService } from '@gsrs-core/controlled-vocabulary';\nimport { SubstanceFormBase } from '../base-classes/substance-form-base';\nimport { SubstanceFormPolymerClassificationService } from './substance-form-polymer-classification.service';\nvar SubstanceFormPolymerClassificationComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(SubstanceFormPolymerClassificationComponent, _super);\n    function SubstanceFormPolymerClassificationComponent(substanceFormPolymerClassificationService, gaService, cvService) {\n        var _this = _super.call(this) || this;\n        _this.substanceFormPolymerClassificationService = substanceFormPolymerClassificationService;\n        _this.gaService = gaService;\n        _this.cvService = cvService;\n        _this.subscriptions = [];\n        _this.dropdownSettings = {};\n        _this.analyticsEventCategory = 'substance form Polymer Classification';\n        return _this;\n    }\n    SubstanceFormPolymerClassificationComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.menuLabelUpdate.emit('Polymer Classification');\n        var proteinSubscription = this.substanceFormPolymerClassificationService.substancePolymerClassification.subscribe(function (classification) {\n            _this.classification = classification;\n            _this.relatedSubstanceUuid = _this.classification.parentSubstance && _this.classification.parentSubstance.refuuid || '';\n        });\n        this.subscriptions.push(proteinSubscription);\n        this.dropdownSettings = { singleSelection: false, idField: 'value', textField: 'display', selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All', itemsShowLimit: 3, allowSearchFilter: true };\n    };\n    SubstanceFormPolymerClassificationComponent.prototype.ngAfterViewInit = function () {\n    };\n    SubstanceFormPolymerClassificationComponent.prototype.ngOnDestroy = function () {\n        this.subscriptions.forEach(function (subscription) {\n            subscription.unsubscribe();\n        });\n    };\n    SubstanceFormPolymerClassificationComponent.prototype.update = function (tags) {\n        this.classification.polymerSubClass = tags;\n    };\n    SubstanceFormPolymerClassificationComponent.prototype.updateType = function (type) {\n        this.classification.sourceType = type;\n    };\n    SubstanceFormPolymerClassificationComponent.prototype.updateGeometry = function (type) {\n        this.classification.polymerGeometry = type;\n    };\n    SubstanceFormPolymerClassificationComponent.prototype.updateClass = function (type) {\n        this.classification.polymerClass = type;\n    };\n    SubstanceFormPolymerClassificationComponent.prototype.parentSubstanceUpdated = function (substance) {\n        var relatedSubstance = {\n            refPname: substance._name,\n            name: substance._name,\n            refuuid: substance.uuid,\n            substanceClass: 'reference',\n            approvalID: substance.approvalID\n        };\n        this.classification.parentSubstance = relatedSubstance;\n        this.relatedSubstanceUuid = relatedSubstance && relatedSubstance.refuuid || '';\n    };\n    SubstanceFormPolymerClassificationComponent.prototype.updateAccess = function (access) {\n        this.classification.access = access;\n    };\n    return SubstanceFormPolymerClassificationComponent;\n}(SubstanceFormBase));\nexport { SubstanceFormPolymerClassificationComponent };\n","import { Injectable } from '@angular/core';\nimport { SubstanceFormServiceBase } from '../base-classes/substance-form-service-base';\nimport { SubstanceFormService } from '../substance-form.service';\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { PolymerClassification } from '@gsrs-core/substance/substance.model';\nimport { SubstanceFormPolymerClassificationModule } from './substance-form-polymer-classification.module';\n\n@Injectable({\n  providedIn: SubstanceFormPolymerClassificationModule\n})\nexport class SubstanceFormPolymerClassificationService extends SubstanceFormServiceBase<PolymerClassification> {\n\n  constructor(\n    public substanceFormService: SubstanceFormService\n  ) {\n    super(substanceFormService);\n  }\n\n  initSubtanceForm(): void {\n    super.initSubtanceForm();\n    const subscription = this.substanceFormService.substance.subscribe(substance => {\n      this.substance = substance;\n      if (this.substance.polymer) {\n        if (this.substance.polymer.classification == null) {\n          this.substance.polymer.classification = {};\n        }\n        this.substanceFormService.resetState();\n        this.propertyEmitter.next(this.substance.polymer.classification);\n      }\n    });\n    this.subscriptions.push(subscription);\n  }\n\n  get substancePolymerClassification(): Observable<PolymerClassification> {\n    return this.propertyEmitter.asObservable();\n  }\n}\n","import * as tslib_1 from \"tslib\";\nimport { SubstanceFormServiceBase } from '../base-classes/substance-form-service-base';\nimport { SubstanceFormService } from '../substance-form.service';\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../substance-form.service\";\nimport * as i2 from \"./substance-form-polymer-classification.module\";\nvar SubstanceFormPolymerClassificationService = /** @class */ (function (_super) {\n    tslib_1.__extends(SubstanceFormPolymerClassificationService, _super);\n    function SubstanceFormPolymerClassificationService(substanceFormService) {\n        var _this = _super.call(this, substanceFormService) || this;\n        _this.substanceFormService = substanceFormService;\n        return _this;\n    }\n    SubstanceFormPolymerClassificationService.prototype.initSubtanceForm = function () {\n        var _this = this;\n        _super.prototype.initSubtanceForm.call(this);\n        var subscription = this.substanceFormService.substance.subscribe(function (substance) {\n            _this.substance = substance;\n            if (_this.substance.polymer) {\n                if (_this.substance.polymer.classification == null) {\n                    _this.substance.polymer.classification = {};\n                }\n                _this.substanceFormService.resetState();\n                _this.propertyEmitter.next(_this.substance.polymer.classification);\n            }\n        });\n        this.subscriptions.push(subscription);\n    };\n    Object.defineProperty(SubstanceFormPolymerClassificationService.prototype, \"substancePolymerClassification\", {\n        get: function () {\n            return this.propertyEmitter.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SubstanceFormPolymerClassificationService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function SubstanceFormPolymerClassificationService_Factory() { return new SubstanceFormPolymerClassificationService(i0.ɵɵinject(i1.SubstanceFormService)); }, token: SubstanceFormPolymerClassificationService, providedIn: i2.SubstanceFormPolymerClassificationModule });\n    return SubstanceFormPolymerClassificationService;\n}(SubstanceFormServiceBase));\nexport { SubstanceFormPolymerClassificationService };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./substance-form-polymer-classification.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../cv-input/cv-input.component.ngfactory\";\nimport * as i3 from \"../cv-input/cv-input.component\";\nimport * as i4 from \"../../controlled-vocabulary/controlled-vocabulary.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"../../utils/utils.service\";\nimport * as i7 from \"@angular/cdk/overlay\";\nimport * as i8 from \"../../utils/data-dictionary.service\";\nimport * as i9 from \"../../auth/auth.service\";\nimport * as i10 from \"../tag-selector/tag-selector.component.ngfactory\";\nimport * as i11 from \"../tag-selector/tag-selector.component\";\nimport * as i12 from \"../../substance-selector/substance-selector.component.ngfactory\";\nimport * as i13 from \"../../substance-selector/substance-selector.component\";\nimport * as i14 from \"../../substance/substance.service\";\nimport * as i15 from \"../access-manager/access-manager.component.ngfactory\";\nimport * as i16 from \"../access-manager/access-manager.component\";\nimport * as i17 from \"@angular/common\";\nimport * as i18 from \"./substance-form-polymer-classification.component\";\nimport * as i19 from \"./substance-form-polymer-classification.service\";\nimport * as i20 from \"../../google-analytics/google-analytics.service\";\nvar styles_SubstanceFormPolymerClassificationComponent = [i0.styles];\nvar RenderType_SubstanceFormPolymerClassificationComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_SubstanceFormPolymerClassificationComponent, data: {} });\nexport { RenderType_SubstanceFormPolymerClassificationComponent as RenderType_SubstanceFormPolymerClassificationComponent };\nfunction View_SubstanceFormPolymerClassificationComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 17, \"div\", [[\"class\", \"name-form-container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 16, \"div\", [[\"class\", \"form-row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 10, \"div\", [[\"class\", \"field-container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 4, \"div\", [[\"class\", \"field-row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(4, 0, null, null, 1, \"app-cv-input\", [[\"class\", \"class\"], [\"domain\", \"POLYMER_CLASS\"], [\"title\", \"Polymer Class\"]], null, [[null, \"valueChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"valueChange\" === en)) {\n        var pd_0 = (_co.updateClass($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_CvInputComponent_0, i2.RenderType_CvInputComponent)), i1.ɵdid(5, 245760, null, 0, i3.CvInputComponent, [i4.ControlledVocabularyService, i5.MatDialog, i6.UtilsService, i7.OverlayContainer, i8.DataDictionaryService, i9.AuthService], { title: [0, \"title\"], domain: [1, \"domain\"], model: [2, \"model\"] }, { valueChange: \"valueChange\" }), (_l()(), i1.ɵeld(6, 0, null, null, 1, \"app-cv-input\", [[\"class\", \"type\"], [\"domain\", \"POLYMER_SOURCE_TYPE\"], [\"title\", \"Source Type\"]], null, [[null, \"valueChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"valueChange\" === en)) {\n        var pd_0 = (_co.updateType($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_CvInputComponent_0, i2.RenderType_CvInputComponent)), i1.ɵdid(7, 245760, null, 0, i3.CvInputComponent, [i4.ControlledVocabularyService, i5.MatDialog, i6.UtilsService, i7.OverlayContainer, i8.DataDictionaryService, i9.AuthService], { title: [0, \"title\"], domain: [1, \"domain\"], model: [2, \"model\"] }, { valueChange: \"valueChange\" }), (_l()(), i1.ɵeld(8, 0, null, null, 4, \"div\", [[\"class\", \"field-row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(9, 0, null, null, 1, \"app-tag-selector\", [[\"class\", \"tags subtype\"], [\"cvDomain\", \"POLYMER_SUBCLASS\"], [\"placeholder\", \"polymer subclass\"]], null, [[null, \"tagsUpdate\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"tagsUpdate\" === en)) {\n        var pd_0 = (_co.update($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i10.View_TagSelectorComponent_0, i10.RenderType_TagSelectorComponent)), i1.ɵdid(10, 4308992, null, 0, i11.TagSelectorComponent, [i4.ControlledVocabularyService], { cvDomain: [0, \"cvDomain\"], placeholder: [1, \"placeholder\"], tags: [2, \"tags\"] }, { tagsUpdate: \"tagsUpdate\" }), (_l()(), i1.ɵeld(11, 0, null, null, 1, \"app-cv-input\", [[\"class\", \"geometry\"], [\"domain\", \"POLYMER_GEOMETRY\"], [\"title\", \"Polymer Geometry\"]], null, [[null, \"valueChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"valueChange\" === en)) {\n        var pd_0 = (_co.updateGeometry($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_CvInputComponent_0, i2.RenderType_CvInputComponent)), i1.ɵdid(12, 245760, null, 0, i3.CvInputComponent, [i4.ControlledVocabularyService, i5.MatDialog, i6.UtilsService, i7.OverlayContainer, i8.DataDictionaryService, i9.AuthService], { title: [0, \"title\"], domain: [1, \"domain\"], model: [2, \"model\"] }, { valueChange: \"valueChange\" }), (_l()(), i1.ɵeld(13, 0, null, null, 2, \"div\", [[\"class\", \"flex-column related-substance\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(14, 0, null, null, 1, \"app-substance-selector\", [[\"eventCategory\", \"substanceRelationshipRelatedSub\"], [\"header\", \"Parent Substance\"], [\"placeholder\", \"Parent Substance\"]], null, [[null, \"selectionUpdated\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"selectionUpdated\" === en)) {\n        var pd_0 = (_co.parentSubstanceUpdated($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i12.View_SubstanceSelectorComponent_0, i12.RenderType_SubstanceSelectorComponent)), i1.ɵdid(15, 114688, null, 0, i13.SubstanceSelectorComponent, [i14.SubstanceService], { eventCategory: [0, \"eventCategory\"], placeholder: [1, \"placeholder\"], header: [2, \"header\"], subuuid: [3, \"subuuid\"] }, { selectionUpdated: \"selectionUpdated\" }), (_l()(), i1.ɵeld(16, 0, null, null, 1, \"app-access-manager\", [], null, [[null, \"accessOut\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"accessOut\" === en)) {\n        var pd_0 = (_co.updateAccess($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i15.View_AccessManagerComponent_0, i15.RenderType_AccessManagerComponent)), i1.ɵdid(17, 4308992, null, 0, i16.AccessManagerComponent, [i4.ControlledVocabularyService, i1.ElementRef], { access: [0, \"access\"] }, { accessOut: \"accessOut\" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"Polymer Class\"; var currVal_1 = \"POLYMER_CLASS\"; var currVal_2 = _co.classification.polymerClass; _ck(_v, 5, 0, currVal_0, currVal_1, currVal_2); var currVal_3 = \"Source Type\"; var currVal_4 = \"POLYMER_SOURCE_TYPE\"; var currVal_5 = _co.classification.sourceType; _ck(_v, 7, 0, currVal_3, currVal_4, currVal_5); var currVal_6 = \"POLYMER_SUBCLASS\"; var currVal_7 = \"polymer subclass\"; var currVal_8 = _co.classification.polymerSubClass; _ck(_v, 10, 0, currVal_6, currVal_7, currVal_8); var currVal_9 = \"Polymer Geometry\"; var currVal_10 = \"POLYMER_GEOMETRY\"; var currVal_11 = _co.classification.polymerGeometry; _ck(_v, 12, 0, currVal_9, currVal_10, currVal_11); var currVal_12 = \"substanceRelationshipRelatedSub\"; var currVal_13 = \"Parent Substance\"; var currVal_14 = \"Parent Substance\"; var currVal_15 = _co.relatedSubstanceUuid; _ck(_v, 15, 0, currVal_12, currVal_13, currVal_14, currVal_15); var currVal_16 = _co.classification.access; _ck(_v, 17, 0, currVal_16); }, null); }\nexport function View_SubstanceFormPolymerClassificationComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵand(16777216, null, null, 1, null, View_SubstanceFormPolymerClassificationComponent_1)), i1.ɵdid(1, 16384, null, 0, i17.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.classification; _ck(_v, 1, 0, currVal_0); }, null); }\nexport function View_SubstanceFormPolymerClassificationComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-substance-form-polymer-classification\", [], null, null, null, View_SubstanceFormPolymerClassificationComponent_0, RenderType_SubstanceFormPolymerClassificationComponent)), i1.ɵdid(1, 4440064, null, 0, i18.SubstanceFormPolymerClassificationComponent, [i19.SubstanceFormPolymerClassificationService, i20.GoogleAnalyticsService, i4.ControlledVocabularyService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar SubstanceFormPolymerClassificationComponentNgFactory = i1.ɵccf(\"app-substance-form-polymer-classification\", i18.SubstanceFormPolymerClassificationComponent, View_SubstanceFormPolymerClassificationComponent_Host_0, {}, { menuLabelUpdate: \"menuLabelUpdate\", hiddenStateUpdate: \"hiddenStateUpdate\", canAddItemUpdate: \"canAddItemUpdate\", componentDestroyed: \"componentDestroyed\" }, []);\nexport { SubstanceFormPolymerClassificationComponentNgFactory as SubstanceFormPolymerClassificationComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".related-substance[_ngcontent-%COMP%]{width:45%}.field-row[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex}.form-row[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:0 10px;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.form-row[_ngcontent-%COMP%]   .checkbox-container[_ngcontent-%COMP%]{padding-bottom:18px}.form-row[_ngcontent-%COMP%]   .class[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .form-block[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .geometry[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .subtype[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .type[_ngcontent-%COMP%]{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-right:15px}.form-row[_ngcontent-%COMP%]   .class[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .geometry[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .tags[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .type[_ngcontent-%COMP%]{max-width:250px}.field-container[_ngcontent-%COMP%]{width:55%}\"];\nexport { styles as styles };\n","<div class=\"name-form-container\" *ngIf = \"classification\">\n  <div class=\"form-row\">\n    <div class = \"field-container\">\n      <div class = \"field-row\">\n      <app-cv-input class = \"class\" domain = \"POLYMER_CLASS\" title = \"Polymer Class\"\n                    (valueChange) = \"updateClass($event)\" [model] = \"classification.polymerClass\"></app-cv-input>\n        <app-cv-input class = \"type\" domain = \"POLYMER_SOURCE_TYPE\" title = \"Source Type\"\n                      (valueChange) = \"updateType($event)\" [model] = \"classification.sourceType\"></app-cv-input>\n\n      </div>\n      <div class = \"field-row\">\n        <app-tag-selector  placeholder = \"polymer subclass\" class = \"tags subtype\"\n                           (tagsUpdate)=\"update($event)\" [tags]=\"classification.polymerSubClass\"\n                           cvDomain=\"POLYMER_SUBCLASS\"></app-tag-selector>\n      <app-cv-input class = \"geometry\" domain = \"POLYMER_GEOMETRY\" title = \"Polymer Geometry\"\n                    [model] = \"classification.polymerGeometry\" (valueChange)=\"updateGeometry($event)\"></app-cv-input>\n\n    </div>\n    </div>\n    <div class=\"flex-column related-substance\">\n      <app-substance-selector (selectionUpdated)=\"parentSubstanceUpdated($event)\"\n                              eventCategory=\"substanceRelationshipRelatedSub\" placeholder=\"Parent Substance\" header=\"Parent Substance\"\n                              [subuuid]=\"relatedSubstanceUuid\">\n      </app-substance-selector>\n    </div>\n    <app-access-manager (accessOut)=\"updateAccess($event)\" [access]=\"classification.access\">\n    </app-access-manager>\n  </div>\n</div>\n\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./substance-form-polymer-classification.module\";\nimport * as i2 from \"../../../../../node_modules/@angular/material/tooltip/typings/index.ngfactory\";\nimport * as i3 from \"../../../../../node_modules/@angular/material/dialog/typings/index.ngfactory\";\nimport * as i4 from \"../../../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i5 from \"../references/references-dialogs/refernce-form-dialog.component.ngfactory\";\nimport * as i6 from \"../references/references-dialogs/reuse-references-dialog.component.ngfactory\";\nimport * as i7 from \"../references/apply-reference/apply-reference.component.ngfactory\";\nimport * as i8 from \"../property-parameter-dialog/property-parameter-dialog.component.ngfactory\";\nimport * as i9 from \"../subunit-selector/subunit-selector.component.ngfactory\";\nimport * as i10 from \"../subunit-selector-dialog/subunit-selector-dialog.component.ngfactory\";\nimport * as i11 from \"../amount-form-dialog/amount-form-dialog.component.ngfactory\";\nimport * as i12 from \"../physical-parameter-form-dialog/physical-parameter-form-dialog.component.ngfactory\";\nimport * as i13 from \"../cv-dialog/cv-dialog.component.ngfactory\";\nimport * as i14 from \"../json-dialog/json-dialog.component.ngfactory\";\nimport * as i15 from \"../audit-info/audit-info.component.ngfactory\";\nimport * as i16 from \"../submit-success-dialog/submit-success-dialog.component.ngfactory\";\nimport * as i17 from \"../../loading/loading-overlay/loading-overlay.component.ngfactory\";\nimport * as i18 from \"../../name-resolver/name-resolver-dialog.component.ngfactory\";\nimport * as i19 from \"./substance-form-polymer-classification.component.ngfactory\";\nimport * as i20 from \"@angular/common\";\nimport * as i21 from \"@angular/cdk/observers\";\nimport * as i22 from \"@angular/material/core\";\nimport * as i23 from \"@angular/forms\";\nimport * as i24 from \"@angular/cdk/overlay\";\nimport * as i25 from \"@angular/cdk/bidi\";\nimport * as i26 from \"@angular/material/select\";\nimport * as i27 from \"@angular/material/menu\";\nimport * as i28 from \"@angular/material/tooltip\";\nimport * as i29 from \"@angular/platform-browser\";\nimport * as i30 from \"@angular/material/autocomplete\";\nimport * as i31 from \"@angular/material/dialog\";\nimport * as i32 from \"../../dynamic-component-loader/dynamic-component-loader.module\";\nimport * as i33 from \"@angular/material/form-field\";\nimport * as i34 from \"@angular/cdk/platform\";\nimport * as i35 from \"@angular/cdk/text-field\";\nimport * as i36 from \"@angular/material/input\";\nimport * as i37 from \"@angular/cdk/portal\";\nimport * as i38 from \"@angular/cdk/scrolling\";\nimport * as i39 from \"@angular/material/checkbox\";\nimport * as i40 from \"@angular/material/button\";\nimport * as i41 from \"@angular/material/icon\";\nimport * as i42 from \"@angular/cdk/a11y\";\nimport * as i43 from \"@angular/material/tabs\";\nimport * as i44 from \"@angular/material/divider\";\nimport * as i45 from \"@angular/material/chips\";\nimport * as i46 from \"../../scroll-to/scroll-to.module\";\nimport * as i47 from \"@angular/cdk/table\";\nimport * as i48 from \"@angular/material/table\";\nimport * as i49 from \"@angular/cdk/accordion\";\nimport * as i50 from \"@angular/material/expansion\";\nimport * as i51 from \"@angular/material/badge\";\nimport * as i52 from \"@angular/material/radio\";\nimport * as i53 from \"../../expand-details/expand-details.module\";\nimport * as i54 from \"../../substance-text-search/substance-text-search.module\";\nimport * as i55 from \"@angular/router\";\nimport * as i56 from \"../../substance/substance-image.module\";\nimport * as i57 from \"../../substance-selector/substance-selector.module\";\nimport * as i58 from \"@angular/material/list\";\nimport * as i59 from \"file-select\";\nimport * as i60 from \"@angular/material/button-toggle\";\nimport * as i61 from \"ngx-json-viewer\";\nimport * as i62 from \"../substance-form.module\";\nimport * as i63 from \"@angular/material/progress-bar\";\nimport * as i64 from \"../../loading/loading.module\";\nimport * as i65 from \"../../name-resolver/name-resolver.module\";\nimport * as i66 from \"@angular/cdk/keycodes\";\nimport * as i67 from \"../../dynamic-component-loader/dynamic-component-manifest\";\nimport * as i68 from \"./substance-form-polymer-classification.component\";\nvar SubstanceFormPolymerClassificationModuleNgFactory = i0.ɵcmf(i1.SubstanceFormPolymerClassificationModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.TooltipComponentNgFactory, i3.MatDialogContainerNgFactory, i4.ɵangular_packages_router_router_lNgFactory, i5.RefernceFormDialogComponentNgFactory, i6.ReuseReferencesDialogComponentNgFactory, i7.ApplyReferenceComponentNgFactory, i8.PropertyParameterDialogComponentNgFactory, i9.SubunitSelectorComponentNgFactory, i10.SubunitSelectorDialogComponentNgFactory, i11.AmountFormDialogComponentNgFactory, i12.PhysicalParameterFormDialogComponentNgFactory, i13.CvDialogComponentNgFactory, i14.JsonDialogComponentNgFactory, i15.AuditInfoComponentNgFactory, i16.SubmitSuccessDialogComponentNgFactory, i17.LoadingOverlayComponentNgFactory, i18.NameResolverDialogComponentNgFactory, i19.SubstanceFormPolymerClassificationComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i20.NgLocalization, i20.NgLocaleLocalization, [i0.LOCALE_ID, [2, i20.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i21.MutationObserverFactory, i21.MutationObserverFactory, []), i0.ɵmpd(4608, i22.ErrorStateMatcher, i22.ErrorStateMatcher, []), i0.ɵmpd(4608, i23.FormBuilder, i23.FormBuilder, []), i0.ɵmpd(4608, i23.ɵangular_packages_forms_forms_o, i23.ɵangular_packages_forms_forms_o, []), i0.ɵmpd(4608, i24.Overlay, i24.Overlay, [i24.ScrollStrategyOptions, i24.OverlayContainer, i0.ComponentFactoryResolver, i24.OverlayPositionBuilder, i24.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i20.DOCUMENT, i25.Directionality, [2, i20.Location]]), i0.ɵmpd(5120, i24.ɵc, i24.ɵd, [i24.Overlay]), i0.ɵmpd(5120, i26.MAT_SELECT_SCROLL_STRATEGY, i26.MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, [i24.Overlay]), i0.ɵmpd(5120, i27.MAT_MENU_SCROLL_STRATEGY, i27.ɵb22, [i24.Overlay]), i0.ɵmpd(5120, i28.MAT_TOOLTIP_SCROLL_STRATEGY, i28.MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, [i24.Overlay]), i0.ɵmpd(4608, i29.HAMMER_GESTURE_CONFIG, i22.GestureConfig, [[2, i22.MAT_HAMMER_OPTIONS], [2, i22.MatCommonModule]]), i0.ɵmpd(5120, i30.MAT_AUTOCOMPLETE_SCROLL_STRATEGY, i30.MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, [i24.Overlay]), i0.ɵmpd(5120, i31.MAT_DIALOG_SCROLL_STRATEGY, i31.MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, [i24.Overlay]), i0.ɵmpd(135680, i31.MatDialog, i31.MatDialog, [i24.Overlay, i0.Injector, [2, i20.Location], [2, i31.MAT_DIALOG_DEFAULT_OPTIONS], i31.MAT_DIALOG_SCROLL_STRATEGY, [3, i31.MatDialog], i24.OverlayContainer]), i0.ɵmpd(1073742336, i20.CommonModule, i20.CommonModule, []), i0.ɵmpd(1073742336, i32.DynamicComponentLoaderModule, i32.DynamicComponentLoaderModule, []), i0.ɵmpd(1073742336, i21.ObserversModule, i21.ObserversModule, []), i0.ɵmpd(1073742336, i33.MatFormFieldModule, i33.MatFormFieldModule, []), i0.ɵmpd(1073742336, i34.PlatformModule, i34.PlatformModule, []), i0.ɵmpd(1073742336, i35.TextFieldModule, i35.TextFieldModule, []), i0.ɵmpd(1073742336, i36.MatInputModule, i36.MatInputModule, []), i0.ɵmpd(1073742336, i23.ɵangular_packages_forms_forms_d, i23.ɵangular_packages_forms_forms_d, []), i0.ɵmpd(1073742336, i23.ReactiveFormsModule, i23.ReactiveFormsModule, []), i0.ɵmpd(1073742336, i23.FormsModule, i23.FormsModule, []), i0.ɵmpd(1073742336, i25.BidiModule, i25.BidiModule, []), i0.ɵmpd(1073742336, i37.PortalModule, i37.PortalModule, []), i0.ɵmpd(1073742336, i38.ScrollingModule, i38.ScrollingModule, []), i0.ɵmpd(1073742336, i24.OverlayModule, i24.OverlayModule, []), i0.ɵmpd(1073742336, i22.MatCommonModule, i22.MatCommonModule, [[2, i22.MATERIAL_SANITY_CHECKS], [2, i29.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i22.MatRippleModule, i22.MatRippleModule, []), i0.ɵmpd(1073742336, i22.MatPseudoCheckboxModule, i22.MatPseudoCheckboxModule, []), i0.ɵmpd(1073742336, i22.MatOptionModule, i22.MatOptionModule, []), i0.ɵmpd(1073742336, i26.MatSelectModule, i26.MatSelectModule, []), i0.ɵmpd(1073742336, i27._MatMenuDirectivesModule, i27._MatMenuDirectivesModule, []), i0.ɵmpd(1073742336, i27.MatMenuModule, i27.MatMenuModule, []), i0.ɵmpd(1073742336, i39._MatCheckboxRequiredValidatorModule, i39._MatCheckboxRequiredValidatorModule, []), i0.ɵmpd(1073742336, i39.MatCheckboxModule, i39.MatCheckboxModule, []), i0.ɵmpd(1073742336, i40.MatButtonModule, i40.MatButtonModule, []), i0.ɵmpd(1073742336, i41.MatIconModule, i41.MatIconModule, []), i0.ɵmpd(1073742336, i42.A11yModule, i42.A11yModule, []), i0.ɵmpd(1073742336, i28.MatTooltipModule, i28.MatTooltipModule, []), i0.ɵmpd(1073742336, i43.MatTabsModule, i43.MatTabsModule, []), i0.ɵmpd(1073742336, i44.MatDividerModule, i44.MatDividerModule, []), i0.ɵmpd(1073742336, i45.MatChipsModule, i45.MatChipsModule, []), i0.ɵmpd(1073742336, i30.MatAutocompleteModule, i30.MatAutocompleteModule, []), i0.ɵmpd(1073742336, i46.ScrollToModule, i46.ScrollToModule, []), i0.ɵmpd(1073742336, i31.MatDialogModule, i31.MatDialogModule, []), i0.ɵmpd(1073742336, i47.CdkTableModule, i47.CdkTableModule, []), i0.ɵmpd(1073742336, i48.MatTableModule, i48.MatTableModule, []), i0.ɵmpd(1073742336, i49.CdkAccordionModule, i49.CdkAccordionModule, []), i0.ɵmpd(1073742336, i50.MatExpansionModule, i50.MatExpansionModule, []), i0.ɵmpd(1073742336, i51.MatBadgeModule, i51.MatBadgeModule, []), i0.ɵmpd(1073742336, i52.MatRadioModule, i52.MatRadioModule, []), i0.ɵmpd(1073742336, i53.ExpandDetailsModule, i53.ExpandDetailsModule, []), i0.ɵmpd(1073742336, i54.SubstanceTextSearchModule, i54.SubstanceTextSearchModule, []), i0.ɵmpd(1073742336, i55.RouterModule, i55.RouterModule, [[2, i55.ɵangular_packages_router_router_a], [2, i55.Router]]), i0.ɵmpd(1073742336, i56.SubstanceImageModule, i56.SubstanceImageModule, []), i0.ɵmpd(1073742336, i57.SubstanceSelectorModule, i57.SubstanceSelectorModule, []), i0.ɵmpd(1073742336, i22.MatLineModule, i22.MatLineModule, []), i0.ɵmpd(1073742336, i58.MatListModule, i58.MatListModule, []), i0.ɵmpd(1073742336, i59.FileSelectModule, i59.FileSelectModule, []), i0.ɵmpd(1073742336, i60.MatButtonToggleModule, i60.MatButtonToggleModule, []), i0.ɵmpd(1073742336, i61.NgxJsonViewerModule, i61.NgxJsonViewerModule, []), i0.ɵmpd(1073742336, i62.SubstanceFormModule, i62.SubstanceFormModule, []), i0.ɵmpd(1073742336, i63.MatProgressBarModule, i63.MatProgressBarModule, []), i0.ɵmpd(1073742336, i64.LoadingModule, i64.LoadingModule, []), i0.ɵmpd(1073742336, i65.NameResolverModule, i65.NameResolverModule, []), i0.ɵmpd(1073742336, i1.SubstanceFormPolymerClassificationModule, i1.SubstanceFormPolymerClassificationModule, []), i0.ɵmpd(256, i45.MAT_CHIPS_DEFAULT_OPTIONS, { separatorKeyCodes: [i66.ENTER] }, []), i0.ɵmpd(1024, i55.ROUTES, function () { return [[]]; }, []), i0.ɵmpd(256, i67.DYNAMIC_COMPONENT, i68.SubstanceFormPolymerClassificationComponent, [])]); });\nexport { SubstanceFormPolymerClassificationModuleNgFactory as SubstanceFormPolymerClassificationModuleNgFactory };\n","import { Output, EventEmitter } from '@angular/core';\n\nexport abstract class SubstanceFormBase {\n    analyticsEventCategory: string;\n    @Output() menuLabelUpdate = new EventEmitter<string>();\n    @Output() hiddenStateUpdate = new EventEmitter<boolean>();\n    @Output() canAddItemUpdate = new EventEmitter<boolean>();\n    @Output() componentDestroyed = new EventEmitter<void>();\n}\n"],"sourceRoot":"webpack:///"}