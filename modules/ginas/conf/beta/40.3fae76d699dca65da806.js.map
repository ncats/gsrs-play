{"version":3,"sources":["./src/app/core/substance-form/base-classes/substance-form-base.ts","./src/app/core/substance-form/physical-modifications/substance-form-physical-modifications.module.ts","./src/app/core/substance-form/physical-modifications/physical-modification-form.component.ts","./src/app/core/substance-form/physical-modifications/physical-modification-form.component.ts.pre-build-optimizer.js","./src/app/core/substance-form/physical-modifications/physical-modification-form.component.ngfactory.js.pre-build-optimizer.js","./src/app/core/substance-form/physical-modifications/physical-modification-form.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/core/substance-form/physical-modifications/physical-modification-form.component.html","./src/app/core/substance-form/physical-modifications/substance-form-physical-modifications-card.component.ts","./src/app/core/substance-form/physical-modifications/substance-form-physical-modifications-card.component.ts.pre-build-optimizer.js","./src/app/core/substance-form/physical-modifications/substance-form-physical-modifications.service.ts","./src/app/core/substance-form/physical-modifications/substance-form-physical-modifications.service.ts.pre-build-optimizer.js","./src/app/core/substance-form/physical-modifications/substance-form-physical-modifications-card.component.ngfactory.js.pre-build-optimizer.js","./src/app/core/substance-form/physical-modifications/substance-form-physical-modifications-card.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/core/substance-form/physical-modifications/substance-form-physical-modifications-card.component.html","./src/app/core/substance-form/physical-modifications/substance-form-physical-modifications.module.ngfactory.js.pre-build-optimizer.js"],"names":["menuLabelUpdate","hiddenStateUpdate","canAddItemUpdate","componentDestroyed","cvService","dialog","utilsService","overlayContainerService","substanceFormService","modDeleted","modTypeList","modRoleList","modProcessList","subscriptions","ngOnInit","this","getVocabularies","overlayContainer","getContainerElement","get","privateMod","set","mod","enumerable","configurable","getDomainVocabulary","subscribe","response","list","deleteMod","$$deletedCode","newUUID","deleteTimer","setTimeout","emit","emitOtherLinkUpdate","undoDelete","clearTimeout","openParameterDialog","parameters","dialogRef","open","data","width","style","zIndex","dialogSubscription","afterClosed","newParams","push","displayAmount","amt","RenderType_PhysicalModificationFormComponent","encapsulation","styles","View_PhysicalModificationFormComponent_1","_l","ad","View_PhysicalModificationFormComponent_3","View_PhysicalModificationFormComponent_4","View_PhysicalModificationFormComponent_2","View_PhysicalModificationFormComponent_0","physicalModificationRole","$event","_v","_handleInput","target","value","en","onTouched","_compositionStart","_compositionEnd","_focusChanged","_onInput","_co","modificationGroup","substanceFormPhysicalModificationsService","scrollToService","gaService","analyticsEventCategory","_this","ngAfterViewInit","physicalSubscription","substancePhysicalModifications","modifications","ngOnDestroy","forEach","subscription","unsubscribe","addItem","addStructuralModification","addSubstancePhysicalModification","scrollToElement","deletePhysicalModification","modification","deleteSubstancePhysicalModification","initSubtanceForm","substance","physicalModifications","resetState","propertyEmitter","next","asObservable","unshift","physicalModification","physicalModIndex","findIndex","physicalMod","splice","SubstanceFormPhysicalModificationsService","ngInjectableDef","factory","token","providedIn","RenderType_SubstanceFormPhysicalModificationsCardComponent","View_SubstanceFormPhysicalModificationsCardComponent_2","View_SubstanceFormPhysicalModificationsCardComponent_1","View_SubstanceFormPhysicalModificationsCardComponent_0","View_SubstanceFormPhysicalModificationsCardComponent_Host_0","_ck","SubstanceFormPhysicalModificationsCardComponentNgFactory","SubstanceFormPhysicalModificationsModuleNgFactory","separatorKeyCodes"],"mappings":"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","file":"40.3fae76d699dca65da806.js","sourcesContent":["import { Output, EventEmitter } from '@angular/core';\n\nexport abstract class SubstanceFormBase {\n    analyticsEventCategory: string;\n    @Output() menuLabelUpdate = new EventEmitter<string>();\n    @Output() hiddenStateUpdate = new EventEmitter<boolean>();\n    @Output() canAddItemUpdate = new EventEmitter<boolean>();\n    @Output() componentDestroyed = new EventEmitter<void>();\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\nimport { SubstanceFormModule } from '../substance-form.module';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ScrollToModule } from '../../scroll-to/scroll-to.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatInputModule } from '@angular/material/input';\nimport {SubstanceFormPhysicalModificationsCardComponent} from '@gsrs-core/substance-form/physical-modifications/substance-form-physical-modifications-card.component';\nimport { PhysicalModificationFormComponent } from './physical-modification-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(SubstanceFormPhysicalModificationsCardComponent),\n    SubstanceFormModule,\n    MatDividerModule,\n    MatIconModule,\n    MatButtonModule,\n    ScrollToModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatPaginatorModule,\n    MatInputModule\n  ],\n  declarations: [\n    SubstanceFormPhysicalModificationsCardComponent,\n    PhysicalModificationFormComponent\n  ]\n})\nexport class SubstanceFormPhysicalModificationsModule { }\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {PhysicalModification, SubstanceAmount, SubstanceRelated, SubstanceSummary} from '@gsrs-core/substance';\nimport {ControlledVocabularyService, VocabularyTerm} from '@gsrs-core/controlled-vocabulary';\nimport {Subscription} from 'rxjs';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UtilsService} from '@gsrs-core/utils';\nimport {OverlayContainer} from '@angular/cdk/overlay';\nimport {SubstanceFormService} from '@gsrs-core/substance-form/substance-form.service';\nimport {AmountFormDialogComponent} from '@gsrs-core/substance-form/amount-form-dialog/amount-form-dialog.component';\nimport {PropertyParameterDialogComponent} from '@gsrs-core/substance-form/property-parameter-dialog/property-parameter-dialog.component';\nimport {PhysicalParameterFormDialogComponent} from '@gsrs-core/substance-form/physical-parameter-form-dialog/physical-parameter-form-dialog.component';\n\n@Component({\n  selector: 'app-physical-modification-form',\n  templateUrl: './physical-modification-form.component.html',\n  styleUrls: ['./physical-modification-form.component.scss']\n})\nexport class PhysicalModificationFormComponent implements OnInit {\n  private privateMod: PhysicalModification;\n  @Output() modDeleted = new EventEmitter<PhysicalModification>();\n  modTypeList: Array<VocabularyTerm> = [];\n  modRoleList: Array<VocabularyTerm> = [];\n  modProcessList: Array<VocabularyTerm> = [];\n  deleteTimer: any;\n  private subscriptions: Array<Subscription> = [];\n  private overlayContainer: HTMLElement;\n  siteDisplay: string;\n\n  constructor(\n    private cvService: ControlledVocabularyService,\n    private dialog: MatDialog,\n    private utilsService: UtilsService,\n    private overlayContainerService: OverlayContainer,\n    private substanceFormService: SubstanceFormService\n  ) { }\n  ngOnInit() {\n    this.getVocabularies();\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\n  }\n\n  @Input()\n  set mod(mod: PhysicalModification) {\n    this.privateMod = mod;\n\n  }\n\n  get mod(): PhysicalModification {\n    return this.privateMod;\n  }\n\n  getVocabularies(): void {\n    this.cvService.getDomainVocabulary('PHYSICAL_MODIFICATION_ROLE').subscribe(response => {\n      this.modRoleList = response['PHYSICAL_MODIFICATION_ROLE'].list;\n    });\n  }\n\n  deleteMod(): void {\n    this.privateMod.$$deletedCode = this.utilsService.newUUID();\n    if (!this.privateMod\n    ) {\n      this.deleteTimer = setTimeout(() => {\n        this.modDeleted.emit(this.mod);\n        this.substanceFormService.emitOtherLinkUpdate();\n      }, 1000);\n    }\n  }\n\n  undoDelete(): void {\n    clearTimeout(this.deleteTimer);\n    delete this.privateMod.$$deletedCode;\n  }\n\n  openParameterDialog(): void {\n    if (!this.mod.parameters) {\n      this.mod.parameters = [];\n    }\n    const dialogRef = this.dialog.open(PhysicalParameterFormDialogComponent, {\n      data: this.mod.parameters,\n      width: '1080px'\n    });\n    this.overlayContainer.style.zIndex = '1002';\n\n    const dialogSubscription = dialogRef.afterClosed().subscribe(newParams => {\n      this.overlayContainer.style.zIndex = null;\n      if (newParams) {\n        this.mod.parameters = newParams;\n      }\n    });\n    this.subscriptions.push(dialogSubscription);\n  }\n\n  displayAmount(amt: SubstanceAmount): string {\n      return this.utilsService.displayAmount(amt);\n  }\n\n\n}\n","import { EventEmitter, OnInit } from '@angular/core';\nimport { PhysicalModification, SubstanceAmount } from '@gsrs-core/substance';\nimport { ControlledVocabularyService } from '@gsrs-core/controlled-vocabulary';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UtilsService } from '@gsrs-core/utils';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { SubstanceFormService } from '@gsrs-core/substance-form/substance-form.service';\nimport { PhysicalParameterFormDialogComponent } from '@gsrs-core/substance-form/physical-parameter-form-dialog/physical-parameter-form-dialog.component';\nvar PhysicalModificationFormComponent = /** @class */ (function () {\n    function PhysicalModificationFormComponent(cvService, dialog, utilsService, overlayContainerService, substanceFormService) {\n        this.cvService = cvService;\n        this.dialog = dialog;\n        this.utilsService = utilsService;\n        this.overlayContainerService = overlayContainerService;\n        this.substanceFormService = substanceFormService;\n        this.modDeleted = new EventEmitter();\n        this.modTypeList = [];\n        this.modRoleList = [];\n        this.modProcessList = [];\n        this.subscriptions = [];\n    }\n    PhysicalModificationFormComponent.prototype.ngOnInit = function () {\n        this.getVocabularies();\n        this.overlayContainer = this.overlayContainerService.getContainerElement();\n    };\n    Object.defineProperty(PhysicalModificationFormComponent.prototype, \"mod\", {\n        get: function () {\n            return this.privateMod;\n        },\n        set: function (mod) {\n            this.privateMod = mod;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PhysicalModificationFormComponent.prototype.getVocabularies = function () {\n        var _this = this;\n        this.cvService.getDomainVocabulary('PHYSICAL_MODIFICATION_ROLE').subscribe(function (response) {\n            _this.modRoleList = response['PHYSICAL_MODIFICATION_ROLE'].list;\n        });\n    };\n    PhysicalModificationFormComponent.prototype.deleteMod = function () {\n        var _this = this;\n        this.privateMod.$$deletedCode = this.utilsService.newUUID();\n        if (!this.privateMod) {\n            this.deleteTimer = setTimeout(function () {\n                _this.modDeleted.emit(_this.mod);\n                _this.substanceFormService.emitOtherLinkUpdate();\n            }, 1000);\n        }\n    };\n    PhysicalModificationFormComponent.prototype.undoDelete = function () {\n        clearTimeout(this.deleteTimer);\n        delete this.privateMod.$$deletedCode;\n    };\n    PhysicalModificationFormComponent.prototype.openParameterDialog = function () {\n        var _this = this;\n        if (!this.mod.parameters) {\n            this.mod.parameters = [];\n        }\n        var dialogRef = this.dialog.open(PhysicalParameterFormDialogComponent, {\n            data: this.mod.parameters,\n            width: '1080px'\n        });\n        this.overlayContainer.style.zIndex = '1002';\n        var dialogSubscription = dialogRef.afterClosed().subscribe(function (newParams) {\n            _this.overlayContainer.style.zIndex = null;\n            if (newParams) {\n                _this.mod.parameters = newParams;\n            }\n        });\n        this.subscriptions.push(dialogSubscription);\n    };\n    PhysicalModificationFormComponent.prototype.displayAmount = function (amt) {\n        return this.utilsService.displayAmount(amt);\n    };\n    return PhysicalModificationFormComponent;\n}());\nexport { PhysicalModificationFormComponent };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./physical-modification-form.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../../../node_modules/@angular/material/button/typings/index.ngfactory\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/cdk/a11y\";\nimport * as i5 from \"@angular/platform-browser/animations\";\nimport * as i6 from \"../../../../../node_modules/@angular/material/icon/typings/index.ngfactory\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"../cv-input/cv-input.component.ngfactory\";\nimport * as i10 from \"../cv-input/cv-input.component\";\nimport * as i11 from \"../../controlled-vocabulary/controlled-vocabulary.service\";\nimport * as i12 from \"@angular/material/dialog\";\nimport * as i13 from \"../../utils/utils.service\";\nimport * as i14 from \"@angular/cdk/overlay\";\nimport * as i15 from \"../../utils/data-dictionary.service\";\nimport * as i16 from \"../../auth/auth.service\";\nimport * as i17 from \"../../../../../node_modules/@angular/material/form-field/typings/index.ngfactory\";\nimport * as i18 from \"@angular/material/form-field\";\nimport * as i19 from \"@angular/material/core\";\nimport * as i20 from \"@angular/cdk/bidi\";\nimport * as i21 from \"@angular/cdk/platform\";\nimport * as i22 from \"@angular/forms\";\nimport * as i23 from \"@angular/material/input\";\nimport * as i24 from \"@angular/cdk/text-field\";\nimport * as i25 from \"./physical-modification-form.component\";\nimport * as i26 from \"../substance-form.service\";\nvar styles_PhysicalModificationFormComponent = [i0.styles];\nvar RenderType_PhysicalModificationFormComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_PhysicalModificationFormComponent, data: {} });\nexport { RenderType_PhysicalModificationFormComponent as RenderType_PhysicalModificationFormComponent };\nfunction View_PhysicalModificationFormComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 5, \"div\", [[\"class\", \"notification-backdrop\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Deleted\\u00A0 \"])), (_l()(), i1.ɵeld(2, 0, null, null, 3, \"button\", [[\"mat-icon-button\", \"\"], [\"matTooltip\", \"Undo\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.undoDelete() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(3, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.FocusMonitor, [2, i5.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(4, 0, null, 0, 1, \"mat-icon\", [[\"class\", \"mat-icon notranslate\"], [\"role\", \"img\"], [\"svgIcon\", \"undo\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i6.View_MatIcon_0, i6.RenderType_MatIcon)), i1.ɵdid(5, 9158656, null, 0, i7.MatIcon, [i1.ElementRef, i7.MatIconRegistry, [8, null], [2, i7.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null)], function (_ck, _v) { var currVal_4 = \"undo\"; _ck(_v, 5, 0, currVal_4); }, function (_ck, _v) { var currVal_0 = (i1.ɵnov(_v, 3).disabled || null); var currVal_1 = (i1.ɵnov(_v, 3)._animationMode === \"NoopAnimations\"); _ck(_v, 2, 0, currVal_0, currVal_1); var currVal_2 = i1.ɵnov(_v, 5).inline; var currVal_3 = (((i1.ɵnov(_v, 5).color !== \"primary\") && (i1.ɵnov(_v, 5).color !== \"accent\")) && (i1.ɵnov(_v, 5).color !== \"warn\")); _ck(_v, 4, 0, currVal_2, currVal_3); }); }\nfunction View_PhysicalModificationFormComponent_3(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"param-name\"]], null, null, null, null, null)), (_l()(), i1.ɵted(1, null, [\"\", \" \"]))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.parameterName; _ck(_v, 1, 0, currVal_0); }); }\nfunction View_PhysicalModificationFormComponent_4(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"param-amount\"]], null, null, null, null, null)), (_l()(), i1.ɵted(1, null, [\"\", \"\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.displayAmount(_v.parent.context.$implicit.amount); _ck(_v, 1, 0, currVal_0); }); }\nfunction View_PhysicalModificationFormComponent_2(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 7, \"div\", [[\"class\", \"param-container\"]], null, null, null, null, null)), i1.ɵprd(512, null, i8.ɵNgClassImpl, i8.ɵNgClassR2Impl, [i1.IterableDiffers, i1.KeyValueDiffers, i1.ElementRef, i1.Renderer2]), i1.ɵdid(2, 278528, null, 0, i8.NgClass, [i8.ɵNgClassImpl], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i1.ɵpod(3, { \"bottom-border\": 0 }), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_PhysicalModificationFormComponent_3)), i1.ɵdid(5, 16384, null, 0, i8.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_PhysicalModificationFormComponent_4)), i1.ɵdid(7, 16384, null, 0, i8.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"param-container\"; var currVal_1 = _ck(_v, 3, 0, (_v.context.index < _co.mod.parameters.length)); _ck(_v, 2, 0, currVal_0, currVal_1); var currVal_2 = _v.context.$implicit.parameterName; _ck(_v, 5, 0, currVal_2); var currVal_3 = _v.context.$implicit.amount; _ck(_v, 7, 0, currVal_3); }, null); }\nexport function View_PhysicalModificationFormComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 42, \"div\", [[\"class\", \"physical-form-container\"]], null, null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_PhysicalModificationFormComponent_1)), i1.ɵdid(2, 16384, null, 0, i8.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵeld(3, 0, null, null, 39, \"div\", [[\"class\", \"form-row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(4, 0, null, null, 4, \"div\", [[\"class\", \"delete-container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(5, 0, null, null, 3, \"button\", [[\"mat-icon-button\", \"\"], [\"matTooltip\", \"Delete name\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.deleteMod() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(6, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.FocusMonitor, [2, i5.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(7, 0, null, 0, 1, \"mat-icon\", [[\"class\", \"mat-icon notranslate\"], [\"role\", \"img\"], [\"svgIcon\", \"delete_forever\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i6.View_MatIcon_0, i6.RenderType_MatIcon)), i1.ɵdid(8, 9158656, null, 0, i7.MatIcon, [i1.ElementRef, i7.MatIconRegistry, [8, null], [2, i7.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null), (_l()(), i1.ɵeld(9, 0, null, null, 1, \"app-cv-input\", [[\"class\", \"type\"], [\"title\", \"Modification Role\"]], null, [[null, \"valueChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"valueChange\" === en)) {\n        var pd_0 = ((_co.mod.physicalModificationRole = $event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i9.View_CvInputComponent_0, i9.RenderType_CvInputComponent)), i1.ɵdid(10, 245760, null, 0, i10.CvInputComponent, [i11.ControlledVocabularyService, i12.MatDialog, i13.UtilsService, i14.OverlayContainer, i15.DataDictionaryService, i16.AuthService], { vocabulary: [0, \"vocabulary\"], title: [1, \"title\"], model: [2, \"model\"] }, { valueChange: \"valueChange\" }), (_l()(), i1.ɵeld(11, 0, null, null, 9, \"div\", [[\"class\", \"amount\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(12, 0, null, null, 1, \"div\", [[\"class\", \"label amt-label\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Parameters \"])), (_l()(), i1.ɵeld(14, 0, null, null, 3, \"button\", [[\"mat-icon-button\", \"\"], [\"matTooltip\", \"add / edit parameters\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.openParameterDialog() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(15, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.FocusMonitor, [2, i5.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(16, 0, null, 0, 1, \"mat-icon\", [[\"class\", \"mat-icon notranslate\"], [\"role\", \"img\"], [\"svgIcon\", \"add_circle_outline\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i6.View_MatIcon_0, i6.RenderType_MatIcon)), i1.ɵdid(17, 9158656, null, 0, i7.MatIcon, [i1.ElementRef, i7.MatIconRegistry, [8, null], [2, i7.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null), (_l()(), i1.ɵeld(18, 0, null, null, 2, \"div\", [[\"class\", \"param-display\"]], null, null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_PhysicalModificationFormComponent_2)), i1.ɵdid(20, 278528, null, 0, i8.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i1.ɵeld(21, 0, null, null, 21, \"div\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(22, 0, null, null, 20, \"mat-form-field\", [[\"class\", \"group mat-form-field\"]], [[2, \"mat-form-field-appearance-standard\", null], [2, \"mat-form-field-appearance-fill\", null], [2, \"mat-form-field-appearance-outline\", null], [2, \"mat-form-field-appearance-legacy\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-has-label\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-form-field-autofilled\", null], [2, \"mat-focused\", null], [2, \"mat-accent\", null], [2, \"mat-warn\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null], [2, \"_mat-animation-noopable\", null]], null, null, i17.View_MatFormField_0, i17.RenderType_MatFormField)), i1.ɵdid(23, 7520256, null, 9, i18.MatFormField, [i1.ElementRef, i1.ChangeDetectorRef, [2, i19.MAT_LABEL_GLOBAL_OPTIONS], [2, i20.Directionality], [2, i18.MAT_FORM_FIELD_DEFAULT_OPTIONS], i21.Platform, i1.NgZone, [2, i5.ANIMATION_MODULE_TYPE]], null, null), i1.ɵqud(603979776, 1, { _controlNonStatic: 0 }), i1.ɵqud(335544320, 2, { _controlStatic: 0 }), i1.ɵqud(603979776, 3, { _labelChildNonStatic: 0 }), i1.ɵqud(335544320, 4, { _labelChildStatic: 0 }), i1.ɵqud(603979776, 5, { _placeholderChild: 0 }), i1.ɵqud(603979776, 6, { _errorChildren: 1 }), i1.ɵqud(603979776, 7, { _hintChildren: 1 }), i1.ɵqud(603979776, 8, { _prefixChildren: 1 }), i1.ɵqud(603979776, 9, { _suffixChildren: 1 }), (_l()(), i1.ɵeld(33, 0, null, 1, 9, \"input\", [[\"class\", \"mat-input-element mat-form-field-autofill-control\"], [\"matInput\", \"\"], [\"name\", \"group\"], [\"placeholder\", \"Group\"], [\"required\", \"\"]], [[1, \"required\", 0], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null], [2, \"mat-input-server\", null], [1, \"id\", 0], [1, \"placeholder\", 0], [8, \"disabled\", 0], [8, \"required\", 0], [1, \"readonly\", 0], [1, \"aria-describedby\", 0], [1, \"aria-invalid\", 0], [1, \"aria-required\", 0]], [[null, \"ngModelChange\"], [null, \"input\"], [null, \"blur\"], [null, \"compositionstart\"], [null, \"compositionend\"], [null, \"focus\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"input\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 34)._handleInput($event.target.value) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 34).onTouched() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"compositionstart\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 34)._compositionStart() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"compositionend\" === en)) {\n        var pd_3 = (i1.ɵnov(_v, 34)._compositionEnd($event.target.value) !== false);\n        ad = (pd_3 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_4 = (i1.ɵnov(_v, 41)._focusChanged(false) !== false);\n        ad = (pd_4 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_5 = (i1.ɵnov(_v, 41)._focusChanged(true) !== false);\n        ad = (pd_5 && ad);\n    } if ((\"input\" === en)) {\n        var pd_6 = (i1.ɵnov(_v, 41)._onInput() !== false);\n        ad = (pd_6 && ad);\n    } if ((\"ngModelChange\" === en)) {\n        var pd_7 = ((_co.mod.modificationGroup = $event) !== false);\n        ad = (pd_7 && ad);\n    } return ad; }, null, null)), i1.ɵdid(34, 16384, null, 0, i22.DefaultValueAccessor, [i1.Renderer2, i1.ElementRef, [2, i22.COMPOSITION_BUFFER_MODE]], null, null), i1.ɵdid(35, 16384, null, 0, i22.RequiredValidator, [], { required: [0, \"required\"] }, null), i1.ɵprd(1024, null, i22.NG_VALIDATORS, function (p0_0) { return [p0_0]; }, [i22.RequiredValidator]), i1.ɵprd(1024, null, i22.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i22.DefaultValueAccessor]), i1.ɵdid(38, 671744, null, 0, i22.NgModel, [[8, null], [6, i22.NG_VALIDATORS], [8, null], [6, i22.NG_VALUE_ACCESSOR]], { name: [0, \"name\"], model: [1, \"model\"] }, { update: \"ngModelChange\" }), i1.ɵprd(2048, null, i22.NgControl, null, [i22.NgModel]), i1.ɵdid(40, 16384, null, 0, i22.NgControlStatus, [[4, i22.NgControl]], null, null), i1.ɵdid(41, 999424, null, 0, i23.MatInput, [i1.ElementRef, i21.Platform, [6, i22.NgControl], [2, i22.NgForm], [2, i22.FormGroupDirective], i19.ErrorStateMatcher, [8, null], i24.AutofillMonitor, i1.NgZone], { placeholder: [0, \"placeholder\"], required: [1, \"required\"] }, null), i1.ɵprd(2048, [[1, 4], [2, 4]], i18.MatFormFieldControl, null, [i23.MatInput])], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.mod.$$deletedCode; _ck(_v, 2, 0, currVal_0); var currVal_5 = \"delete_forever\"; _ck(_v, 8, 0, currVal_5); var currVal_6 = _co.modRoleList; var currVal_7 = \"Modification Role\"; var currVal_8 = _co.mod.physicalModificationRole; _ck(_v, 10, 0, currVal_6, currVal_7, currVal_8); var currVal_13 = \"add_circle_outline\"; _ck(_v, 17, 0, currVal_13); var currVal_14 = _co.mod.parameters; _ck(_v, 20, 0, currVal_14); var currVal_54 = \"\"; _ck(_v, 35, 0, currVal_54); var currVal_55 = \"group\"; var currVal_56 = _co.mod.modificationGroup; _ck(_v, 38, 0, currVal_55, currVal_56); var currVal_57 = \"Group\"; var currVal_58 = \"\"; _ck(_v, 41, 0, currVal_57, currVal_58); }, function (_ck, _v) { var currVal_1 = (i1.ɵnov(_v, 6).disabled || null); var currVal_2 = (i1.ɵnov(_v, 6)._animationMode === \"NoopAnimations\"); _ck(_v, 5, 0, currVal_1, currVal_2); var currVal_3 = i1.ɵnov(_v, 8).inline; var currVal_4 = (((i1.ɵnov(_v, 8).color !== \"primary\") && (i1.ɵnov(_v, 8).color !== \"accent\")) && (i1.ɵnov(_v, 8).color !== \"warn\")); _ck(_v, 7, 0, currVal_3, currVal_4); var currVal_9 = (i1.ɵnov(_v, 15).disabled || null); var currVal_10 = (i1.ɵnov(_v, 15)._animationMode === \"NoopAnimations\"); _ck(_v, 14, 0, currVal_9, currVal_10); var currVal_11 = i1.ɵnov(_v, 17).inline; var currVal_12 = (((i1.ɵnov(_v, 17).color !== \"primary\") && (i1.ɵnov(_v, 17).color !== \"accent\")) && (i1.ɵnov(_v, 17).color !== \"warn\")); _ck(_v, 16, 0, currVal_11, currVal_12); var currVal_15 = (i1.ɵnov(_v, 23).appearance == \"standard\"); var currVal_16 = (i1.ɵnov(_v, 23).appearance == \"fill\"); var currVal_17 = (i1.ɵnov(_v, 23).appearance == \"outline\"); var currVal_18 = (i1.ɵnov(_v, 23).appearance == \"legacy\"); var currVal_19 = i1.ɵnov(_v, 23)._control.errorState; var currVal_20 = i1.ɵnov(_v, 23)._canLabelFloat; var currVal_21 = i1.ɵnov(_v, 23)._shouldLabelFloat(); var currVal_22 = i1.ɵnov(_v, 23)._hasFloatingLabel(); var currVal_23 = i1.ɵnov(_v, 23)._hideControlPlaceholder(); var currVal_24 = i1.ɵnov(_v, 23)._control.disabled; var currVal_25 = i1.ɵnov(_v, 23)._control.autofilled; var currVal_26 = i1.ɵnov(_v, 23)._control.focused; var currVal_27 = (i1.ɵnov(_v, 23).color == \"accent\"); var currVal_28 = (i1.ɵnov(_v, 23).color == \"warn\"); var currVal_29 = i1.ɵnov(_v, 23)._shouldForward(\"untouched\"); var currVal_30 = i1.ɵnov(_v, 23)._shouldForward(\"touched\"); var currVal_31 = i1.ɵnov(_v, 23)._shouldForward(\"pristine\"); var currVal_32 = i1.ɵnov(_v, 23)._shouldForward(\"dirty\"); var currVal_33 = i1.ɵnov(_v, 23)._shouldForward(\"valid\"); var currVal_34 = i1.ɵnov(_v, 23)._shouldForward(\"invalid\"); var currVal_35 = i1.ɵnov(_v, 23)._shouldForward(\"pending\"); var currVal_36 = !i1.ɵnov(_v, 23)._animationsEnabled; _ck(_v, 22, 1, [currVal_15, currVal_16, currVal_17, currVal_18, currVal_19, currVal_20, currVal_21, currVal_22, currVal_23, currVal_24, currVal_25, currVal_26, currVal_27, currVal_28, currVal_29, currVal_30, currVal_31, currVal_32, currVal_33, currVal_34, currVal_35, currVal_36]); var currVal_37 = (i1.ɵnov(_v, 35).required ? \"\" : null); var currVal_38 = i1.ɵnov(_v, 40).ngClassUntouched; var currVal_39 = i1.ɵnov(_v, 40).ngClassTouched; var currVal_40 = i1.ɵnov(_v, 40).ngClassPristine; var currVal_41 = i1.ɵnov(_v, 40).ngClassDirty; var currVal_42 = i1.ɵnov(_v, 40).ngClassValid; var currVal_43 = i1.ɵnov(_v, 40).ngClassInvalid; var currVal_44 = i1.ɵnov(_v, 40).ngClassPending; var currVal_45 = i1.ɵnov(_v, 41)._isServer; var currVal_46 = i1.ɵnov(_v, 41).id; var currVal_47 = i1.ɵnov(_v, 41).placeholder; var currVal_48 = i1.ɵnov(_v, 41).disabled; var currVal_49 = i1.ɵnov(_v, 41).required; var currVal_50 = ((i1.ɵnov(_v, 41).readonly && !i1.ɵnov(_v, 41)._isNativeSelect) || null); var currVal_51 = (i1.ɵnov(_v, 41)._ariaDescribedby || null); var currVal_52 = i1.ɵnov(_v, 41).errorState; var currVal_53 = i1.ɵnov(_v, 41).required.toString(); _ck(_v, 33, 1, [currVal_37, currVal_38, currVal_39, currVal_40, currVal_41, currVal_42, currVal_43, currVal_44, currVal_45, currVal_46, currVal_47, currVal_48, currVal_49, currVal_50, currVal_51, currVal_52, currVal_53]); }); }\nexport function View_PhysicalModificationFormComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-physical-modification-form\", [], null, null, null, View_PhysicalModificationFormComponent_0, RenderType_PhysicalModificationFormComponent)), i1.ɵdid(1, 114688, null, 0, i25.PhysicalModificationFormComponent, [i11.ControlledVocabularyService, i12.MatDialog, i13.UtilsService, i14.OverlayContainer, i26.SubstanceFormService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar PhysicalModificationFormComponentNgFactory = i1.ɵccf(\"app-physical-modification-form\", i25.PhysicalModificationFormComponent, View_PhysicalModificationFormComponent_Host_0, { mod: \"mod\" }, { modDeleted: \"modDeleted\" }, []);\nexport { PhysicalModificationFormComponentNgFactory as PhysicalModificationFormComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".physical-form-container[_ngcontent-%COMP%]{padding:30px 10px 12px;position:relative}.form-sub-row[_ngcontent-%COMP%]{max-width:90%}.related-substance[_ngcontent-%COMP%]{max-width:175px}.related-substance[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:150px}.form-row[_ngcontent-%COMP%]   .code-system[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .code-system-type[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .type[_ngcontent-%COMP%]{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-right:15px}.form-row[_ngcontent-%COMP%]   .code-text[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .url[_ngcontent-%COMP%]{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.key-value-pair[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-ms-flex-item-align:start;align-self:flex-start}.key-value-pair[_ngcontent-%COMP%]   .key[_ngcontent-%COMP%]{font-size:11px;padding-bottom:3.5px;line-height:11px;color:rgba(0,0,0,.54);font-weight:400;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}.key-value-pair[_ngcontent-%COMP%]   .value[_ngcontent-%COMP%]{font-size:15.5px}.form-row[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:0 10px;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}.form-actions[_ngcontent-%COMP%]{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;margin:5px 0 10px}.form-content[_ngcontent-%COMP%]{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.group-access[_ngcontent-%COMP%], .location-type[_ngcontent-%COMP%], .mod-type[_ngcontent-%COMP%], .sites[_ngcontent-%COMP%]{width:33%}.amount[_ngcontent-%COMP%], .extent[_ngcontent-%COMP%]{width:40%}.group[_ngcontent-%COMP%]{width:75px}.type[_ngcontent-%COMP%]{max-width:225px}.access[_ngcontent-%COMP%]{width:30%}.name-form-container[_ngcontent-%COMP%]{padding:30px 10px 12px;position:relative}.notification-backdrop[_ngcontent-%COMP%]{position:absolute;top:0;right:0;bottom:0;left:0;display:-webkit-box;display:-ms-flexbox;display:flex;z-index:10;background-color:rgba(255,255,255,.8);-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:30px;font-weight:700;color:#666}.form-row[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}.form-row[_ngcontent-%COMP%]   .delete-container[_ngcontent-%COMP%]{padding:0 10px 8px 0}.form-row[_ngcontent-%COMP%]   .checkbox-container[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .radio-container[_ngcontent-%COMP%]{padding-bottom:18px;padding-right:15px}.form-row[_ngcontent-%COMP%]   .amount[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .domains[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .param-display[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .tags[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .type[_ngcontent-%COMP%]{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-right:15px}.form-row[_ngcontent-%COMP%]   .jurisdiction[_ngcontent-%COMP%]{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.nameorgs-container[_ngcontent-%COMP%], .references-container[_ngcontent-%COMP%]{width:100%}.column-radio[_ngcontent-%COMP%]     .mat-radio-label{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse}.column-radio[_ngcontent-%COMP%]     .mat-radio-label-content{padding-left:0;font-size:11px;padding-bottom:4px;color:rgba(0,0,0,.54);font-weight:400;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}.column-checkbox[_ngcontent-%COMP%]     .mat-checkbox-layout{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.column-checkbox[_ngcontent-%COMP%]     .mat-checkbox-inner-container{margin-right:unset;margin-left:unset}.column-checkbox[_ngcontent-%COMP%]     .mat-checkbox-layout .mat-checkbox-label{padding-left:0;font-size:11px;padding-bottom:2px;color:rgba(0,0,0,.54);font-weight:400;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}.amount[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex;padding-bottom:10px}.amt-label[_ngcontent-%COMP%]{padding-top:11px}.param-display[_ngcontent-%COMP%]{padding-top:10px;width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.param-container[_ngcontent-%COMP%]{width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;padding-bottom:7px;padding-top:7px}.param-container[_ngcontent-%COMP%]   .param-display[_ngcontent-%COMP%]{max-width:40%;padding-right:15px}.param-container[_ngcontent-%COMP%]   .param-amount[_ngcontent-%COMP%]{max-width:60%}\"];\nexport { styles as styles };\n","<div class=\"physical-form-container\">\n  <div *ngIf=\"mod.$$deletedCode\" class=\"notification-backdrop\">\n    Deleted&nbsp;\n    <button mat-icon-button matTooltip=\"Undo\" (click)=\"undoDelete()\">\n      <mat-icon svgIcon=\"undo\"></mat-icon>\n    </button>\n  </div>\n  <div class=\"form-row\">\n    <div class=\"delete-container\">\n      <button mat-icon-button matTooltip=\"Delete name\" (click)=\"deleteMod()\">\n        <mat-icon svgIcon=\"delete_forever\"></mat-icon>\n      </button>\n    </div>\n    <app-cv-input [vocabulary] = \"modRoleList\" class = \"type\" title = \"Modification Role\" (valueChange) = \"mod.physicalModificationRole = $event\" [model] = \"mod.physicalModificationRole\"></app-cv-input>\n    <div class = 'amount'>\n      <div class = \"label amt-label\">\n        Parameters\n      </div>\n      <button mat-icon-button matTooltip=\"add / edit parameters\" (click)=\"(openParameterDialog())\">\n        <mat-icon svgIcon=\"add_circle_outline\"></mat-icon>\n      </button>\n      <div class = 'param-display'>\n        <div *ngFor = \"let param of mod.parameters; index as index\" class = \"param-container\" [ngClass]=\"{'bottom-border': index < mod.parameters.length}\">\n         <div class = \"param-name\" *ngIf = \"param.parameterName\">{{param.parameterName}}\n         </div>\n          <div class = \"param-amount\" *ngIf = \"param.amount\">{{displayAmount(param.amount)}}</div>\n        </div>\n      </div>\n\n    </div>\n    <div>\n      <mat-form-field class=\"group\">\n        <input matInput placeholder=\"Group\" [(ngModel)]=\"mod.modificationGroup\" required name=\"group\" />\n      </mat-form-field>\n    </div>\n\n\n  </div>\n</div>\n","import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\nimport {SubstanceCardBaseFilteredList, SubstanceCardBaseList} from '@gsrs-core/substance-form/base-classes/substance-form-base-filtered-list';\nimport {PhysicalModification} from '@gsrs-core/substance';\nimport {Subscription} from 'rxjs';\nimport {ScrollToService} from '@gsrs-core/scroll-to/scroll-to.service';\nimport {GoogleAnalyticsService} from '@gsrs-core/google-analytics';\nimport { SubstanceFormPhysicalModificationsService } from './substance-form-physical-modifications.service';\n\n@Component({\n  selector: 'app-substance-form-physical-modifications-card',\n  templateUrl: './substance-form-physical-modifications-card.component.html',\n  styleUrls: ['./substance-form-physical-modifications-card.component.scss']\n})\nexport class SubstanceFormPhysicalModificationsCardComponent extends SubstanceCardBaseFilteredList<PhysicalModification>\n  implements OnInit, AfterViewInit, OnDestroy, SubstanceCardBaseList {\n  modifications: Array<PhysicalModification>;\n  private subscriptions: Array<Subscription> = [];\n\n  constructor(\n    private substanceFormPhysicalModificationsService: SubstanceFormPhysicalModificationsService,\n    private scrollToService: ScrollToService,\n    public gaService: GoogleAnalyticsService\n  ) {\n    super(gaService);\n    this.analyticsEventCategory = 'substance form agent modifications';\n  }\n\n  ngOnInit() {\n    this.canAddItemUpdate.emit(true);\n    this.menuLabelUpdate.emit('Physical Modifications');\n  }\n\n  ngAfterViewInit() {\n    const physicalSubscription = this.substanceFormPhysicalModificationsService.substancePhysicalModifications.subscribe(modifications => {\n      this.modifications = modifications;\n    });\n    this.subscriptions.push(physicalSubscription);\n  }\n\n  ngOnDestroy() {\n    this.componentDestroyed.emit();\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  addItem(): void {\n    this.addStructuralModification();\n  }\n\n  addStructuralModification(): void {\n    this.substanceFormPhysicalModificationsService.addSubstancePhysicalModification();\n    setTimeout(() => {\n      this.scrollToService.scrollToElement(`substance-physical-modification-0`, 'center');\n    });\n  }\n\n  deletePhysicalModification(modification: PhysicalModification): void {\n    this.substanceFormPhysicalModificationsService.deleteSubstancePhysicalModification(modification);\n  }\n}\n","import * as tslib_1 from \"tslib\";\nimport { AfterViewInit, OnDestroy, OnInit } from '@angular/core';\nimport { SubstanceCardBaseFilteredList } from '@gsrs-core/substance-form/base-classes/substance-form-base-filtered-list';\nimport { ScrollToService } from '@gsrs-core/scroll-to/scroll-to.service';\nimport { GoogleAnalyticsService } from '@gsrs-core/google-analytics';\nimport { SubstanceFormPhysicalModificationsService } from './substance-form-physical-modifications.service';\nvar SubstanceFormPhysicalModificationsCardComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(SubstanceFormPhysicalModificationsCardComponent, _super);\n    function SubstanceFormPhysicalModificationsCardComponent(substanceFormPhysicalModificationsService, scrollToService, gaService) {\n        var _this = _super.call(this, gaService) || this;\n        _this.substanceFormPhysicalModificationsService = substanceFormPhysicalModificationsService;\n        _this.scrollToService = scrollToService;\n        _this.gaService = gaService;\n        _this.subscriptions = [];\n        _this.analyticsEventCategory = 'substance form agent modifications';\n        return _this;\n    }\n    SubstanceFormPhysicalModificationsCardComponent.prototype.ngOnInit = function () {\n        this.canAddItemUpdate.emit(true);\n        this.menuLabelUpdate.emit('Physical Modifications');\n    };\n    SubstanceFormPhysicalModificationsCardComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        var physicalSubscription = this.substanceFormPhysicalModificationsService.substancePhysicalModifications.subscribe(function (modifications) {\n            _this.modifications = modifications;\n        });\n        this.subscriptions.push(physicalSubscription);\n    };\n    SubstanceFormPhysicalModificationsCardComponent.prototype.ngOnDestroy = function () {\n        this.componentDestroyed.emit();\n        this.subscriptions.forEach(function (subscription) {\n            subscription.unsubscribe();\n        });\n    };\n    SubstanceFormPhysicalModificationsCardComponent.prototype.addItem = function () {\n        this.addStructuralModification();\n    };\n    SubstanceFormPhysicalModificationsCardComponent.prototype.addStructuralModification = function () {\n        var _this = this;\n        this.substanceFormPhysicalModificationsService.addSubstancePhysicalModification();\n        setTimeout(function () {\n            _this.scrollToService.scrollToElement(\"substance-physical-modification-0\", 'center');\n        });\n    };\n    SubstanceFormPhysicalModificationsCardComponent.prototype.deletePhysicalModification = function (modification) {\n        this.substanceFormPhysicalModificationsService.deleteSubstancePhysicalModification(modification);\n    };\n    return SubstanceFormPhysicalModificationsCardComponent;\n}(SubstanceCardBaseFilteredList));\nexport { SubstanceFormPhysicalModificationsCardComponent };\n","import { Injectable } from '@angular/core';\nimport { SubstanceFormServiceBase } from '../base-classes/substance-form-service-base';\nimport { SubstanceFormPhysicalModificationsModule } from './substance-form-physical-modifications.module';\nimport { SubstanceFormService } from '../substance-form.service';\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { PhysicalModification } from '@gsrs-core/substance/substance.model';\n\n@Injectable({\n  providedIn: SubstanceFormPhysicalModificationsModule\n})\nexport class SubstanceFormPhysicalModificationsService extends SubstanceFormServiceBase<Array<PhysicalModification>> {\n\n  constructor(\n    public substanceFormService: SubstanceFormService\n  ) {\n    super(substanceFormService);\n  }\n\n  initSubtanceForm(): void {\n    super.initSubtanceForm();\n    const subscription = this.substanceFormService.substance.subscribe(substance => {\n      this.substance = substance;\n      if (!this.substance.modifications) {\n        this.substance.modifications = {};\n      }\n      if (!this.substance.modifications.physicalModifications) {\n        this.substance.modifications.physicalModifications = [];\n      }\n      this.substanceFormService.resetState();\n      this.propertyEmitter.next(this.substance.modifications.physicalModifications);\n    });\n    this.subscriptions.push(subscription);\n  }\n\n  get substancePhysicalModifications(): Observable<Array<PhysicalModification>> {\n    return this.propertyEmitter.asObservable();\n  }\n\n  addSubstancePhysicalModification(): void {\n    const newPhysicalModifications: PhysicalModification = {};\n    this.substance.modifications.physicalModifications.unshift(newPhysicalModifications);\n    this.propertyEmitter.next(this.substance.modifications.physicalModifications);\n  }\n\n  deleteSubstancePhysicalModification(physicalModification: PhysicalModification): void {\n    const physicalModIndex = this.substance.modifications.physicalModifications.findIndex(\n      physicalMod => physicalModification.$$deletedCode === physicalMod.$$deletedCode);\n    if (physicalModIndex > -1) {\n      this.substance.modifications.physicalModifications.splice(physicalModIndex, 1);\n      this.propertyEmitter.next(this.substance.modifications.physicalModifications);\n    }\n  }\n}\n","import * as tslib_1 from \"tslib\";\nimport { SubstanceFormServiceBase } from '../base-classes/substance-form-service-base';\nimport { SubstanceFormService } from '../substance-form.service';\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../substance-form.service\";\nimport * as i2 from \"./substance-form-physical-modifications.module\";\nvar SubstanceFormPhysicalModificationsService = /** @class */ (function (_super) {\n    tslib_1.__extends(SubstanceFormPhysicalModificationsService, _super);\n    function SubstanceFormPhysicalModificationsService(substanceFormService) {\n        var _this = _super.call(this, substanceFormService) || this;\n        _this.substanceFormService = substanceFormService;\n        return _this;\n    }\n    SubstanceFormPhysicalModificationsService.prototype.initSubtanceForm = function () {\n        var _this = this;\n        _super.prototype.initSubtanceForm.call(this);\n        var subscription = this.substanceFormService.substance.subscribe(function (substance) {\n            _this.substance = substance;\n            if (!_this.substance.modifications) {\n                _this.substance.modifications = {};\n            }\n            if (!_this.substance.modifications.physicalModifications) {\n                _this.substance.modifications.physicalModifications = [];\n            }\n            _this.substanceFormService.resetState();\n            _this.propertyEmitter.next(_this.substance.modifications.physicalModifications);\n        });\n        this.subscriptions.push(subscription);\n    };\n    Object.defineProperty(SubstanceFormPhysicalModificationsService.prototype, \"substancePhysicalModifications\", {\n        get: function () {\n            return this.propertyEmitter.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SubstanceFormPhysicalModificationsService.prototype.addSubstancePhysicalModification = function () {\n        var newPhysicalModifications = {};\n        this.substance.modifications.physicalModifications.unshift(newPhysicalModifications);\n        this.propertyEmitter.next(this.substance.modifications.physicalModifications);\n    };\n    SubstanceFormPhysicalModificationsService.prototype.deleteSubstancePhysicalModification = function (physicalModification) {\n        var physicalModIndex = this.substance.modifications.physicalModifications.findIndex(function (physicalMod) { return physicalModification.$$deletedCode === physicalMod.$$deletedCode; });\n        if (physicalModIndex > -1) {\n            this.substance.modifications.physicalModifications.splice(physicalModIndex, 1);\n            this.propertyEmitter.next(this.substance.modifications.physicalModifications);\n        }\n    };\n    SubstanceFormPhysicalModificationsService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function SubstanceFormPhysicalModificationsService_Factory() { return new SubstanceFormPhysicalModificationsService(i0.ɵɵinject(i1.SubstanceFormService)); }, token: SubstanceFormPhysicalModificationsService, providedIn: i2.SubstanceFormPhysicalModificationsModule });\n    return SubstanceFormPhysicalModificationsService;\n}(SubstanceFormServiceBase));\nexport { SubstanceFormPhysicalModificationsService };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./substance-form-physical-modifications-card.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../../../node_modules/@angular/material/divider/typings/index.ngfactory\";\nimport * as i3 from \"@angular/material/divider\";\nimport * as i4 from \"../../scroll-to/scroll-to-target.directive\";\nimport * as i5 from \"../../scroll-to/scroll-to.service\";\nimport * as i6 from \"./physical-modification-form.component.ngfactory\";\nimport * as i7 from \"./physical-modification-form.component\";\nimport * as i8 from \"../../controlled-vocabulary/controlled-vocabulary.service\";\nimport * as i9 from \"@angular/material/dialog\";\nimport * as i10 from \"../../utils/utils.service\";\nimport * as i11 from \"@angular/cdk/overlay\";\nimport * as i12 from \"../substance-form.service\";\nimport * as i13 from \"@angular/common\";\nimport * as i14 from \"./substance-form-physical-modifications-card.component\";\nimport * as i15 from \"./substance-form-physical-modifications.service\";\nimport * as i16 from \"../../google-analytics/google-analytics.service\";\nvar styles_SubstanceFormPhysicalModificationsCardComponent = [i0.styles];\nvar RenderType_SubstanceFormPhysicalModificationsCardComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_SubstanceFormPhysicalModificationsCardComponent, data: {} });\nexport { RenderType_SubstanceFormPhysicalModificationsCardComponent as RenderType_SubstanceFormPhysicalModificationsCardComponent };\nfunction View_SubstanceFormPhysicalModificationsCardComponent_2(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"mat-divider\", [[\"class\", \"form-divider mat-divider\"], [\"role\", \"separator\"]], [[1, \"aria-orientation\", 0], [2, \"mat-divider-vertical\", null], [2, \"mat-divider-horizontal\", null], [2, \"mat-divider-inset\", null]], null, null, i2.View_MatDivider_0, i2.RenderType_MatDivider)), i1.ɵdid(1, 49152, null, 0, i3.MatDivider, [], { inset: [0, \"inset\"] }, null)], function (_ck, _v) { var currVal_4 = true; _ck(_v, 1, 0, currVal_4); }, function (_ck, _v) { var currVal_0 = (i1.ɵnov(_v, 1).vertical ? \"vertical\" : \"horizontal\"); var currVal_1 = i1.ɵnov(_v, 1).vertical; var currVal_2 = !i1.ɵnov(_v, 1).vertical; var currVal_3 = i1.ɵnov(_v, 1).inset; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3); }); }\nfunction View_SubstanceFormPhysicalModificationsCardComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 5, \"div\", [[\"appScrollToTarget\", \"\"], [\"class\", \"alternate-backgrounds\"]], [[8, \"id\", 0]], null, null, null, null)), i1.ɵdid(1, 4341760, null, 0, i4.ScrollToTargetDirective, [i1.ElementRef, i5.ScrollToService], null, null), (_l()(), i1.ɵeld(2, 0, null, null, 1, \"app-physical-modification-form\", [], null, [[null, \"modDeleted\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"modDeleted\" === en)) {\n        var pd_0 = (_co.deletePhysicalModification($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i6.View_PhysicalModificationFormComponent_0, i6.RenderType_PhysicalModificationFormComponent)), i1.ɵdid(3, 114688, null, 0, i7.PhysicalModificationFormComponent, [i8.ControlledVocabularyService, i9.MatDialog, i10.UtilsService, i11.OverlayContainer, i12.SubstanceFormService], { mod: [0, \"mod\"] }, { modDeleted: \"modDeleted\" }), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_SubstanceFormPhysicalModificationsCardComponent_2)), i1.ɵdid(5, 16384, null, 0, i13.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var currVal_1 = _v.context.$implicit; _ck(_v, 3, 0, currVal_1); var currVal_2 = !_v.context.last; _ck(_v, 5, 0, currVal_2); }, function (_ck, _v) { var currVal_0 = (\"substance-physical-modification-\" + _v.context.index); _ck(_v, 0, 0, currVal_0); }); }\nexport function View_SubstanceFormPhysicalModificationsCardComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"flex-row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 0, \"span\", [[\"class\", \"middle-fill\"]], null, null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_SubstanceFormPhysicalModificationsCardComponent_1)), i1.ɵdid(3, 278528, null, 0, i13.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.modifications; _ck(_v, 3, 0, currVal_0); }, null); }\nexport function View_SubstanceFormPhysicalModificationsCardComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-substance-form-physical-modifications-card\", [], null, null, null, View_SubstanceFormPhysicalModificationsCardComponent_0, RenderType_SubstanceFormPhysicalModificationsCardComponent)), i1.ɵdid(1, 4440064, null, 0, i14.SubstanceFormPhysicalModificationsCardComponent, [i15.SubstanceFormPhysicalModificationsService, i5.ScrollToService, i16.GoogleAnalyticsService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar SubstanceFormPhysicalModificationsCardComponentNgFactory = i1.ɵccf(\"app-substance-form-physical-modifications-card\", i14.SubstanceFormPhysicalModificationsCardComponent, View_SubstanceFormPhysicalModificationsCardComponent_Host_0, {}, { menuLabelUpdate: \"menuLabelUpdate\", hiddenStateUpdate: \"hiddenStateUpdate\", canAddItemUpdate: \"canAddItemUpdate\", componentDestroyed: \"componentDestroyed\" }, []);\nexport { SubstanceFormPhysicalModificationsCardComponentNgFactory as SubstanceFormPhysicalModificationsCardComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".mat-divider.mat-divider-inset[_ngcontent-%COMP%]{margin-left:0}.substance-form-row[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.mat-divider[_ngcontent-%COMP%]{border-top-color:rgba(0,0,0,.12)}.code[_ngcontent-%COMP%]:nth-child(odd){background-color:rgba(68,138,255,.07)}.code[_ngcontent-%COMP%]:nth-child(odd)     .mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover{background-color:rgba(68,138,255,.15)}.code[_ngcontent-%COMP%]:nth-child(even)     .mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover{background-color:rgba(128,128,128,.15)}.code[_ngcontent-%COMP%]     .mat-expansion-panel, .code[_ngcontent-%COMP%]     .mat-table, .code[_ngcontent-%COMP%]     textarea{background-color:transparent}\"];\nexport { styles as styles };\n","<div class=\"flex-row\">\n  <span class=\"middle-fill\"></span>\n  <!-- <button mat-button (click)=\"addStructuralModification()\">\n    Add Modification <mat-icon svgIcon=\"add_circle_outline\"></mat-icon>\n  </button> -->\n</div>\n  <div  class = \"alternate-backgrounds\" *ngFor=\"let mod of modifications; last as isLast; index as index\"  appScrollToTarget [id]=\"'substance-physical-modification-' + index\" >\n    <app-physical-modification-form [mod]=\"mod\" (modDeleted)=\"deletePhysicalModification($event)\" ></app-physical-modification-form>\n    <mat-divider class=\"form-divider\" [inset]=\"true\" *ngIf=\"!isLast\"></mat-divider>\n  </div>\n\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./substance-form-physical-modifications.module\";\nimport * as i2 from \"../../../../../node_modules/@angular/material/tooltip/typings/index.ngfactory\";\nimport * as i3 from \"../../../../../node_modules/@angular/material/dialog/typings/index.ngfactory\";\nimport * as i4 from \"../../../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i5 from \"../references/references-dialogs/refernce-form-dialog.component.ngfactory\";\nimport * as i6 from \"../references/references-dialogs/reuse-references-dialog.component.ngfactory\";\nimport * as i7 from \"../references/apply-reference/apply-reference.component.ngfactory\";\nimport * as i8 from \"../property-parameter-dialog/property-parameter-dialog.component.ngfactory\";\nimport * as i9 from \"../subunit-selector/subunit-selector.component.ngfactory\";\nimport * as i10 from \"../subunit-selector-dialog/subunit-selector-dialog.component.ngfactory\";\nimport * as i11 from \"../amount-form-dialog/amount-form-dialog.component.ngfactory\";\nimport * as i12 from \"../physical-parameter-form-dialog/physical-parameter-form-dialog.component.ngfactory\";\nimport * as i13 from \"../cv-dialog/cv-dialog.component.ngfactory\";\nimport * as i14 from \"../json-dialog/json-dialog.component.ngfactory\";\nimport * as i15 from \"../audit-info/audit-info.component.ngfactory\";\nimport * as i16 from \"../submit-success-dialog/submit-success-dialog.component.ngfactory\";\nimport * as i17 from \"./substance-form-physical-modifications-card.component.ngfactory\";\nimport * as i18 from \"@angular/common\";\nimport * as i19 from \"@angular/forms\";\nimport * as i20 from \"@angular/cdk/observers\";\nimport * as i21 from \"@angular/cdk/overlay\";\nimport * as i22 from \"@angular/cdk/bidi\";\nimport * as i23 from \"@angular/material/menu\";\nimport * as i24 from \"@angular/material/tooltip\";\nimport * as i25 from \"@angular/platform-browser\";\nimport * as i26 from \"@angular/material/core\";\nimport * as i27 from \"@angular/material/select\";\nimport * as i28 from \"@angular/material/autocomplete\";\nimport * as i29 from \"@angular/material/dialog\";\nimport * as i30 from \"@angular/material/paginator\";\nimport * as i31 from \"../../dynamic-component-loader/dynamic-component-loader.module\";\nimport * as i32 from \"@angular/material/form-field\";\nimport * as i33 from \"@angular/cdk/platform\";\nimport * as i34 from \"@angular/cdk/portal\";\nimport * as i35 from \"@angular/cdk/scrolling\";\nimport * as i36 from \"@angular/material/checkbox\";\nimport * as i37 from \"@angular/material/button\";\nimport * as i38 from \"@angular/material/icon\";\nimport * as i39 from \"@angular/cdk/a11y\";\nimport * as i40 from \"@angular/material/tabs\";\nimport * as i41 from \"@angular/material/divider\";\nimport * as i42 from \"@angular/cdk/text-field\";\nimport * as i43 from \"@angular/material/input\";\nimport * as i44 from \"@angular/material/chips\";\nimport * as i45 from \"../../scroll-to/scroll-to.module\";\nimport * as i46 from \"@angular/cdk/table\";\nimport * as i47 from \"@angular/material/table\";\nimport * as i48 from \"@angular/cdk/accordion\";\nimport * as i49 from \"@angular/material/expansion\";\nimport * as i50 from \"@angular/material/badge\";\nimport * as i51 from \"@angular/material/radio\";\nimport * as i52 from \"../../expand-details/expand-details.module\";\nimport * as i53 from \"../../substance-text-search/substance-text-search.module\";\nimport * as i54 from \"@angular/router\";\nimport * as i55 from \"../../substance/substance-image.module\";\nimport * as i56 from \"../../substance-selector/substance-selector.module\";\nimport * as i57 from \"@angular/material/list\";\nimport * as i58 from \"file-select\";\nimport * as i59 from \"@angular/material/button-toggle\";\nimport * as i60 from \"ngx-json-viewer\";\nimport * as i61 from \"../substance-form.module\";\nimport * as i62 from \"@angular/cdk/keycodes\";\nimport * as i63 from \"../../dynamic-component-loader/dynamic-component-manifest\";\nimport * as i64 from \"./substance-form-physical-modifications-card.component\";\nvar SubstanceFormPhysicalModificationsModuleNgFactory = i0.ɵcmf(i1.SubstanceFormPhysicalModificationsModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.TooltipComponentNgFactory, i3.MatDialogContainerNgFactory, i4.ɵangular_packages_router_router_lNgFactory, i5.RefernceFormDialogComponentNgFactory, i6.ReuseReferencesDialogComponentNgFactory, i7.ApplyReferenceComponentNgFactory, i8.PropertyParameterDialogComponentNgFactory, i9.SubunitSelectorComponentNgFactory, i10.SubunitSelectorDialogComponentNgFactory, i11.AmountFormDialogComponentNgFactory, i12.PhysicalParameterFormDialogComponentNgFactory, i13.CvDialogComponentNgFactory, i14.JsonDialogComponentNgFactory, i15.AuditInfoComponentNgFactory, i16.SubmitSuccessDialogComponentNgFactory, i17.SubstanceFormPhysicalModificationsCardComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i18.NgLocalization, i18.NgLocaleLocalization, [i0.LOCALE_ID, [2, i18.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i19.FormBuilder, i19.FormBuilder, []), i0.ɵmpd(4608, i19.ɵangular_packages_forms_forms_o, i19.ɵangular_packages_forms_forms_o, []), i0.ɵmpd(4608, i20.MutationObserverFactory, i20.MutationObserverFactory, []), i0.ɵmpd(4608, i21.Overlay, i21.Overlay, [i21.ScrollStrategyOptions, i21.OverlayContainer, i0.ComponentFactoryResolver, i21.OverlayPositionBuilder, i21.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i18.DOCUMENT, i22.Directionality, [2, i18.Location]]), i0.ɵmpd(5120, i21.ɵc, i21.ɵd, [i21.Overlay]), i0.ɵmpd(5120, i23.MAT_MENU_SCROLL_STRATEGY, i23.ɵb22, [i21.Overlay]), i0.ɵmpd(5120, i24.MAT_TOOLTIP_SCROLL_STRATEGY, i24.MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, [i21.Overlay]), i0.ɵmpd(4608, i25.HAMMER_GESTURE_CONFIG, i26.GestureConfig, [[2, i26.MAT_HAMMER_OPTIONS], [2, i26.MatCommonModule]]), i0.ɵmpd(5120, i27.MAT_SELECT_SCROLL_STRATEGY, i27.MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, [i21.Overlay]), i0.ɵmpd(4608, i26.ErrorStateMatcher, i26.ErrorStateMatcher, []), i0.ɵmpd(5120, i28.MAT_AUTOCOMPLETE_SCROLL_STRATEGY, i28.MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, [i21.Overlay]), i0.ɵmpd(5120, i29.MAT_DIALOG_SCROLL_STRATEGY, i29.MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, [i21.Overlay]), i0.ɵmpd(135680, i29.MatDialog, i29.MatDialog, [i21.Overlay, i0.Injector, [2, i18.Location], [2, i29.MAT_DIALOG_DEFAULT_OPTIONS], i29.MAT_DIALOG_SCROLL_STRATEGY, [3, i29.MatDialog], i21.OverlayContainer]), i0.ɵmpd(5120, i30.MatPaginatorIntl, i30.MAT_PAGINATOR_INTL_PROVIDER_FACTORY, [[3, i30.MatPaginatorIntl]]), i0.ɵmpd(1073742336, i18.CommonModule, i18.CommonModule, []), i0.ɵmpd(1073742336, i31.DynamicComponentLoaderModule, i31.DynamicComponentLoaderModule, []), i0.ɵmpd(1073742336, i19.ɵangular_packages_forms_forms_d, i19.ɵangular_packages_forms_forms_d, []), i0.ɵmpd(1073742336, i19.ReactiveFormsModule, i19.ReactiveFormsModule, []), i0.ɵmpd(1073742336, i19.FormsModule, i19.FormsModule, []), i0.ɵmpd(1073742336, i20.ObserversModule, i20.ObserversModule, []), i0.ɵmpd(1073742336, i32.MatFormFieldModule, i32.MatFormFieldModule, []), i0.ɵmpd(1073742336, i22.BidiModule, i22.BidiModule, []), i0.ɵmpd(1073742336, i26.MatCommonModule, i26.MatCommonModule, [[2, i26.MATERIAL_SANITY_CHECKS], [2, i25.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i33.PlatformModule, i33.PlatformModule, []), i0.ɵmpd(1073742336, i26.MatRippleModule, i26.MatRippleModule, []), i0.ɵmpd(1073742336, i34.PortalModule, i34.PortalModule, []), i0.ɵmpd(1073742336, i35.ScrollingModule, i35.ScrollingModule, []), i0.ɵmpd(1073742336, i21.OverlayModule, i21.OverlayModule, []), i0.ɵmpd(1073742336, i23._MatMenuDirectivesModule, i23._MatMenuDirectivesModule, []), i0.ɵmpd(1073742336, i23.MatMenuModule, i23.MatMenuModule, []), i0.ɵmpd(1073742336, i36._MatCheckboxRequiredValidatorModule, i36._MatCheckboxRequiredValidatorModule, []), i0.ɵmpd(1073742336, i36.MatCheckboxModule, i36.MatCheckboxModule, []), i0.ɵmpd(1073742336, i37.MatButtonModule, i37.MatButtonModule, []), i0.ɵmpd(1073742336, i38.MatIconModule, i38.MatIconModule, []), i0.ɵmpd(1073742336, i39.A11yModule, i39.A11yModule, []), i0.ɵmpd(1073742336, i24.MatTooltipModule, i24.MatTooltipModule, []), i0.ɵmpd(1073742336, i40.MatTabsModule, i40.MatTabsModule, []), i0.ɵmpd(1073742336, i41.MatDividerModule, i41.MatDividerModule, []), i0.ɵmpd(1073742336, i26.MatPseudoCheckboxModule, i26.MatPseudoCheckboxModule, []), i0.ɵmpd(1073742336, i26.MatOptionModule, i26.MatOptionModule, []), i0.ɵmpd(1073742336, i27.MatSelectModule, i27.MatSelectModule, []), i0.ɵmpd(1073742336, i42.TextFieldModule, i42.TextFieldModule, []), i0.ɵmpd(1073742336, i43.MatInputModule, i43.MatInputModule, []), i0.ɵmpd(1073742336, i44.MatChipsModule, i44.MatChipsModule, []), i0.ɵmpd(1073742336, i28.MatAutocompleteModule, i28.MatAutocompleteModule, []), i0.ɵmpd(1073742336, i45.ScrollToModule, i45.ScrollToModule, []), i0.ɵmpd(1073742336, i29.MatDialogModule, i29.MatDialogModule, []), i0.ɵmpd(1073742336, i46.CdkTableModule, i46.CdkTableModule, []), i0.ɵmpd(1073742336, i47.MatTableModule, i47.MatTableModule, []), i0.ɵmpd(1073742336, i48.CdkAccordionModule, i48.CdkAccordionModule, []), i0.ɵmpd(1073742336, i49.MatExpansionModule, i49.MatExpansionModule, []), i0.ɵmpd(1073742336, i50.MatBadgeModule, i50.MatBadgeModule, []), i0.ɵmpd(1073742336, i51.MatRadioModule, i51.MatRadioModule, []), i0.ɵmpd(1073742336, i52.ExpandDetailsModule, i52.ExpandDetailsModule, []), i0.ɵmpd(1073742336, i53.SubstanceTextSearchModule, i53.SubstanceTextSearchModule, []), i0.ɵmpd(1073742336, i54.RouterModule, i54.RouterModule, [[2, i54.ɵangular_packages_router_router_a], [2, i54.Router]]), i0.ɵmpd(1073742336, i55.SubstanceImageModule, i55.SubstanceImageModule, []), i0.ɵmpd(1073742336, i56.SubstanceSelectorModule, i56.SubstanceSelectorModule, []), i0.ɵmpd(1073742336, i26.MatLineModule, i26.MatLineModule, []), i0.ɵmpd(1073742336, i57.MatListModule, i57.MatListModule, []), i0.ɵmpd(1073742336, i58.FileSelectModule, i58.FileSelectModule, []), i0.ɵmpd(1073742336, i59.MatButtonToggleModule, i59.MatButtonToggleModule, []), i0.ɵmpd(1073742336, i60.NgxJsonViewerModule, i60.NgxJsonViewerModule, []), i0.ɵmpd(1073742336, i61.SubstanceFormModule, i61.SubstanceFormModule, []), i0.ɵmpd(1073742336, i30.MatPaginatorModule, i30.MatPaginatorModule, []), i0.ɵmpd(1073742336, i1.SubstanceFormPhysicalModificationsModule, i1.SubstanceFormPhysicalModificationsModule, []), i0.ɵmpd(256, i44.MAT_CHIPS_DEFAULT_OPTIONS, { separatorKeyCodes: [i62.ENTER] }, []), i0.ɵmpd(1024, i54.ROUTES, function () { return [[]]; }, []), i0.ɵmpd(256, i63.DYNAMIC_COMPONENT, i64.SubstanceFormPhysicalModificationsCardComponent, [])]); });\nexport { SubstanceFormPhysicalModificationsModuleNgFactory as SubstanceFormPhysicalModificationsModuleNgFactory };\n"],"sourceRoot":"webpack:///"}