{"version":3,"sources":["./src/app/core/substance-form/monomers/substance-form-monomers.module.ts","./src/app/core/substance-form/monomers/monomer-form.component.ts","./src/app/core/substance-form/monomers/monomer-form.component.ts.pre-build-optimizer.js","./src/app/core/substance-form/monomers/monomer-form.component.ngfactory.js.pre-build-optimizer.js","./src/app/core/substance-form/monomers/monomer-form.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/core/substance-form/monomers/monomer-form.component.html","./src/app/core/substance-form/monomers/substance-form-monomers-card.component.ts","./src/app/core/substance-form/monomers/substance-form-monomers-card.component.ts.pre-build-optimizer.js","./src/app/core/substance-form/monomers/substance-form-monomers.service.ts","./src/app/core/substance-form/monomers/substance-form-monomers.service.ts.pre-build-optimizer.js","./src/app/core/substance-form/monomers/substance-form-monomers-card.component.ngfactory.js.pre-build-optimizer.js","./src/app/core/substance-form/monomers/substance-form-monomers-card.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/core/substance-form/monomers/substance-form-monomers-card.component.html","./src/app/core/substance-form/monomers/substance-form-monomers.module.ngfactory.js.pre-build-optimizer.js","./src/app/core/substance-form/base-classes/substance-form-base.ts"],"names":["cvService","dialog","utilsService","overlayContainerService","monomerDeleted","subscriptions","ngOnInit","this","overlayContainer","getContainerElement","get","privateMonomer","set","monomer","relatedSubstanceUuid","monomerSubstance","refuuid","enumerable","configurable","updateType","event","type","definingChange","defining","checked","ngAfterViewInit","deleteComponent","$$deletedCode","newUUID","deleteTimer","setTimeout","emit","undoDelete","clearTimeout","componentUpdated","substance","refPname","_name","name","uuid","substanceClass","approvalID","openAmountDialog","amount","dialogRef","open","data","width","style","zIndex","dialogSubscription","afterClosed","subscribe","newAmount","push","displayAmount","amt","formatValue","v","display","value","RenderType_MonomerFormComponent","encapsulation","styles","View_MonomerFormComponent_1","_l","ad","View_MonomerFormComponent_2","View_MonomerFormComponent_3","View_MonomerFormComponent_0","$event","substanceFormMonomersService","scrollToService","gaService","analyticsEventCategory","_this","canAddItemUpdate","menuLabelUpdate","monomersSubscription","substanceMonomers","monomers","ngOnDestroy","componentDestroyed","forEach","subscription","unsubscribe","addItem","addMonomer","addSubstanceMonomer","scrollToElement","deleteMonomer","deleteSubstanceMonomer","substanceFormService","initSubtanceForm","polymer","resetState","propertyEmitter","next","asObservable","unshift","mix","subNameIndex","findIndex","subName","splice","SubstanceFormMonomersService","ngInjectableDef","factory","token","providedIn","RenderType_SubstanceFormMonomersCardComponent","View_SubstanceFormMonomersCardComponent_2","View_SubstanceFormMonomersCardComponent_1","deleteCode","View_SubstanceFormMonomersCardComponent_0","View_SubstanceFormMonomersCardComponent_Host_0","_ck","_v","SubstanceFormMonomersCardComponentNgFactory","hiddenStateUpdate","SubstanceFormMonomersModuleNgFactory","separatorKeyCodes"],"mappings":"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","file":"37.8b12ccd93fb8b9dff71a.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SubstanceFormMonomersCardComponent } from './substance-form-monomers-card.component';\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\nimport { SubstanceFormModule } from '../substance-form.module';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ScrollToModule } from '../../scroll-to/scroll-to.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatInputModule } from '@angular/material/input';\nimport { MonomerFormComponent } from './monomer-form.component';\nimport { SubstanceSelectorModule } from '@gsrs-core/substance-selector/substance-selector.module';\nimport { MatCheckboxModule } from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(SubstanceFormMonomersCardComponent),\n    SubstanceFormModule,\n    MatDividerModule,\n    MatIconModule,\n    MatButtonModule,\n    ScrollToModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatPaginatorModule,\n    MatInputModule,\n    SubstanceSelectorModule,\n    MatCheckboxModule\n  ],\n  declarations: [\n    SubstanceFormMonomersCardComponent,\n    MonomerFormComponent\n  ]\n})\nexport class SubstanceFormMonomersModule { }\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Monomer, SubstanceRelated, SubstanceSummary} from '@gsrs-core/substance';\nimport {ControlledVocabularyService, VocabularyTerm} from '@gsrs-core/controlled-vocabulary';\nimport {Subscription} from 'rxjs';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UtilsService} from '@gsrs-core/utils';\nimport {OverlayContainer} from '@angular/cdk/overlay';\nimport {AmountFormDialogComponent} from '@gsrs-core/substance-form/amount-form-dialog/amount-form-dialog.component';\n\n@Component({\n  selector: 'app-monomer-form',\n  templateUrl: './monomer-form.component.html',\n  styleUrls: ['./monomer-form.component.scss']\n})\nexport class MonomerFormComponent implements OnInit, AfterViewInit {\n  privateMonomer: Monomer;\n  @Output() monomerDeleted = new EventEmitter<Monomer>();\n  deleteTimer: any;\n  relatedSubstanceUuid: string;\n  private subscriptions: Array<Subscription> = [];\n  private overlayContainer: HTMLElement;\n  siteDisplay: string;\n\n  constructor(\n    private cvService: ControlledVocabularyService,\n    private dialog: MatDialog,\n    private utilsService: UtilsService,\n    private overlayContainerService: OverlayContainer\n  ) { }\n  ngOnInit() {\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\n  }\n\n  @Input()\n  set monomer(monomer: Monomer) {\n    this.privateMonomer = monomer;\n    if (this.privateMonomer.monomerSubstance) {\n      this.relatedSubstanceUuid = this.privateMonomer.monomerSubstance.refuuid;\n    } else {\n      this.relatedSubstanceUuid = '';\n    }\n\n  }\n\n  get monomer(): Monomer {\n    return this.privateMonomer;\n  }\n\n  updateType(event: any): void {\n    this.privateMonomer.type = event;\n  }\n\n  definingChange(event: any): void {\n    this.privateMonomer.defining = event.checked;\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n\n  deleteComponent(): void {\n    this.privateMonomer.$$deletedCode = this.utilsService.newUUID();\n    if (!this.privateMonomer || !this.monomer\n    ) {\n      this.deleteTimer = setTimeout(() => {\n        this.monomerDeleted.emit(this.privateMonomer);\n      }, 1000);\n    }\n  }\n\n  undoDelete(): void {\n    clearTimeout(this.deleteTimer);\n    delete this.privateMonomer.$$deletedCode;\n  }\n\n  componentUpdated(substance: SubstanceSummary): void {\n    const relatedSubstance: SubstanceRelated = {\n      refPname: substance._name,\n      name: substance._name,\n      refuuid: substance.uuid,\n      substanceClass: 'reference',\n      approvalID: substance.approvalID\n    };\n    this.privateMonomer.monomerSubstance = relatedSubstance;\n    this.relatedSubstanceUuid = this.privateMonomer.monomerSubstance.refuuid;\n\n  }\n\n  openAmountDialog(): void {\n    if (!this.privateMonomer.amount) {\n      this.privateMonomer.amount = {};\n    }\n    const dialogRef = this.dialog.open(AmountFormDialogComponent, {\n      data: {'subsAmount': this.privateMonomer.amount},\n      width: '1040px'\n    });\n    this.overlayContainer.style.zIndex = '1002';\n\n    const dialogSubscription = dialogRef.afterClosed().subscribe(newAmount => {\n      this.overlayContainer.style.zIndex = null;\n      this.privateMonomer.amount = newAmount;\n    });\n    this.subscriptions.push(dialogSubscription);\n  }\n\n  displayAmount(amt): string {\n    return this.utilsService.displayAmount(amt);\n  }\n\n  formatValue(v) {\n    if (v) {\n      if (typeof v === 'object') {\n        if (v.display) {\n          return v.display;\n        } else if (v.value) {\n          return v.value;\n        } else {\n          return null;\n        }\n      } else {\n        return v;\n      }\n    }\n    return null;\n  }\n\n}\n","import { AfterViewInit, EventEmitter, OnInit } from '@angular/core';\nimport { ControlledVocabularyService } from '@gsrs-core/controlled-vocabulary';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UtilsService } from '@gsrs-core/utils';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { AmountFormDialogComponent } from '@gsrs-core/substance-form/amount-form-dialog/amount-form-dialog.component';\nvar MonomerFormComponent = /** @class */ (function () {\n    function MonomerFormComponent(cvService, dialog, utilsService, overlayContainerService) {\n        this.cvService = cvService;\n        this.dialog = dialog;\n        this.utilsService = utilsService;\n        this.overlayContainerService = overlayContainerService;\n        this.monomerDeleted = new EventEmitter();\n        this.subscriptions = [];\n    }\n    MonomerFormComponent.prototype.ngOnInit = function () {\n        this.overlayContainer = this.overlayContainerService.getContainerElement();\n    };\n    Object.defineProperty(MonomerFormComponent.prototype, \"monomer\", {\n        get: function () {\n            return this.privateMonomer;\n        },\n        set: function (monomer) {\n            this.privateMonomer = monomer;\n            if (this.privateMonomer.monomerSubstance) {\n                this.relatedSubstanceUuid = this.privateMonomer.monomerSubstance.refuuid;\n            }\n            else {\n                this.relatedSubstanceUuid = '';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MonomerFormComponent.prototype.updateType = function (event) {\n        this.privateMonomer.type = event;\n    };\n    MonomerFormComponent.prototype.definingChange = function (event) {\n        this.privateMonomer.defining = event.checked;\n    };\n    MonomerFormComponent.prototype.ngAfterViewInit = function () {\n    };\n    MonomerFormComponent.prototype.deleteComponent = function () {\n        var _this = this;\n        this.privateMonomer.$$deletedCode = this.utilsService.newUUID();\n        if (!this.privateMonomer || !this.monomer) {\n            this.deleteTimer = setTimeout(function () {\n                _this.monomerDeleted.emit(_this.privateMonomer);\n            }, 1000);\n        }\n    };\n    MonomerFormComponent.prototype.undoDelete = function () {\n        clearTimeout(this.deleteTimer);\n        delete this.privateMonomer.$$deletedCode;\n    };\n    MonomerFormComponent.prototype.componentUpdated = function (substance) {\n        var relatedSubstance = {\n            refPname: substance._name,\n            name: substance._name,\n            refuuid: substance.uuid,\n            substanceClass: 'reference',\n            approvalID: substance.approvalID\n        };\n        this.privateMonomer.monomerSubstance = relatedSubstance;\n        this.relatedSubstanceUuid = this.privateMonomer.monomerSubstance.refuuid;\n    };\n    MonomerFormComponent.prototype.openAmountDialog = function () {\n        var _this = this;\n        if (!this.privateMonomer.amount) {\n            this.privateMonomer.amount = {};\n        }\n        var dialogRef = this.dialog.open(AmountFormDialogComponent, {\n            data: { 'subsAmount': this.privateMonomer.amount },\n            width: '1040px'\n        });\n        this.overlayContainer.style.zIndex = '1002';\n        var dialogSubscription = dialogRef.afterClosed().subscribe(function (newAmount) {\n            _this.overlayContainer.style.zIndex = null;\n            _this.privateMonomer.amount = newAmount;\n        });\n        this.subscriptions.push(dialogSubscription);\n    };\n    MonomerFormComponent.prototype.displayAmount = function (amt) {\n        return this.utilsService.displayAmount(amt);\n    };\n    MonomerFormComponent.prototype.formatValue = function (v) {\n        if (v) {\n            if (typeof v === 'object') {\n                if (v.display) {\n                    return v.display;\n                }\n                else if (v.value) {\n                    return v.value;\n                }\n                else {\n                    return null;\n                }\n            }\n            else {\n                return v;\n            }\n        }\n        return null;\n    };\n    return MonomerFormComponent;\n}());\nexport { MonomerFormComponent };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./monomer-form.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../../../node_modules/@angular/material/button/typings/index.ngfactory\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/cdk/a11y\";\nimport * as i5 from \"@angular/platform-browser/animations\";\nimport * as i6 from \"../../../../../node_modules/@angular/material/icon/typings/index.ngfactory\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"../../substance-selector/substance-selector.component.ngfactory\";\nimport * as i10 from \"../../substance-selector/substance-selector.component\";\nimport * as i11 from \"../../substance/substance.service\";\nimport * as i12 from \"../cv-input/cv-input.component.ngfactory\";\nimport * as i13 from \"../cv-input/cv-input.component\";\nimport * as i14 from \"../../controlled-vocabulary/controlled-vocabulary.service\";\nimport * as i15 from \"@angular/material/dialog\";\nimport * as i16 from \"../../utils/utils.service\";\nimport * as i17 from \"@angular/cdk/overlay\";\nimport * as i18 from \"../../utils/data-dictionary.service\";\nimport * as i19 from \"../../auth/auth.service\";\nimport * as i20 from \"../../../../../node_modules/@angular/material/checkbox/typings/index.ngfactory\";\nimport * as i21 from \"@angular/forms\";\nimport * as i22 from \"@angular/material/checkbox\";\nimport * as i23 from \"./monomer-form.component\";\nvar styles_MonomerFormComponent = [i0.styles];\nvar RenderType_MonomerFormComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_MonomerFormComponent, data: {} });\nexport { RenderType_MonomerFormComponent as RenderType_MonomerFormComponent };\nfunction View_MonomerFormComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 5, \"div\", [[\"class\", \"notification-backdrop\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Deleted\\u00A0 \"])), (_l()(), i1.ɵeld(2, 0, null, null, 3, \"button\", [[\"mat-icon-button\", \"\"], [\"matTooltip\", \"Undo\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.undoDelete() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(3, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.FocusMonitor, [2, i5.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(4, 0, null, 0, 1, \"mat-icon\", [[\"class\", \"mat-icon notranslate\"], [\"role\", \"img\"], [\"svgIcon\", \"undo\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i6.View_MatIcon_0, i6.RenderType_MatIcon)), i1.ɵdid(5, 9158656, null, 0, i7.MatIcon, [i1.ElementRef, i7.MatIconRegistry, [8, null], [2, i7.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null)], function (_ck, _v) { var currVal_4 = \"undo\"; _ck(_v, 5, 0, currVal_4); }, function (_ck, _v) { var currVal_0 = (i1.ɵnov(_v, 3).disabled || null); var currVal_1 = (i1.ɵnov(_v, 3)._animationMode === \"NoopAnimations\"); _ck(_v, 2, 0, currVal_0, currVal_1); var currVal_2 = i1.ɵnov(_v, 5).inline; var currVal_3 = (((i1.ɵnov(_v, 5).color !== \"primary\") && (i1.ɵnov(_v, 5).color !== \"accent\")) && (i1.ɵnov(_v, 5).color !== \"warn\")); _ck(_v, 4, 0, currVal_2, currVal_3); }); }\nfunction View_MonomerFormComponent_2(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(1, null, [\" Error retrieving monomer, missing reference uuid for \", \" \"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.privateMonomer.monomerSubstance.name; _ck(_v, 1, 0, currVal_0); }); }\nfunction View_MonomerFormComponent_3(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"amount-display\"]], null, null, null, null, null)), (_l()(), i1.ɵted(1, null, [\" \", \" \"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.displayAmount(_co.privateMonomer.amount); _ck(_v, 1, 0, currVal_0); }); }\nexport function View_MonomerFormComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 30, \"div\", [[\"class\", \"component-form-container form-row\"]], null, null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MonomerFormComponent_1)), i1.ɵdid(2, 16384, null, 0, i8.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵeld(3, 0, null, null, 4, \"div\", [[\"class\", \"delete-container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(4, 0, null, null, 3, \"button\", [[\"mat-icon-button\", \"\"], [\"matTooltip\", \"Delete monomer\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.deleteComponent() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(5, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.FocusMonitor, [2, i5.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(6, 0, null, 0, 1, \"mat-icon\", [[\"class\", \"mat-icon notranslate\"], [\"role\", \"img\"], [\"svgIcon\", \"delete_forever\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i6.View_MatIcon_0, i6.RenderType_MatIcon)), i1.ɵdid(7, 9158656, null, 0, i7.MatIcon, [i1.ElementRef, i7.MatIconRegistry, [8, null], [2, i7.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null), (_l()(), i1.ɵeld(8, 0, null, null, 5, \"div\", [[\"class\", \"related-substance\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(9, 0, null, null, 4, \"div\", [[\"class\", \"flex-column \"]], null, null, null, null, null)), (_l()(), i1.ɵeld(10, 0, null, null, 1, \"app-substance-selector\", [[\"eventCategory\", \"substanceRelationshipRelatedSub\"], [\"header\", \"Monomer Substance\"], [\"placeholder\", \"Monomer Substance\"]], null, [[null, \"selectionUpdated\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"selectionUpdated\" === en)) {\n        var pd_0 = (_co.componentUpdated($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i9.View_SubstanceSelectorComponent_0, i9.RenderType_SubstanceSelectorComponent)), i1.ɵdid(11, 114688, null, 0, i10.SubstanceSelectorComponent, [i11.SubstanceService], { eventCategory: [0, \"eventCategory\"], placeholder: [1, \"placeholder\"], header: [2, \"header\"], name: [3, \"name\"], subuuid: [4, \"subuuid\"] }, { selectionUpdated: \"selectionUpdated\" }), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MonomerFormComponent_2)), i1.ɵdid(13, 16384, null, 0, i8.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵeld(14, 0, null, null, 2, \"div\", [[\"class\", \"type\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(15, 0, null, null, 1, \"app-cv-input\", [[\"domain\", \"MONOMER_TYPE\"], [\"title\", \"Monomer Type\"]], null, [[null, \"valueChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"valueChange\" === en)) {\n        var pd_0 = (_co.updateType($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i12.View_CvInputComponent_0, i12.RenderType_CvInputComponent)), i1.ɵdid(16, 245760, null, 0, i13.CvInputComponent, [i14.ControlledVocabularyService, i15.MatDialog, i16.UtilsService, i17.OverlayContainer, i18.DataDictionaryService, i19.AuthService], { title: [0, \"title\"], domain: [1, \"domain\"], model: [2, \"model\"] }, { valueChange: \"valueChange\" }), (_l()(), i1.ɵeld(17, 0, null, null, 8, \"div\", [[\"class\", \"amount\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(18, 0, null, null, 5, \"div\", [[\"class\", \"label padded amount-label\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Amount \"])), (_l()(), i1.ɵeld(20, 0, null, null, 3, \"button\", [[\"mat-icon-button\", \"\"], [\"matTooltip\", \"add\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.openAmountDialog() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(21, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.FocusMonitor, [2, i5.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(22, 0, null, 0, 1, \"mat-icon\", [[\"class\", \"mat-icon notranslate\"], [\"role\", \"img\"], [\"svgIcon\", \"add_circle_outline\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i6.View_MatIcon_0, i6.RenderType_MatIcon)), i1.ɵdid(23, 9158656, null, 0, i7.MatIcon, [i1.ElementRef, i7.MatIconRegistry, [8, null], [2, i7.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_MonomerFormComponent_3)), i1.ɵdid(25, 16384, null, 0, i8.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵeld(26, 0, null, null, 4, \"div\", [[\"class\", \"checkbox-container column-checkbox\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(27, 0, null, null, 3, \"mat-checkbox\", [[\"class\", \"mat-checkbox\"]], [[8, \"id\", 0], [1, \"tabindex\", 0], [2, \"mat-checkbox-indeterminate\", null], [2, \"mat-checkbox-checked\", null], [2, \"mat-checkbox-disabled\", null], [2, \"mat-checkbox-label-before\", null], [2, \"_mat-animation-noopable\", null]], [[null, \"change\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"change\" === en)) {\n        var pd_0 = (_co.definingChange($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i20.View_MatCheckbox_0, i20.RenderType_MatCheckbox)), i1.ɵprd(5120, null, i21.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i22.MatCheckbox]), i1.ɵdid(29, 8568832, null, 0, i22.MatCheckbox, [i1.ElementRef, i1.ChangeDetectorRef, i4.FocusMonitor, i1.NgZone, [8, null], [2, i22.MAT_CHECKBOX_CLICK_ACTION], [2, i5.ANIMATION_MODULE_TYPE]], { checked: [0, \"checked\"] }, { change: \"change\" }), (_l()(), i1.ɵted(-1, 0, [\"Defining\"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.monomer.$$deletedCode; _ck(_v, 2, 0, currVal_0); var currVal_5 = \"delete_forever\"; _ck(_v, 7, 0, currVal_5); var currVal_6 = \"substanceRelationshipRelatedSub\"; var currVal_7 = \"Monomer Substance\"; var currVal_8 = \"Monomer Substance\"; var currVal_9 = (_co.privateMonomer.monomerSubstance ? _co.privateMonomer.monomerSubstance.name : \"\"); var currVal_10 = _co.relatedSubstanceUuid; _ck(_v, 11, 0, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10); var currVal_11 = ((_co.privateMonomer.monomerSubstance && _co.privateMonomer.monomerSubstance.uuid) && !_co.privateMonomer.monomerSubstance.refuuid); _ck(_v, 13, 0, currVal_11); var currVal_12 = \"Monomer Type\"; var currVal_13 = \"MONOMER_TYPE\"; var currVal_14 = _co.monomer.type; _ck(_v, 16, 0, currVal_12, currVal_13, currVal_14); var currVal_19 = \"add_circle_outline\"; _ck(_v, 23, 0, currVal_19); var currVal_20 = _co.privateMonomer.amount; _ck(_v, 25, 0, currVal_20); var currVal_28 = _co.privateMonomer.defining; _ck(_v, 29, 0, currVal_28); }, function (_ck, _v) { var currVal_1 = (i1.ɵnov(_v, 5).disabled || null); var currVal_2 = (i1.ɵnov(_v, 5)._animationMode === \"NoopAnimations\"); _ck(_v, 4, 0, currVal_1, currVal_2); var currVal_3 = i1.ɵnov(_v, 7).inline; var currVal_4 = (((i1.ɵnov(_v, 7).color !== \"primary\") && (i1.ɵnov(_v, 7).color !== \"accent\")) && (i1.ɵnov(_v, 7).color !== \"warn\")); _ck(_v, 6, 0, currVal_3, currVal_4); var currVal_15 = (i1.ɵnov(_v, 21).disabled || null); var currVal_16 = (i1.ɵnov(_v, 21)._animationMode === \"NoopAnimations\"); _ck(_v, 20, 0, currVal_15, currVal_16); var currVal_17 = i1.ɵnov(_v, 23).inline; var currVal_18 = (((i1.ɵnov(_v, 23).color !== \"primary\") && (i1.ɵnov(_v, 23).color !== \"accent\")) && (i1.ɵnov(_v, 23).color !== \"warn\")); _ck(_v, 22, 0, currVal_17, currVal_18); var currVal_21 = i1.ɵnov(_v, 29).id; var currVal_22 = null; var currVal_23 = i1.ɵnov(_v, 29).indeterminate; var currVal_24 = i1.ɵnov(_v, 29).checked; var currVal_25 = i1.ɵnov(_v, 29).disabled; var currVal_26 = (i1.ɵnov(_v, 29).labelPosition == \"before\"); var currVal_27 = (i1.ɵnov(_v, 29)._animationMode === \"NoopAnimations\"); _ck(_v, 27, 0, currVal_21, currVal_22, currVal_23, currVal_24, currVal_25, currVal_26, currVal_27); }); }\nexport function View_MonomerFormComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-monomer-form\", [], null, null, null, View_MonomerFormComponent_0, RenderType_MonomerFormComponent)), i1.ɵdid(1, 4308992, null, 0, i23.MonomerFormComponent, [i14.ControlledVocabularyService, i15.MatDialog, i16.UtilsService, i17.OverlayContainer], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar MonomerFormComponentNgFactory = i1.ɵccf(\"app-monomer-form\", i23.MonomerFormComponent, View_MonomerFormComponent_Host_0, { monomer: \"monomer\" }, { monomerDeleted: \"monomerDeleted\" }, []);\nexport { MonomerFormComponentNgFactory as MonomerFormComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".notification-backdrop[_ngcontent-%COMP%]{position:absolute;top:0;right:0;bottom:0;left:0;display:-webkit-box;display:-ms-flexbox;display:flex;z-index:10;background-color:rgba(255,255,255,.8);-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:30px;font-weight:700;color:#666}.component-form-container[_ngcontent-%COMP%]{padding:30px 10px 12px;position:relative}.form-row[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}.form-row[_ngcontent-%COMP%]   .delete-container[_ngcontent-%COMP%]{padding:0 10px 8px 0}.form-row[_ngcontent-%COMP%]   .related-substance[_ngcontent-%COMP%]{width:30%}.form-row[_ngcontent-%COMP%]   .type[_ngcontent-%COMP%]{width:25%;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-right:15px}.form-row[_ngcontent-%COMP%]   .amount[_ngcontent-%COMP%]{min-width:15%}.amount-label[_ngcontent-%COMP%]{padding-bottom:10px}  .related-substance img{max-width:125px!important;margin:auto}.defining[_ngcontent-%COMP%]{padding-bottom:20px}.column-checkbox[_ngcontent-%COMP%]     .mat-checkbox-layout{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.column-checkbox[_ngcontent-%COMP%]     .mat-checkbox-inner-container{margin-right:unset;margin-left:unset}.column-checkbox[_ngcontent-%COMP%]     .mat-checkbox-layout .mat-checkbox-label{padding-left:0;font-size:11px;padding-bottom:7.5px;line-height:11px}.checkbox-container[_ngcontent-%COMP%], .radio-container[_ngcontent-%COMP%]{padding-bottom:16px;padding-right:15px}\"];\nexport { styles as styles };\n","<div class=\"component-form-container form-row\">\n  <div *ngIf=\"monomer.$$deletedCode\" class=\"notification-backdrop\">\n    Deleted&nbsp;\n    <button mat-icon-button matTooltip=\"Undo\" (click)=\"undoDelete()\">\n      <mat-icon svgIcon=\"undo\"></mat-icon>\n    </button>\n  </div>\n  <div class=\"delete-container\">\n    <button mat-icon-button matTooltip=\"Delete monomer\" (click)=\"deleteComponent()\">\n      <mat-icon svgIcon=\"delete_forever\"></mat-icon>\n    </button>\n  </div>\n    <div class = \"related-substance\">\n      <div class=\"flex-column \">\n        <app-substance-selector (selectionUpdated)=\"componentUpdated($event)\"\n                                eventCategory=\"substanceRelationshipRelatedSub\" placeholder= \"Monomer Substance\" header=\"Monomer Substance\"\n                                [subuuid]=\"relatedSubstanceUuid\" [name] = \"privateMonomer.monomerSubstance? privateMonomer.monomerSubstance.name : ''\">\n        </app-substance-selector>\n        <span *ngIf = \"this.privateMonomer.monomerSubstance && this.privateMonomer.monomerSubstance.uuid\n                && !this.privateMonomer.monomerSubstance.refuuid \">\n          Error retrieving monomer, missing reference uuid for {{this.privateMonomer.monomerSubstance.name}}\n        </span>\n      </div>\n    </div>\n\n    <div class =\"type\">\n      <app-cv-input  domain = \"MONOMER_TYPE\" title = \"Monomer Type\" [model] = \"monomer.type\" (valueChange)=\"updateType($event)\"></app-cv-input>\n    </div>\n\n  <div class = 'amount' >\n  <div class = \"label padded amount-label\">\n    Amount\n  <button mat-icon-button matTooltip=\"add\" (click)=\"(openAmountDialog())\">\n    <mat-icon svgIcon=\"add_circle_outline\"></mat-icon>\n  </button>\n  </div>\n  <div *ngIf = \"privateMonomer.amount\" class = \"amount-display\">\n    {{displayAmount(privateMonomer.amount)}}\n  </div>\n</div>\n  <div class=\"checkbox-container column-checkbox\">\n    <mat-checkbox [checked] = \"privateMonomer.defining\" (change)=\"definingChange($event)\">Defining</mat-checkbox>\n  </div>\n\n\n</div>\n","import { Component, OnInit, AfterViewInit, OnDestroy } from '@angular/core';\nimport { SubstanceCardBaseFilteredList, SubstanceCardBaseList } from '../base-classes/substance-form-base-filtered-list';\nimport { Monomer } from '@gsrs-core/substance/substance.model';\nimport { ScrollToService } from '../../scroll-to/scroll-to.service';\nimport { GoogleAnalyticsService } from '../../google-analytics/google-analytics.service';\nimport { Subscription } from 'rxjs';\nimport { SubstanceFormMonomersService } from './substance-form-monomers.service';\n\n@Component({\n  selector: 'app-substance-form-monomers-card',\n  templateUrl: './substance-form-monomers-card.component.html',\n  styleUrls: ['./substance-form-monomers-card.component.scss']\n})\nexport class SubstanceFormMonomersCardComponent extends SubstanceCardBaseFilteredList<Monomer>\n  implements OnInit, AfterViewInit, OnDestroy, SubstanceCardBaseList {\n  monomers: Array<Monomer>;\n  private subscriptions: Array<Subscription> = [];\n\n  constructor(\n    private substanceFormMonomersService: SubstanceFormMonomersService,\n    private scrollToService: ScrollToService,\n    public gaService: GoogleAnalyticsService\n  ) {\n    super(gaService);\n    this.analyticsEventCategory = 'substance form monomers';\n  }\n\n  ngOnInit() {\n    this.canAddItemUpdate.emit(true);\n    this.menuLabelUpdate.emit('Monomers');\n  }\n\n  ngAfterViewInit() {\n    const monomersSubscription = this.substanceFormMonomersService.substanceMonomers.subscribe(monomers => {\n      this.monomers = monomers;\n    });\n    this.subscriptions.push(monomersSubscription);\n  }\n\n  ngOnDestroy() {\n    this.componentDestroyed.emit();\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  addItem(): void {\n    this.addMonomer();\n  }\n\n  addMonomer(): void {\n    this.substanceFormMonomersService.addSubstanceMonomer();\n    setTimeout(() => {\n      this.scrollToService.scrollToElement(`substance-monomer-0`, 'center');\n    });\n  }\n\n  deleteMonomer(monomer: Monomer): void {\n    this.substanceFormMonomersService.deleteSubstanceMonomer(monomer);\n  }\n\n}\n","import * as tslib_1 from \"tslib\";\nimport { OnInit, AfterViewInit, OnDestroy } from '@angular/core';\nimport { SubstanceCardBaseFilteredList } from '../base-classes/substance-form-base-filtered-list';\nimport { ScrollToService } from '../../scroll-to/scroll-to.service';\nimport { GoogleAnalyticsService } from '../../google-analytics/google-analytics.service';\nimport { SubstanceFormMonomersService } from './substance-form-monomers.service';\nvar SubstanceFormMonomersCardComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(SubstanceFormMonomersCardComponent, _super);\n    function SubstanceFormMonomersCardComponent(substanceFormMonomersService, scrollToService, gaService) {\n        var _this = _super.call(this, gaService) || this;\n        _this.substanceFormMonomersService = substanceFormMonomersService;\n        _this.scrollToService = scrollToService;\n        _this.gaService = gaService;\n        _this.subscriptions = [];\n        _this.analyticsEventCategory = 'substance form monomers';\n        return _this;\n    }\n    SubstanceFormMonomersCardComponent.prototype.ngOnInit = function () {\n        this.canAddItemUpdate.emit(true);\n        this.menuLabelUpdate.emit('Monomers');\n    };\n    SubstanceFormMonomersCardComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        var monomersSubscription = this.substanceFormMonomersService.substanceMonomers.subscribe(function (monomers) {\n            _this.monomers = monomers;\n        });\n        this.subscriptions.push(monomersSubscription);\n    };\n    SubstanceFormMonomersCardComponent.prototype.ngOnDestroy = function () {\n        this.componentDestroyed.emit();\n        this.subscriptions.forEach(function (subscription) {\n            subscription.unsubscribe();\n        });\n    };\n    SubstanceFormMonomersCardComponent.prototype.addItem = function () {\n        this.addMonomer();\n    };\n    SubstanceFormMonomersCardComponent.prototype.addMonomer = function () {\n        var _this = this;\n        this.substanceFormMonomersService.addSubstanceMonomer();\n        setTimeout(function () {\n            _this.scrollToService.scrollToElement(\"substance-monomer-0\", 'center');\n        });\n    };\n    SubstanceFormMonomersCardComponent.prototype.deleteMonomer = function (monomer) {\n        this.substanceFormMonomersService.deleteSubstanceMonomer(monomer);\n    };\n    return SubstanceFormMonomersCardComponent;\n}(SubstanceCardBaseFilteredList));\nexport { SubstanceFormMonomersCardComponent };\n","import { Injectable } from '@angular/core';\nimport { SubstanceFormServiceBase } from '../base-classes/substance-form-service-base';\nimport { SubstanceFormService } from '../substance-form.service';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { Monomer } from '@gsrs-core/substance/substance.model';\nimport { SubstanceFormMonomersModule } from './substance-form-monomers.module';\n\n@Injectable({\n  providedIn: SubstanceFormMonomersModule\n})\nexport class SubstanceFormMonomersService extends SubstanceFormServiceBase<Array<Monomer>> {\n\n  constructor(\n    public substanceFormService: SubstanceFormService\n  ) {\n    super(substanceFormService);\n  }\n\n  initSubtanceForm(): void {\n    super.initSubtanceForm();\n    const subscription = this.substanceFormService.substance.subscribe(substance => {\n      this.substance = substance;\n      if (this.substance.polymer) {\n        if (this.substance.polymer.monomers == null) {\n          this.substance.polymer.monomers = [];\n        }\n        this.substanceFormService.resetState();\n        this.propertyEmitter.next(this.substance.polymer.monomers);\n      }\n    });\n    this.subscriptions.push(subscription);\n  }\n\n  get substanceMonomers(): Observable<Array<Monomer>> {\n    return this.propertyEmitter.asObservable();\n  }\n\n  addSubstanceMonomer(): void {\n    const newMix: Monomer = {};\n    this.substance.polymer.monomers.unshift(newMix);\n    this.propertyEmitter.next(this.substance.polymer.monomers);\n  }\n\n  deleteSubstanceMonomer(mix: Monomer): void {\n    const subNameIndex = this.substance.polymer.monomers.findIndex(subName => mix.$$deletedCode === subName.$$deletedCode);\n    if (subNameIndex > -1) {\n      this.substance.polymer.monomers.splice(subNameIndex, 1);\n      this.propertyEmitter.next(this.substance.polymer.monomers);\n    }\n  }\n}\n","import * as tslib_1 from \"tslib\";\nimport { SubstanceFormServiceBase } from '../base-classes/substance-form-service-base';\nimport { SubstanceFormService } from '../substance-form.service';\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../substance-form.service\";\nimport * as i2 from \"./substance-form-monomers.module\";\nvar SubstanceFormMonomersService = /** @class */ (function (_super) {\n    tslib_1.__extends(SubstanceFormMonomersService, _super);\n    function SubstanceFormMonomersService(substanceFormService) {\n        var _this = _super.call(this, substanceFormService) || this;\n        _this.substanceFormService = substanceFormService;\n        return _this;\n    }\n    SubstanceFormMonomersService.prototype.initSubtanceForm = function () {\n        var _this = this;\n        _super.prototype.initSubtanceForm.call(this);\n        var subscription = this.substanceFormService.substance.subscribe(function (substance) {\n            _this.substance = substance;\n            if (_this.substance.polymer) {\n                if (_this.substance.polymer.monomers == null) {\n                    _this.substance.polymer.monomers = [];\n                }\n                _this.substanceFormService.resetState();\n                _this.propertyEmitter.next(_this.substance.polymer.monomers);\n            }\n        });\n        this.subscriptions.push(subscription);\n    };\n    Object.defineProperty(SubstanceFormMonomersService.prototype, \"substanceMonomers\", {\n        get: function () {\n            return this.propertyEmitter.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SubstanceFormMonomersService.prototype.addSubstanceMonomer = function () {\n        var newMix = {};\n        this.substance.polymer.monomers.unshift(newMix);\n        this.propertyEmitter.next(this.substance.polymer.monomers);\n    };\n    SubstanceFormMonomersService.prototype.deleteSubstanceMonomer = function (mix) {\n        var subNameIndex = this.substance.polymer.monomers.findIndex(function (subName) { return mix.$$deletedCode === subName.$$deletedCode; });\n        if (subNameIndex > -1) {\n            this.substance.polymer.monomers.splice(subNameIndex, 1);\n            this.propertyEmitter.next(this.substance.polymer.monomers);\n        }\n    };\n    SubstanceFormMonomersService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function SubstanceFormMonomersService_Factory() { return new SubstanceFormMonomersService(i0.ɵɵinject(i1.SubstanceFormService)); }, token: SubstanceFormMonomersService, providedIn: i2.SubstanceFormMonomersModule });\n    return SubstanceFormMonomersService;\n}(SubstanceFormServiceBase));\nexport { SubstanceFormMonomersService };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./substance-form-monomers-card.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../../../node_modules/@angular/material/divider/typings/index.ngfactory\";\nimport * as i3 from \"@angular/material/divider\";\nimport * as i4 from \"../../scroll-to/scroll-to-target.directive\";\nimport * as i5 from \"../../scroll-to/scroll-to.service\";\nimport * as i6 from \"./monomer-form.component.ngfactory\";\nimport * as i7 from \"./monomer-form.component\";\nimport * as i8 from \"../../controlled-vocabulary/controlled-vocabulary.service\";\nimport * as i9 from \"@angular/material/dialog\";\nimport * as i10 from \"../../utils/utils.service\";\nimport * as i11 from \"@angular/cdk/overlay\";\nimport * as i12 from \"@angular/common\";\nimport * as i13 from \"./substance-form-monomers-card.component\";\nimport * as i14 from \"./substance-form-monomers.service\";\nimport * as i15 from \"../../google-analytics/google-analytics.service\";\nvar styles_SubstanceFormMonomersCardComponent = [i0.styles];\nvar RenderType_SubstanceFormMonomersCardComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_SubstanceFormMonomersCardComponent, data: {} });\nexport { RenderType_SubstanceFormMonomersCardComponent as RenderType_SubstanceFormMonomersCardComponent };\nfunction View_SubstanceFormMonomersCardComponent_2(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"mat-divider\", [[\"class\", \"form-divider mat-divider\"], [\"role\", \"separator\"]], [[1, \"aria-orientation\", 0], [2, \"mat-divider-vertical\", null], [2, \"mat-divider-horizontal\", null], [2, \"mat-divider-inset\", null]], null, null, i2.View_MatDivider_0, i2.RenderType_MatDivider)), i1.ɵdid(1, 49152, null, 0, i3.MatDivider, [], { inset: [0, \"inset\"] }, null)], function (_ck, _v) { var currVal_4 = true; _ck(_v, 1, 0, currVal_4); }, function (_ck, _v) { var currVal_0 = (i1.ɵnov(_v, 1).vertical ? \"vertical\" : \"horizontal\"); var currVal_1 = i1.ɵnov(_v, 1).vertical; var currVal_2 = !i1.ɵnov(_v, 1).vertical; var currVal_3 = i1.ɵnov(_v, 1).inset; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3); }); }\nfunction View_SubstanceFormMonomersCardComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 5, \"div\", [[\"appScrollToTarget\", \"\"], [\"class\", \"monomer\"]], [[8, \"id\", 0]], null, null, null, null)), i1.ɵdid(1, 4341760, null, 0, i4.ScrollToTargetDirective, [i1.ElementRef, i5.ScrollToService], null, null), (_l()(), i1.ɵeld(2, 0, null, null, 1, \"app-monomer-form\", [], null, [[null, \"monomerDeleted\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"monomerDeleted\" === en)) {\n        var pd_0 = (_co.deleteCode($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i6.View_MonomerFormComponent_0, i6.RenderType_MonomerFormComponent)), i1.ɵdid(3, 4308992, null, 0, i7.MonomerFormComponent, [i8.ControlledVocabularyService, i9.MatDialog, i10.UtilsService, i11.OverlayContainer], { monomer: [0, \"monomer\"] }, { monomerDeleted: \"monomerDeleted\" }), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_SubstanceFormMonomersCardComponent_2)), i1.ɵdid(5, 16384, null, 0, i12.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var currVal_1 = _v.context.$implicit; _ck(_v, 3, 0, currVal_1); var currVal_2 = !_v.context.last; _ck(_v, 5, 0, currVal_2); }, function (_ck, _v) { var currVal_0 = (\"substance-monomer-\" + _v.context.index); _ck(_v, 0, 0, currVal_0); }); }\nexport function View_SubstanceFormMonomersCardComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"flex-row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 0, \"span\", [[\"class\", \"middle-fill\"]], null, null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_SubstanceFormMonomersCardComponent_1)), i1.ɵdid(3, 278528, null, 0, i12.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.monomers; _ck(_v, 3, 0, currVal_0); }, null); }\nexport function View_SubstanceFormMonomersCardComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-substance-form-monomers-card\", [], null, null, null, View_SubstanceFormMonomersCardComponent_0, RenderType_SubstanceFormMonomersCardComponent)), i1.ɵdid(1, 4440064, null, 0, i13.SubstanceFormMonomersCardComponent, [i14.SubstanceFormMonomersService, i5.ScrollToService, i15.GoogleAnalyticsService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar SubstanceFormMonomersCardComponentNgFactory = i1.ɵccf(\"app-substance-form-monomers-card\", i13.SubstanceFormMonomersCardComponent, View_SubstanceFormMonomersCardComponent_Host_0, {}, { menuLabelUpdate: \"menuLabelUpdate\", hiddenStateUpdate: \"hiddenStateUpdate\", canAddItemUpdate: \"canAddItemUpdate\", componentDestroyed: \"componentDestroyed\" }, []);\nexport { SubstanceFormMonomersCardComponentNgFactory as SubstanceFormMonomersCardComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".mat-divider.mat-divider-inset[_ngcontent-%COMP%]{margin-left:0}.mat-divider[_ngcontent-%COMP%]{border-top-color:rgba(0,0,0,.5)}.code[_ngcontent-%COMP%]:nth-child(odd){background-color:rgba(68,138,255,.07)}.code[_ngcontent-%COMP%]:nth-child(odd)     .mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover{background-color:rgba(68,138,255,.15)}.code[_ngcontent-%COMP%]:nth-child(even)     .mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover{background-color:rgba(128,128,128,.15)}.code[_ngcontent-%COMP%]     .mat-expansion-panel, .code[_ngcontent-%COMP%]     .mat-table, .code[_ngcontent-%COMP%]     textarea{background-color:transparent}.search[_ngcontent-%COMP%]{width:400px;max-width:100%}\"];\nexport { styles as styles };\n","<div class=\"flex-row\">\n  <span class=\"middle-fill\"></span>\n  <!-- <button mat-button (click)=\"addCode()\">\n    Add Monomer <mat-icon svgIcon=\"add_circle_outline\"></mat-icon>\n  </button> -->\n</div>\n<div class=\"monomer\" *ngFor=\"let monomer of monomers; last as isLast; index as index\" appScrollToTarget\n  [id]=\"'substance-monomer-' + index\">\n  <app-monomer-form [monomer]=\"monomer\" (monomerDeleted)=\"deleteCode($event)\"></app-monomer-form>\n  <mat-divider class=\"form-divider\" [inset]=\"true\" *ngIf=\"!isLast\"></mat-divider>\n</div>\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./substance-form-monomers.module\";\nimport * as i2 from \"../../../../../node_modules/@angular/material/tooltip/typings/index.ngfactory\";\nimport * as i3 from \"../../../../../node_modules/@angular/material/dialog/typings/index.ngfactory\";\nimport * as i4 from \"../../../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i5 from \"../references/references-dialogs/refernce-form-dialog.component.ngfactory\";\nimport * as i6 from \"../references/references-dialogs/reuse-references-dialog.component.ngfactory\";\nimport * as i7 from \"../references/apply-reference/apply-reference.component.ngfactory\";\nimport * as i8 from \"../property-parameter-dialog/property-parameter-dialog.component.ngfactory\";\nimport * as i9 from \"../subunit-selector/subunit-selector.component.ngfactory\";\nimport * as i10 from \"../subunit-selector-dialog/subunit-selector-dialog.component.ngfactory\";\nimport * as i11 from \"../amount-form-dialog/amount-form-dialog.component.ngfactory\";\nimport * as i12 from \"../physical-parameter-form-dialog/physical-parameter-form-dialog.component.ngfactory\";\nimport * as i13 from \"../cv-dialog/cv-dialog.component.ngfactory\";\nimport * as i14 from \"../json-dialog/json-dialog.component.ngfactory\";\nimport * as i15 from \"../audit-info/audit-info.component.ngfactory\";\nimport * as i16 from \"../submit-success-dialog/submit-success-dialog.component.ngfactory\";\nimport * as i17 from \"./substance-form-monomers-card.component.ngfactory\";\nimport * as i18 from \"@angular/common\";\nimport * as i19 from \"@angular/forms\";\nimport * as i20 from \"@angular/cdk/observers\";\nimport * as i21 from \"@angular/cdk/overlay\";\nimport * as i22 from \"@angular/cdk/bidi\";\nimport * as i23 from \"@angular/material/menu\";\nimport * as i24 from \"@angular/material/tooltip\";\nimport * as i25 from \"@angular/platform-browser\";\nimport * as i26 from \"@angular/material/core\";\nimport * as i27 from \"@angular/material/select\";\nimport * as i28 from \"@angular/material/autocomplete\";\nimport * as i29 from \"@angular/material/dialog\";\nimport * as i30 from \"@angular/material/paginator\";\nimport * as i31 from \"../../dynamic-component-loader/dynamic-component-loader.module\";\nimport * as i32 from \"@angular/material/form-field\";\nimport * as i33 from \"@angular/cdk/platform\";\nimport * as i34 from \"@angular/cdk/portal\";\nimport * as i35 from \"@angular/cdk/scrolling\";\nimport * as i36 from \"@angular/material/checkbox\";\nimport * as i37 from \"@angular/material/button\";\nimport * as i38 from \"@angular/material/icon\";\nimport * as i39 from \"@angular/cdk/a11y\";\nimport * as i40 from \"@angular/material/tabs\";\nimport * as i41 from \"@angular/material/divider\";\nimport * as i42 from \"@angular/cdk/text-field\";\nimport * as i43 from \"@angular/material/input\";\nimport * as i44 from \"@angular/material/chips\";\nimport * as i45 from \"../../scroll-to/scroll-to.module\";\nimport * as i46 from \"@angular/cdk/table\";\nimport * as i47 from \"@angular/material/table\";\nimport * as i48 from \"@angular/cdk/accordion\";\nimport * as i49 from \"@angular/material/expansion\";\nimport * as i50 from \"@angular/material/badge\";\nimport * as i51 from \"@angular/material/radio\";\nimport * as i52 from \"../../expand-details/expand-details.module\";\nimport * as i53 from \"../../substance-text-search/substance-text-search.module\";\nimport * as i54 from \"@angular/router\";\nimport * as i55 from \"../../substance/substance-image.module\";\nimport * as i56 from \"../../substance-selector/substance-selector.module\";\nimport * as i57 from \"@angular/material/list\";\nimport * as i58 from \"file-select\";\nimport * as i59 from \"@angular/material/button-toggle\";\nimport * as i60 from \"ngx-json-viewer\";\nimport * as i61 from \"../substance-form.module\";\nimport * as i62 from \"@angular/cdk/keycodes\";\nimport * as i63 from \"../../dynamic-component-loader/dynamic-component-manifest\";\nimport * as i64 from \"./substance-form-monomers-card.component\";\nvar SubstanceFormMonomersModuleNgFactory = i0.ɵcmf(i1.SubstanceFormMonomersModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.TooltipComponentNgFactory, i3.MatDialogContainerNgFactory, i4.ɵangular_packages_router_router_lNgFactory, i5.RefernceFormDialogComponentNgFactory, i6.ReuseReferencesDialogComponentNgFactory, i7.ApplyReferenceComponentNgFactory, i8.PropertyParameterDialogComponentNgFactory, i9.SubunitSelectorComponentNgFactory, i10.SubunitSelectorDialogComponentNgFactory, i11.AmountFormDialogComponentNgFactory, i12.PhysicalParameterFormDialogComponentNgFactory, i13.CvDialogComponentNgFactory, i14.JsonDialogComponentNgFactory, i15.AuditInfoComponentNgFactory, i16.SubmitSuccessDialogComponentNgFactory, i17.SubstanceFormMonomersCardComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i18.NgLocalization, i18.NgLocaleLocalization, [i0.LOCALE_ID, [2, i18.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i19.FormBuilder, i19.FormBuilder, []), i0.ɵmpd(4608, i19.ɵangular_packages_forms_forms_o, i19.ɵangular_packages_forms_forms_o, []), i0.ɵmpd(4608, i20.MutationObserverFactory, i20.MutationObserverFactory, []), i0.ɵmpd(4608, i21.Overlay, i21.Overlay, [i21.ScrollStrategyOptions, i21.OverlayContainer, i0.ComponentFactoryResolver, i21.OverlayPositionBuilder, i21.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i18.DOCUMENT, i22.Directionality, [2, i18.Location]]), i0.ɵmpd(5120, i21.ɵc, i21.ɵd, [i21.Overlay]), i0.ɵmpd(5120, i23.MAT_MENU_SCROLL_STRATEGY, i23.ɵb22, [i21.Overlay]), i0.ɵmpd(5120, i24.MAT_TOOLTIP_SCROLL_STRATEGY, i24.MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, [i21.Overlay]), i0.ɵmpd(4608, i25.HAMMER_GESTURE_CONFIG, i26.GestureConfig, [[2, i26.MAT_HAMMER_OPTIONS], [2, i26.MatCommonModule]]), i0.ɵmpd(5120, i27.MAT_SELECT_SCROLL_STRATEGY, i27.MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, [i21.Overlay]), i0.ɵmpd(4608, i26.ErrorStateMatcher, i26.ErrorStateMatcher, []), i0.ɵmpd(5120, i28.MAT_AUTOCOMPLETE_SCROLL_STRATEGY, i28.MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, [i21.Overlay]), i0.ɵmpd(5120, i29.MAT_DIALOG_SCROLL_STRATEGY, i29.MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, [i21.Overlay]), i0.ɵmpd(135680, i29.MatDialog, i29.MatDialog, [i21.Overlay, i0.Injector, [2, i18.Location], [2, i29.MAT_DIALOG_DEFAULT_OPTIONS], i29.MAT_DIALOG_SCROLL_STRATEGY, [3, i29.MatDialog], i21.OverlayContainer]), i0.ɵmpd(5120, i30.MatPaginatorIntl, i30.MAT_PAGINATOR_INTL_PROVIDER_FACTORY, [[3, i30.MatPaginatorIntl]]), i0.ɵmpd(1073742336, i18.CommonModule, i18.CommonModule, []), i0.ɵmpd(1073742336, i31.DynamicComponentLoaderModule, i31.DynamicComponentLoaderModule, []), i0.ɵmpd(1073742336, i19.ɵangular_packages_forms_forms_d, i19.ɵangular_packages_forms_forms_d, []), i0.ɵmpd(1073742336, i19.ReactiveFormsModule, i19.ReactiveFormsModule, []), i0.ɵmpd(1073742336, i19.FormsModule, i19.FormsModule, []), i0.ɵmpd(1073742336, i20.ObserversModule, i20.ObserversModule, []), i0.ɵmpd(1073742336, i32.MatFormFieldModule, i32.MatFormFieldModule, []), i0.ɵmpd(1073742336, i22.BidiModule, i22.BidiModule, []), i0.ɵmpd(1073742336, i26.MatCommonModule, i26.MatCommonModule, [[2, i26.MATERIAL_SANITY_CHECKS], [2, i25.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i33.PlatformModule, i33.PlatformModule, []), i0.ɵmpd(1073742336, i26.MatRippleModule, i26.MatRippleModule, []), i0.ɵmpd(1073742336, i34.PortalModule, i34.PortalModule, []), i0.ɵmpd(1073742336, i35.ScrollingModule, i35.ScrollingModule, []), i0.ɵmpd(1073742336, i21.OverlayModule, i21.OverlayModule, []), i0.ɵmpd(1073742336, i23._MatMenuDirectivesModule, i23._MatMenuDirectivesModule, []), i0.ɵmpd(1073742336, i23.MatMenuModule, i23.MatMenuModule, []), i0.ɵmpd(1073742336, i36._MatCheckboxRequiredValidatorModule, i36._MatCheckboxRequiredValidatorModule, []), i0.ɵmpd(1073742336, i36.MatCheckboxModule, i36.MatCheckboxModule, []), i0.ɵmpd(1073742336, i37.MatButtonModule, i37.MatButtonModule, []), i0.ɵmpd(1073742336, i38.MatIconModule, i38.MatIconModule, []), i0.ɵmpd(1073742336, i39.A11yModule, i39.A11yModule, []), i0.ɵmpd(1073742336, i24.MatTooltipModule, i24.MatTooltipModule, []), i0.ɵmpd(1073742336, i40.MatTabsModule, i40.MatTabsModule, []), i0.ɵmpd(1073742336, i41.MatDividerModule, i41.MatDividerModule, []), i0.ɵmpd(1073742336, i26.MatPseudoCheckboxModule, i26.MatPseudoCheckboxModule, []), i0.ɵmpd(1073742336, i26.MatOptionModule, i26.MatOptionModule, []), i0.ɵmpd(1073742336, i27.MatSelectModule, i27.MatSelectModule, []), i0.ɵmpd(1073742336, i42.TextFieldModule, i42.TextFieldModule, []), i0.ɵmpd(1073742336, i43.MatInputModule, i43.MatInputModule, []), i0.ɵmpd(1073742336, i44.MatChipsModule, i44.MatChipsModule, []), i0.ɵmpd(1073742336, i28.MatAutocompleteModule, i28.MatAutocompleteModule, []), i0.ɵmpd(1073742336, i45.ScrollToModule, i45.ScrollToModule, []), i0.ɵmpd(1073742336, i29.MatDialogModule, i29.MatDialogModule, []), i0.ɵmpd(1073742336, i46.CdkTableModule, i46.CdkTableModule, []), i0.ɵmpd(1073742336, i47.MatTableModule, i47.MatTableModule, []), i0.ɵmpd(1073742336, i48.CdkAccordionModule, i48.CdkAccordionModule, []), i0.ɵmpd(1073742336, i49.MatExpansionModule, i49.MatExpansionModule, []), i0.ɵmpd(1073742336, i50.MatBadgeModule, i50.MatBadgeModule, []), i0.ɵmpd(1073742336, i51.MatRadioModule, i51.MatRadioModule, []), i0.ɵmpd(1073742336, i52.ExpandDetailsModule, i52.ExpandDetailsModule, []), i0.ɵmpd(1073742336, i53.SubstanceTextSearchModule, i53.SubstanceTextSearchModule, []), i0.ɵmpd(1073742336, i54.RouterModule, i54.RouterModule, [[2, i54.ɵangular_packages_router_router_a], [2, i54.Router]]), i0.ɵmpd(1073742336, i55.SubstanceImageModule, i55.SubstanceImageModule, []), i0.ɵmpd(1073742336, i56.SubstanceSelectorModule, i56.SubstanceSelectorModule, []), i0.ɵmpd(1073742336, i26.MatLineModule, i26.MatLineModule, []), i0.ɵmpd(1073742336, i57.MatListModule, i57.MatListModule, []), i0.ɵmpd(1073742336, i58.FileSelectModule, i58.FileSelectModule, []), i0.ɵmpd(1073742336, i59.MatButtonToggleModule, i59.MatButtonToggleModule, []), i0.ɵmpd(1073742336, i60.NgxJsonViewerModule, i60.NgxJsonViewerModule, []), i0.ɵmpd(1073742336, i61.SubstanceFormModule, i61.SubstanceFormModule, []), i0.ɵmpd(1073742336, i30.MatPaginatorModule, i30.MatPaginatorModule, []), i0.ɵmpd(1073742336, i1.SubstanceFormMonomersModule, i1.SubstanceFormMonomersModule, []), i0.ɵmpd(256, i44.MAT_CHIPS_DEFAULT_OPTIONS, { separatorKeyCodes: [i62.ENTER] }, []), i0.ɵmpd(1024, i54.ROUTES, function () { return [[]]; }, []), i0.ɵmpd(256, i63.DYNAMIC_COMPONENT, i64.SubstanceFormMonomersCardComponent, [])]); });\nexport { SubstanceFormMonomersModuleNgFactory as SubstanceFormMonomersModuleNgFactory };\n","import { Output, EventEmitter } from '@angular/core';\n\nexport abstract class SubstanceFormBase {\n    analyticsEventCategory: string;\n    @Output() menuLabelUpdate = new EventEmitter<string>();\n    @Output() hiddenStateUpdate = new EventEmitter<boolean>();\n    @Output() canAddItemUpdate = new EventEmitter<boolean>();\n    @Output() componentDestroyed = new EventEmitter<void>();\n}\n"],"sourceRoot":"webpack:///"}