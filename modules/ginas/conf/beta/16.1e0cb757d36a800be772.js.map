{"version":3,"sources":["./src/app/core/substance-form/nucleic-acid-details-form/nucleic-acid-details-form.module.ts","./src/app/core/substance-form/nucleic-acid-details-form/nucleic-acid-details-form.component.ts","./src/app/core/substance-form/nucleic-acid-details-form/nucleic-acid-details-form.component.ts.pre-build-optimizer.js","./src/app/core/substance-form/nucleic-acid-details-form/nucleic-acid-details-form.component.ngfactory.js.pre-build-optimizer.js","./src/app/core/substance-form/nucleic-acid-details-form/nucleic-acid-details-form.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/core/substance-form/nucleic-acid-details-form/nucleic-acid-details-form.component.html","./src/app/core/substance-form/nucleic-acid-details-form/nucleic-acid-details-form.module.ngfactory.js.pre-build-optimizer.js","./src/app/core/substance-form/base-classes/substance-form-base.ts"],"names":["substanceFormService","gaService","cvService","subscriptions","dropdownSettings","analyticsEventCategory","_this","ngOnInit","this","menuLabelUpdate","emit","nucleicAcidSubscription","substanceNucleicAcid","subscribe","nucleicAcid","push","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","ngAfterViewInit","ngOnDestroy","forEach","subscription","unsubscribe","updateAccess","access","update","field","event","nucleicAcidType","sequenceOrigin","sequenceType","updateSubtype","tags","nucleicAcidSubType","RenderType_NucleicAcidDetailsFormComponent","encapsulation","styles","data","View_NucleicAcidDetailsFormComponent_1","_l","ad","$event","View_NucleicAcidDetailsFormComponent_0","View_NucleicAcidDetailsFormComponent_Host_0","_ck","_v","NucleicAcidDetailsFormComponentNgFactory","hiddenStateUpdate","canAddItemUpdate","componentDestroyed","NucleicAcidDetailsFormModuleNgFactory","separatorKeyCodes"],"mappings":"mHAaA,aAiB4C,OAjB5C,gB,wcCJA,cAWE,WACUA,EACDC,EACAC,GAHT,MAKE,YAAMD,IAAU,KCRZ,ODII,EAAAD,uBACD,EAAAC,YACA,EAAAC,YALH,EAAAC,cAAqC,GAC3C,EAAAC,iBAAsC,GAOpC,EAAKC,uBAAyB,sCCTnBC,EDkDf,OApDqD,SAcnD,YAAAC,SAAA,sBACEC,KAAKC,gBAAgBC,KAAK,+BAC1B,IAAMC,EAA0BH,KAAKR,qBAAqBY,qBAAqBC,WAAU,SAAAC,GACvF,EAAKA,YAAcA,KAErBN,KAAKL,cAAcY,KAAKJ,GACxBH,KAAKJ,iBAAmB,CAAEY,iBAAiB,EAAOC,QAAS,QAASC,UAAW,UAAWC,cAAe,aACvGC,gBAAiB,eAAgBC,eAAgB,EAAGC,mBAAmB,IAG3E,YAAAC,gBAAA,aAGA,YAAAC,YAAA,WACEhB,KAAKL,cAAcsB,SAAQ,SAAAC,GACzBA,EAAaC,kBAIjB,YAAAC,aAAA,SAAaC,GACXrB,KAAKM,YAAYe,OAASA,GAG5B,YAAAC,OAAA,SAAQC,EAAeC,GACP,oBAAVD,EACFvB,KAAKM,YAAYmB,gBAAkBD,EAChB,mBAAVD,EACTvB,KAAKM,YAAYoB,eAAiBF,EACf,iBAAVD,IACTvB,KAAKM,YAAYqB,aAAeH,IAIpC,YAAAI,cAAA,SAAcC,GACV7B,KAAKM,YAAYwB,mBAAqBD,GAI5C,EA1DA,C,UAMqD,G,wBEYjDE,EAA6C,KAAQ,CAAEC,cAAe,EAAGC,OADhC,CCpBhC,CAAC,mwBDqB+GC,KAAM,KAEnI,SAASC,EAAuCC,GAAM,OAAO,KAAQ,EAAG,EE7BxE,8FACE,qFACE,sLAAsF,oBF6BlFC,GADsD,IE5B1D,EAA+K,UF4B3Jf,OAAO,kBAAmBgB,IAC5BD,GE7BlB,yJACA,uGACE,uMAAoE,mBF8BlEA,GAD0C,IE7B5C,EACkD,UF4BhCT,cAAcU,IAChBD,GE9BhB,8JAGF,qGACE,iKAAmE,oBF6BjEA,GADqD,IE5BvD,EAA4J,UF4B1If,OAAO,iBAAkBgB,IAC3BD,GE7BhB,yJAEF,kLAAsH,oBF8BlHA,GADmD,IE7BvD,EAAoK,UF6BhJf,OAAO,eAAgBgB,IACzBD,GE9BlB,0JACA,8GAAoB,kBFgChBA,GADyC,IE/B7C,EAAqF,UF+BjEjB,aAAakB,IACfD,GEhClB,mGAGF,qFACE,oIAAyC,gCAbzC,QAA0D,oBAA7B,oBAA4G,EAAqC,6BAE5K,QACkB,uBADA,uBAAuF,EAAuC,gCAIhJ,QAAyC,kBAA3B,kBAAuG,EAAsC,4BAE7J,SAAyD,gBAAzB,gBAAiD,EAAoC,0BACrH,SAAuD,EAA6B,oBAIpF,SAAgB,EAAwB,qBF8BrC,SAASE,EAAuCH,GAAM,OAAO,KAAQ,EAAG,EE7C/E,qGAAqD,cAArD,QAAqD,YAAD,qBF8C7C,SAASI,EAA4CJ,GAAM,OAAO,KAAQ,EAAG,EAAEA,MAAQ,KAAQ,EAAG,EAAG,KAAM,KAAM,EAAG,gCAAiC,GAAI,KAAM,KAAM,KAAMG,EAAwCR,IAA8C,KAAQ,EAAG,QAAS,KAAM,EAAG,EAAqC,CAAC,IAA0B,IAA4B,KAAiC,KAAM,QAAQ,SAAUU,EAAKC,GAAMD,EAAIC,EAAI,EAAG,KAAO,MACvd,IAAIC,EAA2C,KAAQ,gCAAiC,EAAqCH,EAA6C,GAAI,CAAEvC,gBAAiB,kBAAmB2C,kBAAmB,oBAAqBC,iBAAkB,mBAAoBC,mBAAoB,sBAAwB,I,gmBG/C9U,uEAmFA,IAAIC,GAAwC,KAAQ,EAAiC,IAAI,SAAUX,GAAM,OAAO,KAAQ,CAAC,KAAQ,IAAK,IAA6B,KAAqC,CAAC,CAAC,EAAG,CAAC,IAA8B,IAAgC,IAA+C,IAAyC,IAA4C,IAAqC,IAAyC,IAA8C,IAAuC,IAA6C,IAAwC,IAAmD,IAAgC,IAAkC,IAAiC,IAA2C,IAA0C,IAA8C,IAAgD,IAA2C,IAAsC,IAA0C,IAAiD,IAAgD,CAAC,EAAG,KAA8B,MAAkB,KAAQ,KAAM,IAAoB,IAA0B,CAAC,IAAc,CAAC,EAAG,OAA0C,KAAQ,KAAM,IAA6B,IAA6B,IAAK,KAAQ,KAAM,IAAuB,IAAuB,IAAK,KAAQ,KAAM,IAAiB,IAAiB,IAAK,KAAQ,KAAM,IAAqC,IAAqC,IAAK,KAAQ,KAAM,IAAa,IAAa,CAAC,IAA2B,IAAsB,IAA6B,IAA4B,IAA+B,IAAa,IAAW,IAAc,KAAoB,CAAC,EAAG,OAAiB,KAAQ,KAAM,IAAQ,IAAQ,CAAC,MAAe,KAAQ,KAAM,KAAgC,KAAiD,CAAC,MAAe,KAAQ,KAAM,KAA8B,KAAU,CAAC,MAAe,KAAQ,KAAM,KAAiC,KAAyC,CAAC,MAAe,KAAQ,KAAM,KAA2B,IAAmB,CAAC,CAAC,EAAG,KAAyB,CAAC,EAAG,OAAwB,KAAQ,KAAM,KAAsC,KAA8C,CAAC,MAAe,KAAQ,KAAM,IAAgC,IAAiD,CAAC,MAAe,KAAQ,OAAQ,IAAe,IAAe,CAAC,IAAa,IAAa,CAAC,EAAG,KAAe,CAAC,EAAG,KAAiC,IAAgC,CAAC,EAAG,KAAgB,MAAwB,KAAQ,WAAY,IAAkB,IAAkB,IAAK,KAAQ,WAAY,KAAkC,KAAkC,IAAK,KAAQ,WAAY,IAAqB,IAAqB,IAAK,KAAQ,WAAY,KAAwB,KAAwB,IAAK,KAAQ,WAAY,KAAoB,KAAoB,IAAK,KAAQ,WAAY,KAAqB,KAAqB,IAAK,KAAQ,WAAY,KAAoB,KAAoB,IAAK,KAAQ,WAAY,IAAqC,IAAqC,IAAK,KAAQ,WAAY,IAAyB,IAAyB,IAAK,KAAQ,WAAY,IAAiB,IAAiB,IAAK,KAAQ,WAAY,KAAgB,KAAgB,IAAK,KAAQ,WAAY,KAAkB,KAAkB,IAAK,KAAQ,WAAY,KAAqB,KAAqB,IAAK,KAAQ,WAAY,IAAmB,IAAmB,IAAK,KAAQ,WAAY,IAAqB,IAAqB,CAAC,CAAC,EAAG,KAA6B,CAAC,EAAG,QAAsB,KAAQ,WAAY,IAAqB,IAAqB,IAAK,KAAQ,WAAY,IAA6B,IAA6B,IAAK,KAAQ,WAAY,IAAqB,IAAqB,IAAK,KAAQ,WAAY,KAAqB,KAAqB,IAAK,KAAQ,WAAY,KAA8B,KAA8B,IAAK,KAAQ,WAAY,KAAmB,KAAmB,IAAK,KAAQ,WAAY,KAAyC,KAAyC,IAAK,KAAQ,WAAY,KAAuB,KAAuB,IAAK,KAAQ,WAAY,KAAqB,KAAqB,IAAK,KAAQ,WAAY,KAAmB,KAAmB,IAAK,KAAQ,WAAY,KAAgB,KAAgB,IAAK,KAAQ,WAAY,KAAsB,KAAsB,IAAK,KAAQ,WAAY,KAAmB,KAAmB,IAAK,KAAQ,WAAY,KAAsB,KAAsB,IAAK,KAAQ,WAAY,KAAoB,KAAoB,IAAK,KAAQ,WAAY,KAA2B,KAA2B,IAAK,KAAQ,WAAY,KAAoB,KAAoB,IAAK,KAAQ,WAAY,IAAqB,IAAqB,IAAK,KAAQ,WAAY,KAAoB,KAAoB,IAAK,KAAQ,WAAY,KAAoB,KAAoB,IAAK,KAAQ,WAAY,KAAwB,KAAwB,IAAK,KAAQ,WAAY,KAAwB,KAAwB,IAAK,KAAQ,WAAY,KAAoB,KAAoB,IAAK,KAAQ,WAAY,KAAoB,KAAoB,IAAK,KAAQ,WAAY,KAAyB,KAAyB,IAAK,KAAQ,WAAY,KAA+B,KAA+B,IAAK,KAAQ,WAAY,KAAkB,KAAkB,CAAC,CAAC,EAAG,MAAwC,CAAC,EAAG,QAAe,KAAQ,WAAY,KAA0B,KAA0B,IAAK,KAAQ,WAAY,KAA6B,KAA6B,IAAK,KAAQ,WAAY,IAAmB,IAAmB,IAAK,KAAQ,WAAY,KAAmB,KAAmB,IAAK,KAAQ,WAAY,KAAsB,KAAsB,IAAK,KAAQ,WAAY,KAA2B,KAA2B,IAAK,KAAQ,WAAY,KAAyB,KAAyB,IAAK,KAAQ,WAAY,KAA0B,KAA0B,IAAK,KAAQ,WAAY,KAA8B,KAA8B,IAAK,KAAQ,WAAY,KAAyB,KAAyB,IAAK,KAAQ,WAAY,KAAmB,KAAmB,IAAK,KAAQ,WAAY,KAAwB,KAAwB,IAAK,KAAQ,WAAY,KAAiC,KAAiC,IAAK,KAAQ,WAAY,EAAiC,EAAiC,IAAK,KAAQ,IAAK,KAA+B,CAAEY,kBAAmB,CAAC,OAAc,IAAK,KAAQ,KAAM,MAAY,WAAc,MAAO,CAAC,MAAQ,IAAK,KAAQ,IAAK,KAAuB,EAAqC,U,oCCnF79N,kDAEA,aAMA,OANA,WAEc,KAAA/C,gBAAkB,IAAI,IACtB,KAAA2C,kBAAoB,IAAI,IACxB,KAAAC,iBAAmB,IAAI,IACvB,KAAAC,mBAAqB,IAAI,KALvC","file":"16.1e0cb757d36a800be772.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SubstanceFormModule } from '../substance-form.module';\nimport { NameResolverModule } from '../../name-resolver/name-resolver.module';\n// tslint:disable-next-line:max-line-length\nimport {NgMultiSelectDropDownModule} from 'ng-multiselect-dropdown';\nimport {NucleicAcidDetailsFormComponent} from '@gsrs-core/substance-form/nucleic-acid-details-form/nucleic-acid-details-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(NucleicAcidDetailsFormComponent),\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatSelectModule,\n    SubstanceFormModule,\n    NameResolverModule,\n    NgMultiSelectDropDownModule\n  ],\n  declarations: [\n    NucleicAcidDetailsFormComponent\n  ]\n})\nexport class NucleicAcidDetailsFormModule { }\n","import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\nimport {SubstanceCardBaseFilteredList} from '@gsrs-core/substance-form/base-classes/substance-form-base-filtered-list';\nimport {NucleicAcid, Protein} from '@gsrs-core/substance';\nimport {Subscription} from 'rxjs';\nimport {ControlledVocabularyService, VocabularyTerm} from '@gsrs-core/controlled-vocabulary';\nimport {IDropdownSettings} from 'ng-multiselect-dropdown';\nimport {SubstanceFormService} from '@gsrs-core/substance-form/substance-form.service';\nimport {GoogleAnalyticsService} from '@gsrs-core/google-analytics';\n\n@Component({\n  selector: 'app-nucleic-acid-details-form',\n  templateUrl: './nucleic-acid-details-form.component.html',\n  styleUrls: ['./nucleic-acid-details-form.component.scss']\n})\n// tslint:disable-next-line:max-line-length\nexport class NucleicAcidDetailsFormComponent extends SubstanceCardBaseFilteredList<NucleicAcid> implements OnInit, AfterViewInit, OnDestroy {\n\n  nucleicAcid: NucleicAcid;\nprivate subscriptions: Array<Subscription> = [];\n  dropdownSettings: IDropdownSettings = {};\n  constructor(\n    private substanceFormService: SubstanceFormService,\n    public gaService: GoogleAnalyticsService,\n    public cvService: ControlledVocabularyService\n) {\n    super(gaService);\n    this.analyticsEventCategory = 'substance form Nucleic Acid Details';\n  }\n\n  ngOnInit() {\n    this.menuLabelUpdate.emit('Nucleic Acid Classification');\n    const nucleicAcidSubscription = this.substanceFormService.substanceNucleicAcid.subscribe(nucleicAcid => {\n      this.nucleicAcid = nucleicAcid;\n    });\n    this.subscriptions.push(nucleicAcidSubscription);\n    this.dropdownSettings = { singleSelection: false, idField: 'value', textField: 'display', selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All', itemsShowLimit: 3, allowSearchFilter: true};\n  }\n\n  ngAfterViewInit() {\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  updateAccess(access: Array<string>): void {\n    this.nucleicAcid.access = access;\n  }\n\n  update( field: string, event: any): void {\n    if (field === 'nucleicAcidType') {\n      this.nucleicAcid.nucleicAcidType = event;\n    } else if (field === 'sequenceOrigin') {\n      this.nucleicAcid.sequenceOrigin = event;\n    } else if (field === 'sequenceType') {\n      this.nucleicAcid.sequenceType = event;\n    }\n  }\n\n  updateSubtype(tags: Array<string>) {\n      this.nucleicAcid.nucleicAcidSubType = tags;\n  }\n\n\n}\n","import * as tslib_1 from \"tslib\";\nimport { AfterViewInit, OnDestroy, OnInit } from '@angular/core';\nimport { SubstanceCardBaseFilteredList } from '@gsrs-core/substance-form/base-classes/substance-form-base-filtered-list';\nimport { NucleicAcid } from '@gsrs-core/substance';\nimport { ControlledVocabularyService } from '@gsrs-core/controlled-vocabulary';\nimport { SubstanceFormService } from '@gsrs-core/substance-form/substance-form.service';\nimport { GoogleAnalyticsService } from '@gsrs-core/google-analytics';\nvar NucleicAcidDetailsFormComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(NucleicAcidDetailsFormComponent, _super);\n    function NucleicAcidDetailsFormComponent(substanceFormService, gaService, cvService) {\n        var _this = _super.call(this, gaService) || this;\n        _this.substanceFormService = substanceFormService;\n        _this.gaService = gaService;\n        _this.cvService = cvService;\n        _this.subscriptions = [];\n        _this.dropdownSettings = {};\n        _this.analyticsEventCategory = 'substance form Nucleic Acid Details';\n        return _this;\n    }\n    NucleicAcidDetailsFormComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.menuLabelUpdate.emit('Nucleic Acid Classification');\n        var nucleicAcidSubscription = this.substanceFormService.substanceNucleicAcid.subscribe(function (nucleicAcid) {\n            _this.nucleicAcid = nucleicAcid;\n        });\n        this.subscriptions.push(nucleicAcidSubscription);\n        this.dropdownSettings = { singleSelection: false, idField: 'value', textField: 'display', selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All', itemsShowLimit: 3, allowSearchFilter: true };\n    };\n    NucleicAcidDetailsFormComponent.prototype.ngAfterViewInit = function () {\n    };\n    NucleicAcidDetailsFormComponent.prototype.ngOnDestroy = function () {\n        this.subscriptions.forEach(function (subscription) {\n            subscription.unsubscribe();\n        });\n    };\n    NucleicAcidDetailsFormComponent.prototype.updateAccess = function (access) {\n        this.nucleicAcid.access = access;\n    };\n    NucleicAcidDetailsFormComponent.prototype.update = function (field, event) {\n        if (field === 'nucleicAcidType') {\n            this.nucleicAcid.nucleicAcidType = event;\n        }\n        else if (field === 'sequenceOrigin') {\n            this.nucleicAcid.sequenceOrigin = event;\n        }\n        else if (field === 'sequenceType') {\n            this.nucleicAcid.sequenceType = event;\n        }\n    };\n    NucleicAcidDetailsFormComponent.prototype.updateSubtype = function (tags) {\n        this.nucleicAcid.nucleicAcidSubType = tags;\n    };\n    return NucleicAcidDetailsFormComponent;\n}(SubstanceCardBaseFilteredList));\nexport { NucleicAcidDetailsFormComponent };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./nucleic-acid-details-form.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../cv-input/cv-input.component.ngfactory\";\nimport * as i3 from \"../cv-input/cv-input.component\";\nimport * as i4 from \"../../controlled-vocabulary/controlled-vocabulary.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"../../utils/utils.service\";\nimport * as i7 from \"@angular/cdk/overlay\";\nimport * as i8 from \"../../utils/data-dictionary.service\";\nimport * as i9 from \"../../auth/auth.service\";\nimport * as i10 from \"../tag-selector/tag-selector.component.ngfactory\";\nimport * as i11 from \"../tag-selector/tag-selector.component\";\nimport * as i12 from \"../access-manager/access-manager.component.ngfactory\";\nimport * as i13 from \"../access-manager/access-manager.component\";\nimport * as i14 from \"../audit-info/audit-info.component.ngfactory\";\nimport * as i15 from \"../audit-info/audit-info.component\";\nimport * as i16 from \"@angular/common\";\nimport * as i17 from \"./nucleic-acid-details-form.component\";\nimport * as i18 from \"../substance-form.service\";\nimport * as i19 from \"../../google-analytics/google-analytics.service\";\nvar styles_NucleicAcidDetailsFormComponent = [i0.styles];\nvar RenderType_NucleicAcidDetailsFormComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_NucleicAcidDetailsFormComponent, data: {} });\nexport { RenderType_NucleicAcidDetailsFormComponent as RenderType_NucleicAcidDetailsFormComponent };\nfunction View_NucleicAcidDetailsFormComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 16, \"div\", [[\"class\", \"na-form-container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 12, \"div\", [[\"class\", \"form-row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 1, \"app-cv-input\", [[\"class\", \"type\"], [\"domain\", \"NUCLEIC_ACID_TYPE\"], [\"title\", \"Nucleic Acid Type\"]], null, [[null, \"valueChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"valueChange\" === en)) {\n        var pd_0 = (_co.update(\"nucleicAcidType\", $event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_CvInputComponent_0, i2.RenderType_CvInputComponent)), i1.ɵdid(3, 245760, null, 0, i3.CvInputComponent, [i4.ControlledVocabularyService, i5.MatDialog, i6.UtilsService, i7.OverlayContainer, i8.DataDictionaryService, i9.AuthService], { title: [0, \"title\"], domain: [1, \"domain\"], model: [2, \"model\"] }, { valueChange: \"valueChange\" }), (_l()(), i1.ɵeld(4, 0, null, null, 2, \"div\", [[\"class\", \"mat-form-field-flex subtype\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(5, 0, null, null, 1, \"app-tag-selector\", [[\"class\", \"tags\"], [\"cvDomain\", \"NUCLEIC_ACID_SUBTYPE\"], [\"placeholder\", \"Nucleic Acid SubType\"]], null, [[null, \"tagsUpdate\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"tagsUpdate\" === en)) {\n        var pd_0 = (_co.updateSubtype($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i10.View_TagSelectorComponent_0, i10.RenderType_TagSelectorComponent)), i1.ɵdid(6, 4308992, null, 0, i11.TagSelectorComponent, [i4.ControlledVocabularyService, i5.MatDialog, i7.OverlayContainer, i9.AuthService], { cvDomain: [0, \"cvDomain\"], placeholder: [1, \"placeholder\"], tags: [2, \"tags\"] }, { tagsUpdate: \"tagsUpdate\" }), (_l()(), i1.ɵeld(7, 0, null, null, 2, \"div\", [[\"class\", \"location-container origin\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(8, 0, null, null, 1, \"app-cv-input\", [[\"domain\", \"SEQUENCE_ORIGIN\"], [\"title\", \"Sequence Origin\"]], null, [[null, \"valueChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"valueChange\" === en)) {\n        var pd_0 = (_co.update(\"sequenceOrigin\", $event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_CvInputComponent_0, i2.RenderType_CvInputComponent)), i1.ɵdid(9, 245760, null, 0, i3.CvInputComponent, [i4.ControlledVocabularyService, i5.MatDialog, i6.UtilsService, i7.OverlayContainer, i8.DataDictionaryService, i9.AuthService], { title: [0, \"title\"], domain: [1, \"domain\"], model: [2, \"model\"] }, { valueChange: \"valueChange\" }), (_l()(), i1.ɵeld(10, 0, null, null, 1, \"app-cv-input\", [[\"class\", \"seqtype\"], [\"domain\", \"SEQUENCE_TYPE\"], [\"title\", \"Sequence Type\"]], null, [[null, \"valueChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"valueChange\" === en)) {\n        var pd_0 = (_co.update(\"sequenceType\", $event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_CvInputComponent_0, i2.RenderType_CvInputComponent)), i1.ɵdid(11, 245760, null, 0, i3.CvInputComponent, [i4.ControlledVocabularyService, i5.MatDialog, i6.UtilsService, i7.OverlayContainer, i8.DataDictionaryService, i9.AuthService], { title: [0, \"title\"], domain: [1, \"domain\"], model: [2, \"model\"] }, { valueChange: \"valueChange\" }), (_l()(), i1.ɵeld(12, 0, null, null, 1, \"app-access-manager\", [], null, [[null, \"accessOut\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"accessOut\" === en)) {\n        var pd_0 = (_co.updateAccess($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i12.View_AccessManagerComponent_0, i12.RenderType_AccessManagerComponent)), i1.ɵdid(13, 4308992, null, 0, i13.AccessManagerComponent, [i4.ControlledVocabularyService, i1.ElementRef], { access: [0, \"access\"] }, { accessOut: \"accessOut\" }), (_l()(), i1.ɵeld(14, 0, null, null, 2, \"div\", [[\"class\", \"form-row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(15, 0, null, null, 1, \"app-audit-info\", [], null, null, null, i14.View_AuditInfoComponent_0, i14.RenderType_AuditInfoComponent)), i1.ɵdid(16, 114688, null, 0, i15.AuditInfoComponent, [], { source: [0, \"source\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"Nucleic Acid Type\"; var currVal_1 = \"NUCLEIC_ACID_TYPE\"; var currVal_2 = _co.nucleicAcid.nucleicAcidType; _ck(_v, 3, 0, currVal_0, currVal_1, currVal_2); var currVal_3 = \"NUCLEIC_ACID_SUBTYPE\"; var currVal_4 = \"Nucleic Acid SubType\"; var currVal_5 = _co.nucleicAcid.nucleicAcidSubType; _ck(_v, 6, 0, currVal_3, currVal_4, currVal_5); var currVal_6 = \"Sequence Origin\"; var currVal_7 = \"SEQUENCE_ORIGIN\"; var currVal_8 = _co.nucleicAcid.sequenceOrigin; _ck(_v, 9, 0, currVal_6, currVal_7, currVal_8); var currVal_9 = \"Sequence Type\"; var currVal_10 = \"SEQUENCE_TYPE\"; var currVal_11 = _co.nucleicAcid.sequenceType; _ck(_v, 11, 0, currVal_9, currVal_10, currVal_11); var currVal_12 = _co.nucleicAcid.access; _ck(_v, 13, 0, currVal_12); var currVal_13 = _co.nucleicAcid; _ck(_v, 16, 0, currVal_13); }, null); }\nexport function View_NucleicAcidDetailsFormComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵand(16777216, null, null, 1, null, View_NucleicAcidDetailsFormComponent_1)), i1.ɵdid(1, 16384, null, 0, i16.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.nucleicAcid; _ck(_v, 1, 0, currVal_0); }, null); }\nexport function View_NucleicAcidDetailsFormComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-nucleic-acid-details-form\", [], null, null, null, View_NucleicAcidDetailsFormComponent_0, RenderType_NucleicAcidDetailsFormComponent)), i1.ɵdid(1, 4440064, null, 0, i17.NucleicAcidDetailsFormComponent, [i18.SubstanceFormService, i19.GoogleAnalyticsService, i4.ControlledVocabularyService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar NucleicAcidDetailsFormComponentNgFactory = i1.ɵccf(\"app-nucleic-acid-details-form\", i17.NucleicAcidDetailsFormComponent, View_NucleicAcidDetailsFormComponent_Host_0, {}, { menuLabelUpdate: \"menuLabelUpdate\", hiddenStateUpdate: \"hiddenStateUpdate\", canAddItemUpdate: \"canAddItemUpdate\", componentDestroyed: \"componentDestroyed\" }, []);\nexport { NucleicAcidDetailsFormComponentNgFactory as NucleicAcidDetailsFormComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".subtype[_ngcontent-%COMP%]{width:33%}.tags[_ngcontent-%COMP%]{width:100%}.form-row[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:0 10px;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}.form-row[_ngcontent-%COMP%]   .checkbox-container[_ngcontent-%COMP%]{padding-bottom:18px}.form-row[_ngcontent-%COMP%]   .origin[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .seqtype[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .sequence[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .subtype[_ngcontent-%COMP%], .form-row[_ngcontent-%COMP%]   .type[_ngcontent-%COMP%]{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding-right:10px}\"];\nexport { styles as styles };\n","<div class=\"na-form-container\" *ngIf = \"nucleicAcid\">\n  <div class=\"form-row\">\n    <app-cv-input class = \"type\" domain = \"NUCLEIC_ACID_TYPE\" title = \"Nucleic Acid Type\" (valueChange) = \"update('nucleicAcidType',$event)\" [model] = nucleicAcid.nucleicAcidType></app-cv-input>\n    <div class = \"mat-form-field-flex subtype\">\n      <app-tag-selector placeholder = \"Nucleic Acid SubType\" class=\"tags\" (tagsUpdate)=\"updateSubtype($event)\" [tags]=\"nucleicAcid.nucleicAcidSubType\"\n                        cvDomain=\"NUCLEIC_ACID_SUBTYPE\"></app-tag-selector>\n    </div>\n    <div class= \"location-container origin\">\n      <app-cv-input domain = \"SEQUENCE_ORIGIN\" title = \"Sequence Origin\" (valueChange) = \"update('sequenceOrigin',$event)\" [model] = \"nucleicAcid.sequenceOrigin\"></app-cv-input>\n    </div>\n    <app-cv-input class = \"seqtype\" domain = \"SEQUENCE_TYPE\" title = \"Sequence Type\" [model] = \"nucleicAcid.sequenceType\" (valueChange)=\"update('sequenceType',$event)\"></app-cv-input>\n    <app-access-manager (accessOut)=\"updateAccess($event)\" [access]=\"nucleicAcid.access\">\n    </app-access-manager>\n  </div>\n  <div class = \"form-row\">\n    <app-audit-info [source] = \"nucleicAcid\"></app-audit-info>\n  </div>\n</div>\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./nucleic-acid-details-form.module\";\nimport * as i2 from \"../../../../../node_modules/@angular/material/tooltip/typings/index.ngfactory\";\nimport * as i3 from \"../../../../../node_modules/@angular/material/dialog/typings/index.ngfactory\";\nimport * as i4 from \"../../../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i5 from \"../references/references-dialogs/refernce-form-dialog.component.ngfactory\";\nimport * as i6 from \"../references/references-dialogs/reuse-references-dialog.component.ngfactory\";\nimport * as i7 from \"../references/apply-reference/apply-reference.component.ngfactory\";\nimport * as i8 from \"../references/previous-references/previous-references.component.ngfactory\";\nimport * as i9 from \"../property-parameter-dialog/property-parameter-dialog.component.ngfactory\";\nimport * as i10 from \"../subunit-selector/subunit-selector.component.ngfactory\";\nimport * as i11 from \"../subunit-selector-dialog/subunit-selector-dialog.component.ngfactory\";\nimport * as i12 from \"../amount-form-dialog/amount-form-dialog.component.ngfactory\";\nimport * as i13 from \"../physical-parameter-form-dialog/physical-parameter-form-dialog.component.ngfactory\";\nimport * as i14 from \"../cv-dialog/cv-dialog.component.ngfactory\";\nimport * as i15 from \"../json-dialog/json-dialog.component.ngfactory\";\nimport * as i16 from \"../audit-info/audit-info.component.ngfactory\";\nimport * as i17 from \"../submit-success-dialog/submit-success-dialog.component.ngfactory\";\nimport * as i18 from \"../merge-concept-dialog/merge-concept-dialog.component.ngfactory\";\nimport * as i19 from \"../definition-switch-dialog/definition-switch-dialog.component.ngfactory\";\nimport * as i20 from \"../references/previous-references/previous-references-dialog/previous-references-dialog.component.ngfactory\";\nimport * as i21 from \"../copy-disulfide-dialog/copy-disulfide-dialog.component.ngfactory\";\nimport * as i22 from \"../../loading/loading-overlay/loading-overlay.component.ngfactory\";\nimport * as i23 from \"../../name-resolver/name-resolver-dialog.component.ngfactory\";\nimport * as i24 from \"../../name-resolver/external-site-warning-dialog/external-site-warning-dialog.component.ngfactory\";\nimport * as i25 from \"./nucleic-acid-details-form.component.ngfactory\";\nimport * as i26 from \"@angular/common\";\nimport * as i27 from \"@angular/cdk/observers\";\nimport * as i28 from \"@angular/material/core\";\nimport * as i29 from \"@angular/forms\";\nimport * as i30 from \"@angular/cdk/overlay\";\nimport * as i31 from \"@angular/cdk/bidi\";\nimport * as i32 from \"@angular/material/select\";\nimport * as i33 from \"@angular/material/menu\";\nimport * as i34 from \"@angular/material/tooltip\";\nimport * as i35 from \"@angular/platform-browser\";\nimport * as i36 from \"@angular/material/autocomplete\";\nimport * as i37 from \"@angular/material/dialog\";\nimport * as i38 from \"../../dynamic-component-loader/dynamic-component-loader.module\";\nimport * as i39 from \"@angular/material/form-field\";\nimport * as i40 from \"@angular/cdk/platform\";\nimport * as i41 from \"@angular/cdk/text-field\";\nimport * as i42 from \"@angular/material/input\";\nimport * as i43 from \"@angular/cdk/portal\";\nimport * as i44 from \"@angular/cdk/scrolling\";\nimport * as i45 from \"@angular/material/checkbox\";\nimport * as i46 from \"@angular/material/button\";\nimport * as i47 from \"@angular/material/icon\";\nimport * as i48 from \"@angular/cdk/a11y\";\nimport * as i49 from \"@angular/material/tabs\";\nimport * as i50 from \"@angular/material/divider\";\nimport * as i51 from \"@angular/material/chips\";\nimport * as i52 from \"../../scroll-to/scroll-to.module\";\nimport * as i53 from \"@angular/cdk/table\";\nimport * as i54 from \"@angular/material/table\";\nimport * as i55 from \"@angular/cdk/accordion\";\nimport * as i56 from \"@angular/material/expansion\";\nimport * as i57 from \"@angular/material/badge\";\nimport * as i58 from \"@angular/material/radio\";\nimport * as i59 from \"../../expand-details/expand-details.module\";\nimport * as i60 from \"../../substance-text-search/substance-text-search.module\";\nimport * as i61 from \"@angular/router\";\nimport * as i62 from \"../../substance/substance-image.module\";\nimport * as i63 from \"../../substance-selector/substance-selector.module\";\nimport * as i64 from \"@angular/material/list\";\nimport * as i65 from \"file-select\";\nimport * as i66 from \"@angular/material/button-toggle\";\nimport * as i67 from \"ngx-json-viewer\";\nimport * as i68 from \"@angular/material/progress-bar\";\nimport * as i69 from \"@angular/material/progress-spinner\";\nimport * as i70 from \"../substance-form.module\";\nimport * as i71 from \"../../loading/loading.module\";\nimport * as i72 from \"../../name-resolver/name-resolver.module\";\nimport * as i73 from \"ng-multiselect-dropdown\";\nimport * as i74 from \"@angular/cdk/keycodes\";\nimport * as i75 from \"../../dynamic-component-loader/dynamic-component-manifest\";\nimport * as i76 from \"./nucleic-acid-details-form.component\";\nvar NucleicAcidDetailsFormModuleNgFactory = i0.ɵcmf(i1.NucleicAcidDetailsFormModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.TooltipComponentNgFactory, i3.MatDialogContainerNgFactory, i4.ɵangular_packages_router_router_lNgFactory, i5.RefernceFormDialogComponentNgFactory, i6.ReuseReferencesDialogComponentNgFactory, i7.ApplyReferenceComponentNgFactory, i8.PreviousReferencesComponentNgFactory, i9.PropertyParameterDialogComponentNgFactory, i10.SubunitSelectorComponentNgFactory, i11.SubunitSelectorDialogComponentNgFactory, i12.AmountFormDialogComponentNgFactory, i13.PhysicalParameterFormDialogComponentNgFactory, i14.CvDialogComponentNgFactory, i15.JsonDialogComponentNgFactory, i16.AuditInfoComponentNgFactory, i17.SubmitSuccessDialogComponentNgFactory, i18.MergeConceptDialogComponentNgFactory, i19.DefinitionSwitchDialogComponentNgFactory, i20.PreviousReferencesDialogComponentNgFactory, i21.CopyDisulfideDialogComponentNgFactory, i22.LoadingOverlayComponentNgFactory, i23.NameResolverDialogComponentNgFactory, i24.ExternalSiteWarningDialogComponentNgFactory, i25.NucleicAcidDetailsFormComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i26.NgLocalization, i26.NgLocaleLocalization, [i0.LOCALE_ID, [2, i26.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i27.MutationObserverFactory, i27.MutationObserverFactory, []), i0.ɵmpd(4608, i28.ErrorStateMatcher, i28.ErrorStateMatcher, []), i0.ɵmpd(4608, i29.FormBuilder, i29.FormBuilder, []), i0.ɵmpd(4608, i29.ɵangular_packages_forms_forms_o, i29.ɵangular_packages_forms_forms_o, []), i0.ɵmpd(4608, i30.Overlay, i30.Overlay, [i30.ScrollStrategyOptions, i30.OverlayContainer, i0.ComponentFactoryResolver, i30.OverlayPositionBuilder, i30.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i26.DOCUMENT, i31.Directionality, [2, i26.Location]]), i0.ɵmpd(5120, i30.ɵc, i30.ɵd, [i30.Overlay]), i0.ɵmpd(5120, i32.MAT_SELECT_SCROLL_STRATEGY, i32.MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, [i30.Overlay]), i0.ɵmpd(5120, i33.MAT_MENU_SCROLL_STRATEGY, i33.ɵb22, [i30.Overlay]), i0.ɵmpd(5120, i34.MAT_TOOLTIP_SCROLL_STRATEGY, i34.MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, [i30.Overlay]), i0.ɵmpd(4608, i35.HAMMER_GESTURE_CONFIG, i28.GestureConfig, [[2, i28.MAT_HAMMER_OPTIONS], [2, i28.MatCommonModule]]), i0.ɵmpd(5120, i36.MAT_AUTOCOMPLETE_SCROLL_STRATEGY, i36.MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, [i30.Overlay]), i0.ɵmpd(5120, i37.MAT_DIALOG_SCROLL_STRATEGY, i37.MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, [i30.Overlay]), i0.ɵmpd(135680, i37.MatDialog, i37.MatDialog, [i30.Overlay, i0.Injector, [2, i26.Location], [2, i37.MAT_DIALOG_DEFAULT_OPTIONS], i37.MAT_DIALOG_SCROLL_STRATEGY, [3, i37.MatDialog], i30.OverlayContainer]), i0.ɵmpd(1073742336, i26.CommonModule, i26.CommonModule, []), i0.ɵmpd(1073742336, i38.DynamicComponentLoaderModule, i38.DynamicComponentLoaderModule, []), i0.ɵmpd(1073742336, i27.ObserversModule, i27.ObserversModule, []), i0.ɵmpd(1073742336, i39.MatFormFieldModule, i39.MatFormFieldModule, []), i0.ɵmpd(1073742336, i40.PlatformModule, i40.PlatformModule, []), i0.ɵmpd(1073742336, i41.TextFieldModule, i41.TextFieldModule, []), i0.ɵmpd(1073742336, i42.MatInputModule, i42.MatInputModule, []), i0.ɵmpd(1073742336, i29.ɵangular_packages_forms_forms_d, i29.ɵangular_packages_forms_forms_d, []), i0.ɵmpd(1073742336, i29.ReactiveFormsModule, i29.ReactiveFormsModule, []), i0.ɵmpd(1073742336, i29.FormsModule, i29.FormsModule, []), i0.ɵmpd(1073742336, i31.BidiModule, i31.BidiModule, []), i0.ɵmpd(1073742336, i43.PortalModule, i43.PortalModule, []), i0.ɵmpd(1073742336, i44.ScrollingModule, i44.ScrollingModule, []), i0.ɵmpd(1073742336, i30.OverlayModule, i30.OverlayModule, []), i0.ɵmpd(1073742336, i28.MatCommonModule, i28.MatCommonModule, [[2, i28.MATERIAL_SANITY_CHECKS], [2, i35.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i28.MatRippleModule, i28.MatRippleModule, []), i0.ɵmpd(1073742336, i28.MatPseudoCheckboxModule, i28.MatPseudoCheckboxModule, []), i0.ɵmpd(1073742336, i28.MatOptionModule, i28.MatOptionModule, []), i0.ɵmpd(1073742336, i32.MatSelectModule, i32.MatSelectModule, []), i0.ɵmpd(1073742336, i33._MatMenuDirectivesModule, i33._MatMenuDirectivesModule, []), i0.ɵmpd(1073742336, i33.MatMenuModule, i33.MatMenuModule, []), i0.ɵmpd(1073742336, i45._MatCheckboxRequiredValidatorModule, i45._MatCheckboxRequiredValidatorModule, []), i0.ɵmpd(1073742336, i45.MatCheckboxModule, i45.MatCheckboxModule, []), i0.ɵmpd(1073742336, i46.MatButtonModule, i46.MatButtonModule, []), i0.ɵmpd(1073742336, i47.MatIconModule, i47.MatIconModule, []), i0.ɵmpd(1073742336, i48.A11yModule, i48.A11yModule, []), i0.ɵmpd(1073742336, i34.MatTooltipModule, i34.MatTooltipModule, []), i0.ɵmpd(1073742336, i49.MatTabsModule, i49.MatTabsModule, []), i0.ɵmpd(1073742336, i50.MatDividerModule, i50.MatDividerModule, []), i0.ɵmpd(1073742336, i51.MatChipsModule, i51.MatChipsModule, []), i0.ɵmpd(1073742336, i36.MatAutocompleteModule, i36.MatAutocompleteModule, []), i0.ɵmpd(1073742336, i52.ScrollToModule, i52.ScrollToModule, []), i0.ɵmpd(1073742336, i37.MatDialogModule, i37.MatDialogModule, []), i0.ɵmpd(1073742336, i53.CdkTableModule, i53.CdkTableModule, []), i0.ɵmpd(1073742336, i54.MatTableModule, i54.MatTableModule, []), i0.ɵmpd(1073742336, i55.CdkAccordionModule, i55.CdkAccordionModule, []), i0.ɵmpd(1073742336, i56.MatExpansionModule, i56.MatExpansionModule, []), i0.ɵmpd(1073742336, i57.MatBadgeModule, i57.MatBadgeModule, []), i0.ɵmpd(1073742336, i58.MatRadioModule, i58.MatRadioModule, []), i0.ɵmpd(1073742336, i59.ExpandDetailsModule, i59.ExpandDetailsModule, []), i0.ɵmpd(1073742336, i60.SubstanceTextSearchModule, i60.SubstanceTextSearchModule, []), i0.ɵmpd(1073742336, i61.RouterModule, i61.RouterModule, [[2, i61.ɵangular_packages_router_router_a], [2, i61.Router]]), i0.ɵmpd(1073742336, i62.SubstanceImageModule, i62.SubstanceImageModule, []), i0.ɵmpd(1073742336, i63.SubstanceSelectorModule, i63.SubstanceSelectorModule, []), i0.ɵmpd(1073742336, i28.MatLineModule, i28.MatLineModule, []), i0.ɵmpd(1073742336, i64.MatListModule, i64.MatListModule, []), i0.ɵmpd(1073742336, i65.FileSelectModule, i65.FileSelectModule, []), i0.ɵmpd(1073742336, i66.MatButtonToggleModule, i66.MatButtonToggleModule, []), i0.ɵmpd(1073742336, i67.NgxJsonViewerModule, i67.NgxJsonViewerModule, []), i0.ɵmpd(1073742336, i68.MatProgressBarModule, i68.MatProgressBarModule, []), i0.ɵmpd(1073742336, i69.MatProgressSpinnerModule, i69.MatProgressSpinnerModule, []), i0.ɵmpd(1073742336, i70.SubstanceFormModule, i70.SubstanceFormModule, []), i0.ɵmpd(1073742336, i71.LoadingModule, i71.LoadingModule, []), i0.ɵmpd(1073742336, i72.NameResolverModule, i72.NameResolverModule, []), i0.ɵmpd(1073742336, i73.NgMultiSelectDropDownModule, i73.NgMultiSelectDropDownModule, []), i0.ɵmpd(1073742336, i1.NucleicAcidDetailsFormModule, i1.NucleicAcidDetailsFormModule, []), i0.ɵmpd(256, i51.MAT_CHIPS_DEFAULT_OPTIONS, { separatorKeyCodes: [i74.ENTER] }, []), i0.ɵmpd(1024, i61.ROUTES, function () { return [[]]; }, []), i0.ɵmpd(256, i75.DYNAMIC_COMPONENT, i76.NucleicAcidDetailsFormComponent, [])]); });\nexport { NucleicAcidDetailsFormModuleNgFactory as NucleicAcidDetailsFormModuleNgFactory };\n","import { Output, EventEmitter } from '@angular/core';\n\nexport abstract class SubstanceFormBase {\n    analyticsEventCategory: string;\n    @Output() menuLabelUpdate = new EventEmitter<string>();\n    @Output() hiddenStateUpdate = new EventEmitter<boolean>();\n    @Output() canAddItemUpdate = new EventEmitter<boolean>();\n    @Output() componentDestroyed = new EventEmitter<void>();\n}\n"],"sourceRoot":"webpack:///"}