{"version":3,"sources":["./src/app/core/substance-form/structure/substance-form-structure.module.ts","./src/app/core/substance-form/structure/substance-form-structure-card.component.ts","./src/app/core/substance-form/structure/substance-form-structure-card.component.ts.pre-build-optimizer.js","./src/app/core/substance-form/structure/substance-form-structure-card.component.ngfactory.js.pre-build-optimizer.js","./src/app/core/substance-form/structure/substance-form-structure-card.component.scss.shim.ngstyle.js.pre-build-optimizer.js","./src/app/core/substance-form/structure/substance-form-structure-card.component.html","./src/app/core/substance-form/structure/substance-form-structure.module.ngfactory.js.pre-build-optimizer.js"],"names":["substanceFormService","substanceFormStructureService","structureService","loadingService","dialog","overlayContainerService","gaService","substanceService","substanceFormStructuralUnitsService","isInitializing","subscriptions","_this","ngOnInit","this","overlayContainer","getContainerElement","definitionSubscription","definition","subscribe","def","substanceType","substanceClass","menuLabelUpdate","emit","idealStructSubscription","substanceIdealizedStructure","structure","loadStructure","push","structSubscription","substanceStructure","resolvedMol","mol","updateStructureForm","structureEditor","setMolecule","ngAfterViewInit","ngOnDestroy","forEach","subscription","unsubscribe","editorOnLoad","editor","setLoading","structureUpdated","molfile","smiles","startInitializing","endInitializing","molvecUpdate","interpretStructure","response","processStructurePostResponse","structurePostResponse","Object","keys","key","uuid","updateMoieties","moieties","length","clearTimeout","userMessageTimer","userMessage","setTimeout","openStructureImportDialog","sendEvent","dialogRef","open","height","width","data","style","zIndex","afterClosed","generateSRU","structuralUnits","updateSRUs","openStructureExportDialog","type","openNameResolverDialog","openStructureImageModal","panelClass","id","duplicateCheck","structureErrorsArray","structureDuplicateCheck","resp","messageType","dismissErrorMessage","index","splice","fixLink","link","oldLinkFix","RenderType_SubstanceFormStructureCardComponent","encapsulation","styles","View_SubstanceFormStructureCardComponent_1","_l","ad","View_SubstanceFormStructureCardComponent_2","_v","_handleMousedown","$event","en","_handleKeydown","_handleClick","menu","color","_checkDisabled","_handleMouseEnter","_co","View_SubstanceFormStructureCardComponent_5","View_SubstanceFormStructureCardComponent_4","context","View_SubstanceFormStructureCardComponent_3","View_SubstanceFormStructureCardComponent_6","View_SubstanceFormStructureCardComponent_0","View_SubstanceFormStructureCardComponent_Host_0","_ck","SubstanceFormStructureCardComponentNgFactory","hiddenStateUpdate","canAddItemUpdate","componentDestroyed","SubstanceFormStructureModuleNgFactory","separatorKeyCodes"],"mappings":"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","file":"69.cc4904acb30346811a77.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SubstanceFormStructureCardComponent } from './substance-form-structure-card.component';\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\nimport { StructureEditorModule } from '../../structure-editor/structure-editor.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SubstanceFormModule } from '../substance-form.module';\nimport { NameResolverModule } from '../../name-resolver/name-resolver.module';\nimport { DragDropPasteDirective } from '@gsrs-core/substance-form/structure/drag-drop-paste.component';\nimport { MatMenuModule, MatIconModule, MatButtonModule } from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicComponentLoaderModule.forChild(SubstanceFormStructureCardComponent),\n    StructureEditorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatSelectModule,\n    SubstanceFormModule,\n    NameResolverModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  declarations: [\n    SubstanceFormStructureCardComponent,\n  ]\n})\nexport class SubstanceFormStructureModule { }\n","import { Component, OnInit, AfterViewInit, OnDestroy } from '@angular/core';\nimport { SubstanceFormBase } from '../base-classes/substance-form-base';\nimport { Editor } from '../../structure-editor/structure.editor.model';\nimport { SubstanceStructure } from '@gsrs-core/substance/substance.model';\nimport { SubstanceFormService } from '../substance-form.service';\nimport { StructureService } from '../../structure/structure.service';\nimport { LoadingService } from '../../loading/loading.service';\nimport { InterpretStructureResponse, StructureImportComponent, StructureImageModalComponent } from '@gsrs-core/structure';\nimport { MatDialog } from '@angular/material';\nimport { StructureExportComponent } from '@gsrs-core/structure/structure-export/structure-export.component';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { GoogleAnalyticsService } from '@gsrs-core/google-analytics';\nimport { StructureDuplicationMessage } from '../substance-form.model';\nimport { NameResolverDialogComponent } from '@gsrs-core/name-resolver/name-resolver-dialog.component';\nimport { Subscription } from 'rxjs';\nimport { SubstanceService } from '@gsrs-core/substance/substance.service';\nimport { SubstanceFormStructuralUnitsService } from '../structural-units/substance-form-structural-units.service';\nimport { SubstanceFormStructureService } from './substance-form-structure.service';\n\n@Component({\n  selector: 'app-substance-form-structure-card',\n  templateUrl: './substance-form-structure-card.component.html',\n  styleUrls: ['./substance-form-structure-card.component.scss']\n})\nexport class SubstanceFormStructureCardComponent extends SubstanceFormBase implements OnInit, AfterViewInit, OnDestroy {\n  structureEditor: Editor;\n  structure: SubstanceStructure;\n  userMessage: string;\n  userMessageTimer: any;\n  substanceType: string;\n  smiles: string;\n  mol: string;\n  isInitializing = true;\n  private overlayContainer: HTMLElement;\n  structureErrorsArray: Array<StructureDuplicationMessage>;\n  subscriptions: Array<Subscription> = [];\n\n  constructor(\n    private substanceFormService: SubstanceFormService,\n    private substanceFormStructureService: SubstanceFormStructureService,\n    private structureService: StructureService,\n    private loadingService: LoadingService,\n    private dialog: MatDialog,\n    private overlayContainerService: OverlayContainer,\n    private gaService: GoogleAnalyticsService,\n    private substanceService: SubstanceService,\n    private substanceFormStructuralUnitsService: SubstanceFormStructuralUnitsService\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.overlayContainer = this.overlayContainerService.getContainerElement();\n    const definitionSubscription = this.substanceFormService.definition.subscribe(def => {\n      this.substanceType = def.substanceClass;\n      if (this.substanceType === 'polymer') {\n        this.menuLabelUpdate.emit('Idealized Structure');\n        const idealStructSubscription = this.substanceFormStructureService.substanceIdealizedStructure.subscribe(structure => {\n          if (structure) {\n            this.structure = structure;\n          } else {\n            // while we also want to do something with display structures eventually,\n            // this isn't the place to do it, I don't think ...\n            //\n            // this.substanceFormService.substanceDisplayStructure.subscribe(structure2 => {\n            //   this.structure = structure2;\n            // });\n          }\n          this.loadStructure();\n        });\n        this.subscriptions.push(idealStructSubscription);\n      } else {\n        this.menuLabelUpdate.emit('Structure');\n        const structSubscription = this.substanceFormStructureService.substanceStructure.subscribe(structure => {\n          this.structure = structure;\n          this.loadStructure();\n        });\n        this.subscriptions.push(structSubscription);\n      }\n    });\n    this.subscriptions.push(definitionSubscription);\n    const resolver = this.substanceFormService.resolvedMol.subscribe(mol => {\n      if (mol != null && mol !== '') {\n        this.updateStructureForm(mol);\n        this.structureEditor.setMolecule(mol);\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  editorOnLoad(editor: Editor): void {\n    this.loadingService.setLoading(false);\n    this.structureEditor = editor;\n    this.loadStructure();\n    this.structureEditor.structureUpdated().subscribe(molfile => {\n      this.updateStructureForm(molfile);\n      this.smiles = this.structure && this.structure.smiles || null;\n      this.mol = this.structure && this.structure.molfile || null;\n    });\n    this.isInitializing = false;\n  }\n\n  startInitializing(): void {\n    this.isInitializing = true;\n  }\n\n  endInitializing(): void {\n    this.isInitializing = false;\n  }\n\n  loadStructure(): void {\n    if (this.structure && this.structureEditor && this.structure.molfile) {\n      this.isInitializing = true;\n      this.structureEditor.setMolecule(this.structure.molfile);\n      this.smiles = this.structure.smiles;\n      this.mol = this.structure.molfile;\n      this.isInitializing = false;\n    }\n  }\n\n  molvecUpdate(mol: any): void {\n    this.updateStructureForm(mol);\n    this.structureEditor.setMolecule(mol);\n  }\n\n  updateStructureForm(molfile: string): void {\n    if (!this.isInitializing) {\n      this.structure.molfile = molfile;\n      this.structureService.interpretStructure(molfile).subscribe(response => {\n        this.processStructurePostResponse(response);\n      });\n    }\n  }\n\n  processStructurePostResponse(structurePostResponse?: InterpretStructureResponse): void {\n    if (structurePostResponse && structurePostResponse.structure) {\n\n      // we should only be dealing with this stuff if the total hash changes\n      // or if the charge changes, or if it's a polymer\n      if (this.substanceType === 'polymer' ||\n        this.structure['hash'] !== structurePostResponse.structure['hash'] ||\n        this.structure['charge'] !== structurePostResponse.structure['charge']) {\n\n        this.smiles = structurePostResponse.structure.smiles;\n        this.mol = structurePostResponse.structure.molfile;\n        // this is sometimes overly ambitious\n        Object.keys(structurePostResponse.structure).forEach(key => {\n          // we don't want to do this with molfile, we want to trust the editor\n          if (key !== 'molfile') {\n            this.structure[key] = structurePostResponse.structure[key];\n          }\n        });\n\n        this.structure.uuid = '';\n        this.substanceFormStructureService.updateMoieties(structurePostResponse.moieties);\n\n        if (structurePostResponse.moieties && structurePostResponse.moieties.length > 1) {\n          clearTimeout(this.userMessageTimer);\n\n          this.userMessage = 'Certain moieties may have been updated and/or deleted. Please check that the changes are correct.';\n\n          this.userMessageTimer = setTimeout(() => {\n            this.userMessage = null;\n          }, 20000);\n        }\n      }\n    }\n  }\n\n  openStructureImportDialog(): void {\n    this.gaService.sendEvent('structureForm', 'button:import', 'import structure');\n    const dialogRef = this.dialog.open(StructureImportComponent, {\n      height: 'auto',\n      width: '650px',\n      data: {}\n    });\n    this.overlayContainer.style.zIndex = '1002';\n\n    dialogRef.afterClosed().subscribe((response?: InterpretStructureResponse) => {\n      this.overlayContainer.style.zIndex = null;\n      if (response != null) {\n        if (response && response.structure && response.structure.molfile) {\n          this.structureEditor.setMolecule(response.structure.molfile);\n        }\n        this.processStructurePostResponse(response);\n      }\n    }, () => { });\n  }\n\n  generateSRU(): void {\n    this.structureService.interpretStructure(this.structure.molfile).subscribe(response => {\n      if (response.structuralUnits && response.structuralUnits.length > 0) {\n        this.substanceFormStructuralUnitsService.updateSRUs(response.structuralUnits);\n      }\n    });\n  }\n\n  openStructureExportDialog(): void {\n\n    const dialogRef = this.dialog.open(StructureExportComponent, {\n      height: 'auto',\n      width: '650px',\n      data: {\n        molfile: this.mol,\n        smiles: this.smiles,\n        type: this.substanceType\n      }\n    });\n    this.overlayContainer.style.zIndex = '1002';\n\n    dialogRef.afterClosed().subscribe(() => {\n      this.overlayContainer.style.zIndex = null;\n    }, () => {\n      this.overlayContainer.style.zIndex = null;\n    });\n  }\n\n  openNameResolverDialog(): void {\n    this.gaService.sendEvent('structureForm', 'button:resolveName', 'resolve name');\n    const dialogRef = this.dialog.open(NameResolverDialogComponent, {\n      height: 'auto',\n      width: '800px',\n      data: {}\n    });\n    this.overlayContainer.style.zIndex = '1002';\n\n    dialogRef.afterClosed().subscribe((molfile?: string) => {\n      this.overlayContainer.style.zIndex = null;\n      if (molfile != null && molfile !== '') {\n        this.updateStructureForm(molfile);\n        this.structureEditor.setMolecule(molfile);\n      }\n    }, () => { });\n  }\n\n  openStructureImageModal(): void {\n\n    const dialogRef = this.dialog.open(StructureImageModalComponent, {\n      height: '90%',\n      width: '650px',\n      panelClass: 'structure-image-panel',\n      data: {\n        structure: this.structure.id\n      }\n    });\n\n    this.overlayContainer.style.zIndex = '1002';\n\n    dialogRef.afterClosed().subscribe(() => {\n      this.overlayContainer.style.zIndex = null;\n    }, () => {\n      this.overlayContainer.style.zIndex = null;\n    });\n  }\n\n  duplicateCheck() {\n    this.structureErrorsArray = [];\n    this.substanceFormService.structureDuplicateCheck().subscribe(response => {\n      response.forEach(resp => {\n        if (resp.messageType && resp.messageType !== 'INFO') {\n          this.structureErrorsArray.push(resp);\n        }\n      });\n    });\n  }\n\n  dismissErrorMessage(index: number) {\n    this.structureErrorsArray.splice(index, 1);\n  }\n\n  fixLink(link: string) {\n    return this.substanceService.oldLinkFix(link);\n  }\n}\n","import * as tslib_1 from \"tslib\";\nimport { OnInit, AfterViewInit, OnDestroy } from '@angular/core';\nimport { SubstanceFormBase } from '../base-classes/substance-form-base';\nimport { SubstanceFormService } from '../substance-form.service';\nimport { StructureService } from '../../structure/structure.service';\nimport { LoadingService } from '../../loading/loading.service';\nimport { StructureImportComponent, StructureImageModalComponent } from '@gsrs-core/structure';\nimport { MatDialog } from '@angular/material';\nimport { StructureExportComponent } from '@gsrs-core/structure/structure-export/structure-export.component';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { GoogleAnalyticsService } from '@gsrs-core/google-analytics';\nimport { NameResolverDialogComponent } from '@gsrs-core/name-resolver/name-resolver-dialog.component';\nimport { SubstanceService } from '@gsrs-core/substance/substance.service';\nimport { SubstanceFormStructuralUnitsService } from '../structural-units/substance-form-structural-units.service';\nimport { SubstanceFormStructureService } from './substance-form-structure.service';\nvar SubstanceFormStructureCardComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(SubstanceFormStructureCardComponent, _super);\n    function SubstanceFormStructureCardComponent(substanceFormService, substanceFormStructureService, structureService, loadingService, dialog, overlayContainerService, gaService, substanceService, substanceFormStructuralUnitsService) {\n        var _this = _super.call(this) || this;\n        _this.substanceFormService = substanceFormService;\n        _this.substanceFormStructureService = substanceFormStructureService;\n        _this.structureService = structureService;\n        _this.loadingService = loadingService;\n        _this.dialog = dialog;\n        _this.overlayContainerService = overlayContainerService;\n        _this.gaService = gaService;\n        _this.substanceService = substanceService;\n        _this.substanceFormStructuralUnitsService = substanceFormStructuralUnitsService;\n        _this.isInitializing = true;\n        _this.subscriptions = [];\n        return _this;\n    }\n    SubstanceFormStructureCardComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.overlayContainer = this.overlayContainerService.getContainerElement();\n        var definitionSubscription = this.substanceFormService.definition.subscribe(function (def) {\n            _this.substanceType = def.substanceClass;\n            if (_this.substanceType === 'polymer') {\n                _this.menuLabelUpdate.emit('Idealized Structure');\n                var idealStructSubscription = _this.substanceFormStructureService.substanceIdealizedStructure.subscribe(function (structure) {\n                    if (structure) {\n                        _this.structure = structure;\n                    }\n                    else {\n                        // while we also want to do something with display structures eventually,\n                        // this isn't the place to do it, I don't think ...\n                        //\n                        // this.substanceFormService.substanceDisplayStructure.subscribe(structure2 => {\n                        //   this.structure = structure2;\n                        // });\n                    }\n                    _this.loadStructure();\n                });\n                _this.subscriptions.push(idealStructSubscription);\n            }\n            else {\n                _this.menuLabelUpdate.emit('Structure');\n                var structSubscription = _this.substanceFormStructureService.substanceStructure.subscribe(function (structure) {\n                    _this.structure = structure;\n                    _this.loadStructure();\n                });\n                _this.subscriptions.push(structSubscription);\n            }\n        });\n        this.subscriptions.push(definitionSubscription);\n        var resolver = this.substanceFormService.resolvedMol.subscribe(function (mol) {\n            if (mol != null && mol !== '') {\n                _this.updateStructureForm(mol);\n                _this.structureEditor.setMolecule(mol);\n            }\n        });\n    };\n    SubstanceFormStructureCardComponent.prototype.ngAfterViewInit = function () {\n    };\n    SubstanceFormStructureCardComponent.prototype.ngOnDestroy = function () {\n        this.subscriptions.forEach(function (subscription) {\n            subscription.unsubscribe();\n        });\n    };\n    SubstanceFormStructureCardComponent.prototype.editorOnLoad = function (editor) {\n        var _this = this;\n        this.loadingService.setLoading(false);\n        this.structureEditor = editor;\n        this.loadStructure();\n        this.structureEditor.structureUpdated().subscribe(function (molfile) {\n            _this.updateStructureForm(molfile);\n            _this.smiles = _this.structure && _this.structure.smiles || null;\n            _this.mol = _this.structure && _this.structure.molfile || null;\n        });\n        this.isInitializing = false;\n    };\n    SubstanceFormStructureCardComponent.prototype.startInitializing = function () {\n        this.isInitializing = true;\n    };\n    SubstanceFormStructureCardComponent.prototype.endInitializing = function () {\n        this.isInitializing = false;\n    };\n    SubstanceFormStructureCardComponent.prototype.loadStructure = function () {\n        if (this.structure && this.structureEditor && this.structure.molfile) {\n            this.isInitializing = true;\n            this.structureEditor.setMolecule(this.structure.molfile);\n            this.smiles = this.structure.smiles;\n            this.mol = this.structure.molfile;\n            this.isInitializing = false;\n        }\n    };\n    SubstanceFormStructureCardComponent.prototype.molvecUpdate = function (mol) {\n        this.updateStructureForm(mol);\n        this.structureEditor.setMolecule(mol);\n    };\n    SubstanceFormStructureCardComponent.prototype.updateStructureForm = function (molfile) {\n        var _this = this;\n        if (!this.isInitializing) {\n            this.structure.molfile = molfile;\n            this.structureService.interpretStructure(molfile).subscribe(function (response) {\n                _this.processStructurePostResponse(response);\n            });\n        }\n    };\n    SubstanceFormStructureCardComponent.prototype.processStructurePostResponse = function (structurePostResponse) {\n        var _this = this;\n        if (structurePostResponse && structurePostResponse.structure) {\n            // we should only be dealing with this stuff if the total hash changes\n            // or if the charge changes, or if it's a polymer\n            if (this.substanceType === 'polymer' ||\n                this.structure['hash'] !== structurePostResponse.structure['hash'] ||\n                this.structure['charge'] !== structurePostResponse.structure['charge']) {\n                this.smiles = structurePostResponse.structure.smiles;\n                this.mol = structurePostResponse.structure.molfile;\n                // this is sometimes overly ambitious\n                Object.keys(structurePostResponse.structure).forEach(function (key) {\n                    // we don't want to do this with molfile, we want to trust the editor\n                    if (key !== 'molfile') {\n                        _this.structure[key] = structurePostResponse.structure[key];\n                    }\n                });\n                this.structure.uuid = '';\n                this.substanceFormStructureService.updateMoieties(structurePostResponse.moieties);\n                if (structurePostResponse.moieties && structurePostResponse.moieties.length > 1) {\n                    clearTimeout(this.userMessageTimer);\n                    this.userMessage = 'Certain moieties may have been updated and/or deleted. Please check that the changes are correct.';\n                    this.userMessageTimer = setTimeout(function () {\n                        _this.userMessage = null;\n                    }, 20000);\n                }\n            }\n        }\n    };\n    SubstanceFormStructureCardComponent.prototype.openStructureImportDialog = function () {\n        var _this = this;\n        this.gaService.sendEvent('structureForm', 'button:import', 'import structure');\n        var dialogRef = this.dialog.open(StructureImportComponent, {\n            height: 'auto',\n            width: '650px',\n            data: {}\n        });\n        this.overlayContainer.style.zIndex = '1002';\n        dialogRef.afterClosed().subscribe(function (response) {\n            _this.overlayContainer.style.zIndex = null;\n            if (response != null) {\n                if (response && response.structure && response.structure.molfile) {\n                    _this.structureEditor.setMolecule(response.structure.molfile);\n                }\n                _this.processStructurePostResponse(response);\n            }\n        }, function () { });\n    };\n    SubstanceFormStructureCardComponent.prototype.generateSRU = function () {\n        var _this = this;\n        this.structureService.interpretStructure(this.structure.molfile).subscribe(function (response) {\n            if (response.structuralUnits && response.structuralUnits.length > 0) {\n                _this.substanceFormStructuralUnitsService.updateSRUs(response.structuralUnits);\n            }\n        });\n    };\n    SubstanceFormStructureCardComponent.prototype.openStructureExportDialog = function () {\n        var _this = this;\n        var dialogRef = this.dialog.open(StructureExportComponent, {\n            height: 'auto',\n            width: '650px',\n            data: {\n                molfile: this.mol,\n                smiles: this.smiles,\n                type: this.substanceType\n            }\n        });\n        this.overlayContainer.style.zIndex = '1002';\n        dialogRef.afterClosed().subscribe(function () {\n            _this.overlayContainer.style.zIndex = null;\n        }, function () {\n            _this.overlayContainer.style.zIndex = null;\n        });\n    };\n    SubstanceFormStructureCardComponent.prototype.openNameResolverDialog = function () {\n        var _this = this;\n        this.gaService.sendEvent('structureForm', 'button:resolveName', 'resolve name');\n        var dialogRef = this.dialog.open(NameResolverDialogComponent, {\n            height: 'auto',\n            width: '800px',\n            data: {}\n        });\n        this.overlayContainer.style.zIndex = '1002';\n        dialogRef.afterClosed().subscribe(function (molfile) {\n            _this.overlayContainer.style.zIndex = null;\n            if (molfile != null && molfile !== '') {\n                _this.updateStructureForm(molfile);\n                _this.structureEditor.setMolecule(molfile);\n            }\n        }, function () { });\n    };\n    SubstanceFormStructureCardComponent.prototype.openStructureImageModal = function () {\n        var _this = this;\n        var dialogRef = this.dialog.open(StructureImageModalComponent, {\n            height: '90%',\n            width: '650px',\n            panelClass: 'structure-image-panel',\n            data: {\n                structure: this.structure.id\n            }\n        });\n        this.overlayContainer.style.zIndex = '1002';\n        dialogRef.afterClosed().subscribe(function () {\n            _this.overlayContainer.style.zIndex = null;\n        }, function () {\n            _this.overlayContainer.style.zIndex = null;\n        });\n    };\n    SubstanceFormStructureCardComponent.prototype.duplicateCheck = function () {\n        var _this = this;\n        this.structureErrorsArray = [];\n        this.substanceFormService.structureDuplicateCheck().subscribe(function (response) {\n            response.forEach(function (resp) {\n                if (resp.messageType && resp.messageType !== 'INFO') {\n                    _this.structureErrorsArray.push(resp);\n                }\n            });\n        });\n    };\n    SubstanceFormStructureCardComponent.prototype.dismissErrorMessage = function (index) {\n        this.structureErrorsArray.splice(index, 1);\n    };\n    SubstanceFormStructureCardComponent.prototype.fixLink = function (link) {\n        return this.substanceService.oldLinkFix(link);\n    };\n    return SubstanceFormStructureCardComponent;\n}(SubstanceFormBase));\nexport { SubstanceFormStructureCardComponent };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./substance-form-structure-card.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../../../node_modules/@angular/material/button/typings/index.ngfactory\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/cdk/a11y\";\nimport * as i5 from \"@angular/platform-browser/animations\";\nimport * as i6 from \"../../../../../node_modules/@angular/material/icon/typings/index.ngfactory\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/menu\";\nimport * as i9 from \"@angular/cdk/overlay\";\nimport * as i10 from \"@angular/cdk/bidi\";\nimport * as i11 from \"../../../../../node_modules/@angular/material/menu/typings/index.ngfactory\";\nimport * as i12 from \"@angular/common\";\nimport * as i13 from \"../../structure-editor/structure-editor.component.ngfactory\";\nimport * as i14 from \"../../structure-editor/structure-editor.component\";\nimport * as i15 from \"../../structure/structure.service\";\nimport * as i16 from \"../../loading/loading.service\";\nimport * as i17 from \"./structure-form.component.ngfactory\";\nimport * as i18 from \"./structure-form.component\";\nimport * as i19 from \"../../controlled-vocabulary/controlled-vocabulary.service\";\nimport * as i20 from \"./substance-form-structure-card.component\";\nimport * as i21 from \"../substance-form.service\";\nimport * as i22 from \"./substance-form-structure.service\";\nimport * as i23 from \"@angular/material/dialog\";\nimport * as i24 from \"../../google-analytics/google-analytics.service\";\nimport * as i25 from \"../../substance/substance.service\";\nimport * as i26 from \"../structural-units/substance-form-structural-units.service\";\nvar styles_SubstanceFormStructureCardComponent = [i0.styles];\nvar RenderType_SubstanceFormStructureCardComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_SubstanceFormStructureCardComponent, data: {} });\nexport { RenderType_SubstanceFormStructureCardComponent as RenderType_SubstanceFormStructureCardComponent };\nfunction View_SubstanceFormStructureCardComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 17, \"div\", [[\"class\", \"button-row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 0, \"span\", [[\"class\", \"middle-fill\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 15, \"span\", [[\"class\", \"right-buttons\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 4, \"button\", [[\"color\", \"primary\"], [\"mat-button\", \"\"], [\"matTooltip\", \"Import options\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.openStructureImportDialog() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(4, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.FocusMonitor, [2, i5.ANIMATION_MODULE_TYPE]], { color: [0, \"color\"] }, null), (_l()(), i1.ɵeld(5, 0, null, 0, 1, \"mat-icon\", [[\"class\", \"mat-icon notranslate\"], [\"role\", \"img\"], [\"svgIcon\", \"cloud_upload\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i6.View_MatIcon_0, i6.RenderType_MatIcon)), i1.ɵdid(6, 9158656, null, 0, i7.MatIcon, [i1.ElementRef, i7.MatIconRegistry, [8, null], [2, i7.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null), (_l()(), i1.ɵted(-1, 0, [\" Import \"])), (_l()(), i1.ɵeld(8, 0, null, null, 4, \"button\", [[\"color\", \"primary\"], [\"mat-button\", \"\"], [\"matTooltip\", \"export structure\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.openStructureExportDialog() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(9, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.FocusMonitor, [2, i5.ANIMATION_MODULE_TYPE]], { color: [0, \"color\"] }, null), (_l()(), i1.ɵeld(10, 0, null, 0, 1, \"mat-icon\", [[\"class\", \"mat-icon notranslate\"], [\"role\", \"img\"], [\"svgIcon\", \"get_app\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i6.View_MatIcon_0, i6.RenderType_MatIcon)), i1.ɵdid(11, 9158656, null, 0, i7.MatIcon, [i1.ElementRef, i7.MatIconRegistry, [8, null], [2, i7.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null), (_l()(), i1.ɵted(-1, 0, [\" Export \"])), (_l()(), i1.ɵeld(13, 0, null, null, 4, \"button\", [[\"color\", \"primary\"], [\"mat-button\", \"\"], [\"matTooltip\", \"preview structure stereochemistry\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.openStructureImageModal() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(14, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.FocusMonitor, [2, i5.ANIMATION_MODULE_TYPE]], { color: [0, \"color\"] }, null), (_l()(), i1.ɵeld(15, 0, null, 0, 1, \"mat-icon\", [[\"class\", \"mat-icon notranslate\"], [\"role\", \"img\"], [\"svgIcon\", \"zoom_in\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i6.View_MatIcon_0, i6.RenderType_MatIcon)), i1.ɵdid(16, 9158656, null, 0, i7.MatIcon, [i1.ElementRef, i7.MatIconRegistry, [8, null], [2, i7.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null), (_l()(), i1.ɵted(-1, 0, [\" View stereochemistry \"]))], function (_ck, _v) { var currVal_2 = \"primary\"; _ck(_v, 4, 0, currVal_2); var currVal_5 = \"cloud_upload\"; _ck(_v, 6, 0, currVal_5); var currVal_8 = \"primary\"; _ck(_v, 9, 0, currVal_8); var currVal_11 = \"get_app\"; _ck(_v, 11, 0, currVal_11); var currVal_14 = \"primary\"; _ck(_v, 14, 0, currVal_14); var currVal_17 = \"zoom_in\"; _ck(_v, 16, 0, currVal_17); }, function (_ck, _v) { var currVal_0 = (i1.ɵnov(_v, 4).disabled || null); var currVal_1 = (i1.ɵnov(_v, 4)._animationMode === \"NoopAnimations\"); _ck(_v, 3, 0, currVal_0, currVal_1); var currVal_3 = i1.ɵnov(_v, 6).inline; var currVal_4 = (((i1.ɵnov(_v, 6).color !== \"primary\") && (i1.ɵnov(_v, 6).color !== \"accent\")) && (i1.ɵnov(_v, 6).color !== \"warn\")); _ck(_v, 5, 0, currVal_3, currVal_4); var currVal_6 = (i1.ɵnov(_v, 9).disabled || null); var currVal_7 = (i1.ɵnov(_v, 9)._animationMode === \"NoopAnimations\"); _ck(_v, 8, 0, currVal_6, currVal_7); var currVal_9 = i1.ɵnov(_v, 11).inline; var currVal_10 = (((i1.ɵnov(_v, 11).color !== \"primary\") && (i1.ɵnov(_v, 11).color !== \"accent\")) && (i1.ɵnov(_v, 11).color !== \"warn\")); _ck(_v, 10, 0, currVal_9, currVal_10); var currVal_12 = (i1.ɵnov(_v, 14).disabled || null); var currVal_13 = (i1.ɵnov(_v, 14)._animationMode === \"NoopAnimations\"); _ck(_v, 13, 0, currVal_12, currVal_13); var currVal_15 = i1.ɵnov(_v, 16).inline; var currVal_16 = (((i1.ɵnov(_v, 16).color !== \"primary\") && (i1.ɵnov(_v, 16).color !== \"accent\")) && (i1.ɵnov(_v, 16).color !== \"warn\")); _ck(_v, 15, 0, currVal_15, currVal_16); }); }\nfunction View_SubstanceFormStructureCardComponent_2(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 37, \"div\", [[\"class\", \"button-row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 5, \"span\", [[\"class\", \"left-buttons\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 4, \"button\", [[\"class\", \"dupe-check\"], [\"color\", \"primary\"], [\"mat-button\", \"\"], [\"matTooltip\", \"check the database for duplicate structures\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.duplicateCheck() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(3, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.FocusMonitor, [2, i5.ANIMATION_MODULE_TYPE]], { color: [0, \"color\"] }, null), (_l()(), i1.ɵeld(4, 0, null, 0, 1, \"mat-icon\", [[\"class\", \"mat-icon notranslate\"], [\"role\", \"img\"], [\"svgIcon\", \"search\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i6.View_MatIcon_0, i6.RenderType_MatIcon)), i1.ɵdid(5, 9158656, null, 0, i7.MatIcon, [i1.ElementRef, i7.MatIconRegistry, [8, null], [2, i7.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null), (_l()(), i1.ɵted(-1, 0, [\" Check for duplicates \"])), (_l()(), i1.ɵeld(7, 0, null, null, 0, \"span\", [[\"class\", \"middle-fill\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(8, 0, null, null, 16, \"span\", [[\"class\", \"right-buttons\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(9, 16777216, null, null, 5, \"button\", [[\"aria-haspopup\", \"true\"], [\"class\", \"mat-menu-trigger\"], [\"color\", \"primary\"], [\"mat-button\", \"\"], [\"matTooltip\", \"Import options\"]], [[1, \"aria-expanded\", 0], [1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"mousedown\"], [null, \"keydown\"], [null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"mousedown\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 10)._handleMousedown($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 10)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"click\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 10)._handleClick($event) !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(10, 1196032, null, 0, i8.MatMenuTrigger, [i9.Overlay, i1.ElementRef, i1.ViewContainerRef, i8.MAT_MENU_SCROLL_STRATEGY, [2, i8.MatMenu], [8, null], [2, i10.Directionality], i4.FocusMonitor], { menu: [0, \"menu\"] }, null), i1.ɵdid(11, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.FocusMonitor, [2, i5.ANIMATION_MODULE_TYPE]], { color: [0, \"color\"] }, null), (_l()(), i1.ɵeld(12, 0, null, 0, 1, \"mat-icon\", [[\"class\", \"mat-icon notranslate\"], [\"role\", \"img\"], [\"svgIcon\", \"cloud_upload\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i6.View_MatIcon_0, i6.RenderType_MatIcon)), i1.ɵdid(13, 9158656, null, 0, i7.MatIcon, [i1.ElementRef, i7.MatIconRegistry, [8, null], [2, i7.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null), (_l()(), i1.ɵted(-1, 0, [\" Import... \"])), (_l()(), i1.ɵeld(15, 0, null, null, 4, \"button\", [[\"color\", \"primary\"], [\"mat-button\", \"\"], [\"matTooltip\", \"export structure\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.openStructureExportDialog() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(16, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.FocusMonitor, [2, i5.ANIMATION_MODULE_TYPE]], { color: [0, \"color\"] }, null), (_l()(), i1.ɵeld(17, 0, null, 0, 1, \"mat-icon\", [[\"class\", \"mat-icon notranslate\"], [\"role\", \"img\"], [\"svgIcon\", \"get_app\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i6.View_MatIcon_0, i6.RenderType_MatIcon)), i1.ɵdid(18, 9158656, null, 0, i7.MatIcon, [i1.ElementRef, i7.MatIconRegistry, [8, null], [2, i7.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null), (_l()(), i1.ɵted(-1, 0, [\" Export \"])), (_l()(), i1.ɵeld(20, 0, null, null, 4, \"button\", [[\"color\", \"primary\"], [\"mat-button\", \"\"], [\"matTooltip\", \"preview structure stereochemistry\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.openStructureImageModal() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(21, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.FocusMonitor, [2, i5.ANIMATION_MODULE_TYPE]], { color: [0, \"color\"] }, null), (_l()(), i1.ɵeld(22, 0, null, 0, 1, \"mat-icon\", [[\"class\", \"mat-icon notranslate\"], [\"role\", \"img\"], [\"svgIcon\", \"zoom_in\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i6.View_MatIcon_0, i6.RenderType_MatIcon)), i1.ɵdid(23, 9158656, null, 0, i7.MatIcon, [i1.ElementRef, i7.MatIconRegistry, [8, null], [2, i7.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null), (_l()(), i1.ɵted(-1, 0, [\" View stereochemistry \"])), (_l()(), i1.ɵeld(25, 0, null, null, 12, \"mat-menu\", [], null, null, null, i11.View__MatMenu_0, i11.RenderType__MatMenu)), i1.ɵdid(26, 1294336, [[\"importMenu\", 4]], 3, i8._MatMenu, [i1.ElementRef, i1.NgZone, i8.MAT_MENU_DEFAULT_OPTIONS], null, null), i1.ɵqud(603979776, 1, { _allItems: 1 }), i1.ɵqud(603979776, 2, { items: 1 }), i1.ɵqud(603979776, 3, { lazyContent: 0 }), i1.ɵprd(2048, null, i8.MatMenu, null, [i8._MatMenu]), i1.ɵprd(2048, null, i8.MAT_MENU_PANEL, null, [i8.MatMenu]), (_l()(), i1.ɵeld(32, 0, null, 0, 2, \"button\", [[\"class\", \"mat-menu-item\"], [\"mat-menu-item\", \"\"]], [[1, \"role\", 0], [2, \"mat-menu-item-highlighted\", null], [2, \"mat-menu-item-submenu-trigger\", null], [1, \"tabindex\", 0], [1, \"aria-disabled\", 0], [1, \"disabled\", 0]], [[null, \"click\"], [null, \"mouseenter\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 33)._checkDisabled($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"mouseenter\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 33)._handleMouseEnter() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"click\" === en)) {\n        var pd_2 = (_co.openStructureImportDialog() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i11.View_MatMenuItem_0, i11.RenderType_MatMenuItem)), i1.ɵdid(33, 180224, [[1, 4], [2, 4]], 0, i8.MatMenuItem, [i1.ElementRef, i12.DOCUMENT, i4.FocusMonitor, [2, i8.MAT_MENU_PANEL]], null, null), (_l()(), i1.ɵted(-1, 0, [\" Import Structure \"])), (_l()(), i1.ɵeld(35, 0, null, 0, 2, \"button\", [[\"class\", \"mat-menu-item\"], [\"mat-menu-item\", \"\"]], [[1, \"role\", 0], [2, \"mat-menu-item-highlighted\", null], [2, \"mat-menu-item-submenu-trigger\", null], [1, \"tabindex\", 0], [1, \"aria-disabled\", 0], [1, \"disabled\", 0]], [[null, \"click\"], [null, \"mouseenter\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 36)._checkDisabled($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"mouseenter\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 36)._handleMouseEnter() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"click\" === en)) {\n        var pd_2 = (_co.openNameResolverDialog() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i11.View_MatMenuItem_0, i11.RenderType_MatMenuItem)), i1.ɵdid(36, 180224, [[1, 4], [2, 4]], 0, i8.MatMenuItem, [i1.ElementRef, i12.DOCUMENT, i4.FocusMonitor, [2, i8.MAT_MENU_PANEL]], null, null), (_l()(), i1.ɵted(-1, 0, [\" Resolve name \"]))], function (_ck, _v) { var currVal_2 = \"primary\"; _ck(_v, 3, 0, currVal_2); var currVal_5 = \"search\"; _ck(_v, 5, 0, currVal_5); var currVal_9 = i1.ɵnov(_v, 26); _ck(_v, 10, 0, currVal_9); var currVal_10 = \"primary\"; _ck(_v, 11, 0, currVal_10); var currVal_13 = \"cloud_upload\"; _ck(_v, 13, 0, currVal_13); var currVal_16 = \"primary\"; _ck(_v, 16, 0, currVal_16); var currVal_19 = \"get_app\"; _ck(_v, 18, 0, currVal_19); var currVal_22 = \"primary\"; _ck(_v, 21, 0, currVal_22); var currVal_25 = \"zoom_in\"; _ck(_v, 23, 0, currVal_25); _ck(_v, 26, 0); }, function (_ck, _v) { var currVal_0 = (i1.ɵnov(_v, 3).disabled || null); var currVal_1 = (i1.ɵnov(_v, 3)._animationMode === \"NoopAnimations\"); _ck(_v, 2, 0, currVal_0, currVal_1); var currVal_3 = i1.ɵnov(_v, 5).inline; var currVal_4 = (((i1.ɵnov(_v, 5).color !== \"primary\") && (i1.ɵnov(_v, 5).color !== \"accent\")) && (i1.ɵnov(_v, 5).color !== \"warn\")); _ck(_v, 4, 0, currVal_3, currVal_4); var currVal_6 = (i1.ɵnov(_v, 10).menuOpen || null); var currVal_7 = (i1.ɵnov(_v, 11).disabled || null); var currVal_8 = (i1.ɵnov(_v, 11)._animationMode === \"NoopAnimations\"); _ck(_v, 9, 0, currVal_6, currVal_7, currVal_8); var currVal_11 = i1.ɵnov(_v, 13).inline; var currVal_12 = (((i1.ɵnov(_v, 13).color !== \"primary\") && (i1.ɵnov(_v, 13).color !== \"accent\")) && (i1.ɵnov(_v, 13).color !== \"warn\")); _ck(_v, 12, 0, currVal_11, currVal_12); var currVal_14 = (i1.ɵnov(_v, 16).disabled || null); var currVal_15 = (i1.ɵnov(_v, 16)._animationMode === \"NoopAnimations\"); _ck(_v, 15, 0, currVal_14, currVal_15); var currVal_17 = i1.ɵnov(_v, 18).inline; var currVal_18 = (((i1.ɵnov(_v, 18).color !== \"primary\") && (i1.ɵnov(_v, 18).color !== \"accent\")) && (i1.ɵnov(_v, 18).color !== \"warn\")); _ck(_v, 17, 0, currVal_17, currVal_18); var currVal_20 = (i1.ɵnov(_v, 21).disabled || null); var currVal_21 = (i1.ɵnov(_v, 21)._animationMode === \"NoopAnimations\"); _ck(_v, 20, 0, currVal_20, currVal_21); var currVal_23 = i1.ɵnov(_v, 23).inline; var currVal_24 = (((i1.ɵnov(_v, 23).color !== \"primary\") && (i1.ɵnov(_v, 23).color !== \"accent\")) && (i1.ɵnov(_v, 23).color !== \"warn\")); _ck(_v, 22, 0, currVal_23, currVal_24); var currVal_26 = i1.ɵnov(_v, 33).role; var currVal_27 = i1.ɵnov(_v, 33)._highlighted; var currVal_28 = i1.ɵnov(_v, 33)._triggersSubmenu; var currVal_29 = i1.ɵnov(_v, 33)._getTabIndex(); var currVal_30 = i1.ɵnov(_v, 33).disabled.toString(); var currVal_31 = (i1.ɵnov(_v, 33).disabled || null); _ck(_v, 32, 0, currVal_26, currVal_27, currVal_28, currVal_29, currVal_30, currVal_31); var currVal_32 = i1.ɵnov(_v, 36).role; var currVal_33 = i1.ɵnov(_v, 36)._highlighted; var currVal_34 = i1.ɵnov(_v, 36)._triggersSubmenu; var currVal_35 = i1.ɵnov(_v, 36)._getTabIndex(); var currVal_36 = i1.ɵnov(_v, 36).disabled.toString(); var currVal_37 = (i1.ɵnov(_v, 36).disabled || null); _ck(_v, 35, 0, currVal_32, currVal_33, currVal_34, currVal_35, currVal_36, currVal_37); }); }\nfunction View_SubstanceFormStructureCardComponent_5(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 3, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 0, \"br\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 1, \"a\", [[\"class\", \"internal-link\"], [\"target\", \"_blank\"]], [[8, \"href\", 4]], null, null, null, null)), (_l()(), i1.ɵted(3, null, [\" \", \" \"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.fixLink(_v.context.$implicit.href); _ck(_v, 2, 0, currVal_0); var currVal_1 = _v.context.$implicit.text; _ck(_v, 3, 0, currVal_1); }); }\nfunction View_SubstanceFormStructureCardComponent_4(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 12, \"div\", [[\"class\", \"validation-message\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 3, \"div\", [[\"class\", \"message-type\"]], null, null, null, null, null)), i1.ɵprd(512, null, i12.ɵNgClassImpl, i12.ɵNgClassR2Impl, [i1.IterableDiffers, i1.KeyValueDiffers, i1.ElementRef, i1.Renderer2]), i1.ɵdid(3, 278528, null, 0, i12.NgClass, [i12.ɵNgClassImpl], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), (_l()(), i1.ɵted(4, null, [\"\", \"\"])), (_l()(), i1.ɵeld(5, 0, null, null, 3, \"div\", [[\"class\", \"message\"]], null, null, null, null, null)), (_l()(), i1.ɵted(6, null, [\"\", \"\"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_SubstanceFormStructureCardComponent_5)), i1.ɵdid(8, 278528, null, 0, i12.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i1.ɵeld(9, 0, null, null, 3, \"button\", [[\"mat-icon-button\", \"\"], [\"matTooltip\", \"Dismiss\"]], [[1, \"disabled\", 0], [2, \"_mat-animation-noopable\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.dismissErrorMessage(_v.context.index) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_MatButton_0, i2.RenderType_MatButton)), i1.ɵdid(10, 180224, null, 0, i3.MatButton, [i1.ElementRef, i4.FocusMonitor, [2, i5.ANIMATION_MODULE_TYPE]], null, null), (_l()(), i1.ɵeld(11, 0, null, 0, 1, \"mat-icon\", [[\"class\", \"mat-icon notranslate\"], [\"role\", \"img\"], [\"svgIcon\", \"close\"]], [[2, \"mat-icon-inline\", null], [2, \"mat-icon-no-color\", null]], null, null, i6.View_MatIcon_0, i6.RenderType_MatIcon)), i1.ɵdid(12, 9158656, null, 0, i7.MatIcon, [i1.ElementRef, i7.MatIconRegistry, [8, null], [2, i7.MAT_ICON_LOCATION], [2, i1.ErrorHandler]], { svgIcon: [0, \"svgIcon\"] }, null)], function (_ck, _v) { var currVal_0 = \"message-type\"; var currVal_1 = _v.context.$implicit.messageType; _ck(_v, 3, 0, currVal_0, currVal_1); var currVal_4 = _v.context.$implicit.links; _ck(_v, 8, 0, currVal_4); var currVal_9 = \"close\"; _ck(_v, 12, 0, currVal_9); }, function (_ck, _v) { var currVal_2 = _v.context.$implicit.messageType; _ck(_v, 4, 0, currVal_2); var currVal_3 = _v.context.$implicit.message; _ck(_v, 6, 0, currVal_3); var currVal_5 = (i1.ɵnov(_v, 10).disabled || null); var currVal_6 = (i1.ɵnov(_v, 10)._animationMode === \"NoopAnimations\"); _ck(_v, 9, 0, currVal_5, currVal_6); var currVal_7 = i1.ɵnov(_v, 12).inline; var currVal_8 = (((i1.ɵnov(_v, 12).color !== \"primary\") && (i1.ɵnov(_v, 12).color !== \"accent\")) && (i1.ɵnov(_v, 12).color !== \"warn\")); _ck(_v, 11, 0, currVal_7, currVal_8); }); }\nfunction View_SubstanceFormStructureCardComponent_3(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 2, \"div\", [[\"class\", \"submission-messages\"]], null, null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_SubstanceFormStructureCardComponent_4)), i1.ɵdid(2, 278528, null, 0, i12.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.structureErrorsArray; _ck(_v, 2, 0, currVal_0); }, null); }\nfunction View_SubstanceFormStructureCardComponent_6(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 2, \"div\", [[\"class\", \"button-container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 1, \"button\", [[\"class\", \"mat-flat-button mat-primary\"], [\"color\", \"primary\"], [\"matTooltip\", \"generate structural units for this structure\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.generateSRU() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.ɵted(-1, null, [\"Generate SRUs\"]))], null, null); }\nexport function View_SubstanceFormStructureCardComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 19, \"div\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 8, \"div\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 2, \"div\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 1, \"app-structure-editor\", [[\"style\", \"z-index: 9999\"]], null, [[null, \"loadedMolfile\"], [null, \"editorOnLoad\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"loadedMolfile\" === en)) {\n        var pd_0 = (_co.molvecUpdate($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"editorOnLoad\" === en)) {\n        var pd_1 = (_co.editorOnLoad($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i13.View_StructureEditorComponent_0, i13.RenderType_StructureEditorComponent)), i1.ɵdid(4, 4440064, null, 0, i14.StructureEditorComponent, [i1.PLATFORM_ID, i15.StructureService, i16.LoadingService, i1.ElementRef], null, { editorOnLoad: \"editorOnLoad\", loadedMolfile: \"loadedMolfile\" }), (_l()(), i1.ɵeld(5, 0, null, null, 4, \"div\", [], null, null, null, null, null)), i1.ɵprd(512, null, i12.ɵNgClassImpl, i12.ɵNgClassR2Impl, [i1.IterableDiffers, i1.KeyValueDiffers, i1.ElementRef, i1.Renderer2]), i1.ɵdid(7, 278528, null, 0, i12.NgClass, [i12.ɵNgClassImpl], { ngClass: [0, \"ngClass\"] }, null), i1.ɵpod(8, { \"messages-container\": 0, collapsed: 1, expanded: 2 }), (_l()(), i1.ɵted(9, null, [\" \", \" \"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_SubstanceFormStructureCardComponent_1)), i1.ɵdid(11, 16384, null, 0, i12.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_SubstanceFormStructureCardComponent_2)), i1.ɵdid(13, 16384, null, 0, i12.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_SubstanceFormStructureCardComponent_3)), i1.ɵdid(15, 16384, null, 0, i12.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵeld(16, 0, null, null, 1, \"app-structure-form\", [[\"showSettings\", \"true\"]], null, null, null, i17.View_StructureFormComponent_0, i17.RenderType_StructureFormComponent)), i1.ɵdid(17, 245760, null, 0, i18.StructureFormComponent, [i19.ControlledVocabularyService, i9.OverlayContainer], { showSettings: [0, \"showSettings\"], type: [1, \"type\"], structure: [2, \"structure\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_SubstanceFormStructureCardComponent_6)), i1.ɵdid(19, 16384, null, 0, i12.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; _ck(_v, 4, 0); var currVal_0 = _ck(_v, 8, 0, true, !_co.userMessage, _co.userMessage); _ck(_v, 7, 0, currVal_0); var currVal_2 = (_co.structure && (_co.substanceType === \"polymer\")); _ck(_v, 11, 0, currVal_2); var currVal_3 = (_co.structure && (_co.substanceType === \"structure\")); _ck(_v, 13, 0, currVal_3); var currVal_4 = (_co.structureErrorsArray && (_co.structureErrorsArray.length > 0)); _ck(_v, 15, 0, currVal_4); var currVal_5 = \"true\"; var currVal_6 = _co.substanceType; var currVal_7 = _co.structure; _ck(_v, 17, 0, currVal_5, currVal_6, currVal_7); var currVal_8 = (_co.substanceType === \"polymer\"); _ck(_v, 19, 0, currVal_8); }, function (_ck, _v) { var _co = _v.component; var currVal_1 = _co.userMessage; _ck(_v, 9, 0, currVal_1); }); }\nexport function View_SubstanceFormStructureCardComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-substance-form-structure-card\", [], null, null, null, View_SubstanceFormStructureCardComponent_0, RenderType_SubstanceFormStructureCardComponent)), i1.ɵdid(1, 4440064, null, 0, i20.SubstanceFormStructureCardComponent, [i21.SubstanceFormService, i22.SubstanceFormStructureService, i15.StructureService, i16.LoadingService, i23.MatDialog, i9.OverlayContainer, i24.GoogleAnalyticsService, i25.SubstanceService, i26.SubstanceFormStructuralUnitsService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar SubstanceFormStructureCardComponentNgFactory = i1.ɵccf(\"app-substance-form-structure-card\", i20.SubstanceFormStructureCardComponent, View_SubstanceFormStructureCardComponent_Host_0, {}, { menuLabelUpdate: \"menuLabelUpdate\", hiddenStateUpdate: \"hiddenStateUpdate\", canAddItemUpdate: \"canAddItemUpdate\", componentDestroyed: \"componentDestroyed\" }, []);\nexport { SubstanceFormStructureCardComponentNgFactory as SubstanceFormStructureCardComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".messages-container[_ngcontent-%COMP%]{text-align:center;font-weight:500;font-size:1.05em;-webkit-transition:.5s ease-out;transition:all .5s ease-out;overflow:hidden}.messages-container.collapsed[_ngcontent-%COMP%]{max-height:0}.messages-container.expanded[_ngcontent-%COMP%]{max-height:500px;padding:10px 0 5px}.button-container[_ngcontent-%COMP%]{margin-top:-50px}.button-row[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%;margin-bottom:10px}.button-row[_ngcontent-%COMP%]   .right-buttons[_ngcontent-%COMP%]{-ms-flex-line-pack:end;align-content:flex-end;display:-webkit-box;display:-ms-flexbox;display:flex;margin-right:-8px}.button-row[_ngcontent-%COMP%]   .left-buttons[_ngcontent-%COMP%]{-ms-flex-line-pack:start;align-content:flex-start;display:-webkit-box;display:-ms-flexbox;display:flex}.SUCCESS[_ngcontent-%COMP%]{color:#3f914c;background-color:#def2de}.submission-messages[_ngcontent-%COMP%]{overflow:hidden;height:auto;-webkit-transition:.5s ease-out;transition:all .5s ease-out;max-width:1028px;width:100%;background-color:#fff;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;max-height:500px;overflow-y:auto;padding:10px}.submission-messages[_ngcontent-%COMP%]   .validation-message[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex;padding:5px 0;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.submission-messages[_ngcontent-%COMP%]   .validation-message[_ngcontent-%COMP%]   .message-type[_ngcontent-%COMP%]{text-transform:uppercase;font-weight:500;margin-right:20px;padding:10px;border-radius:3px}.submission-messages[_ngcontent-%COMP%]   .dismiss-container[_ngcontent-%COMP%]{display:-webkit-box;display:-ms-flexbox;display:flex}.WARNING[_ngcontent-%COMP%]{color:#8a6d3b;background-color:#fcf8e3}.ERROR[_ngcontent-%COMP%]{color:#a94442;background-color:#f2dede}.dupe-check[_ngcontent-%COMP%]{margin-bottom:5px}.internal-link[_ngcontent-%COMP%]{color:#448aff}.z-index[_ngcontent-%COMP%]{z-index:9999!important}\"];\nexport { styles as styles };\n","<div>\n  <div>\n    <div>\n      <app-structure-editor (loadedMolfile)=\"molvecUpdate($event)\" (editorOnLoad)=\"editorOnLoad($event)\"   style=\"z-index: 9999\">\n      </app-structure-editor>\n    </div>\n    <div [ngClass]=\"{'messages-container': true, collapsed: !userMessage, expanded: userMessage}\">\n      {{userMessage}}\n    </div>\n  </div>\n  <div class=\"button-row\" *ngIf=\"structure && substanceType === 'polymer'\">\n    <span class=\"middle-fill\"></span>\n    <span class=\"right-buttons\">\n      <button mat-button color=\"primary\" matTooltip=\"Import options\" (click)=\"openStructureImportDialog()\">\n        <mat-icon svgIcon=\"cloud_upload\"></mat-icon>\n        Import\n      </button>\n      <button (click)=\"openStructureExportDialog()\" mat-button color=\"primary\" matTooltip=\"export structure\">\n        <mat-icon svgIcon=\"get_app\"></mat-icon>\n        Export\n      </button>\n      <button mat-button color=\"primary\" matTooltip=\"preview structure stereochemistry\"\n        (click)=\"openStructureImageModal()\">\n        <mat-icon svgIcon=\"zoom_in\"></mat-icon> View stereochemistry\n      </button>\n    </span>\n  </div>\n  <div class=\"button-row\" *ngIf=\"structure && substanceType === 'structure'\">\n    <span class=\"left-buttons\">\n      <button (click)=\"duplicateCheck()\" matTooltip=\"check the database for duplicate structures\" mat-button\n        color=\"primary\" class=\"dupe-check\">\n        <mat-icon svgIcon=\"search\"></mat-icon>\n        Check for duplicates\n      </button>\n    </span>\n    <span class=\"middle-fill\"></span>\n    <span class=\"right-buttons\">\n      <button mat-button color=\"primary\" matTooltip=\"Import options\" [matMenuTriggerFor]=\"importMenu\">\n        <mat-icon svgIcon=\"cloud_upload\"></mat-icon>\n        Import...\n      </button>\n      <button (click)=\"openStructureExportDialog()\" mat-button color=\"primary\" matTooltip=\"export structure\">\n        <mat-icon svgIcon=\"get_app\"></mat-icon>\n        Export\n      </button>\n      <button mat-button color=\"primary\" matTooltip=\"preview structure stereochemistry\"\n        (click)=\"openStructureImageModal()\">\n        <mat-icon svgIcon=\"zoom_in\"></mat-icon> View stereochemistry\n      </button>\n    </span>\n\n    <mat-menu #importMenu=\"matMenu\">\n      <button mat-menu-item (click)=\"openStructureImportDialog()\">\n        Import Structure\n      </button>\n      <button mat-menu-item (click)=\"openNameResolverDialog()\">\n        Resolve name\n      </button>\n    </mat-menu>\n  </div>\n  <div class=\"submission-messages\" *ngIf=\"structureErrorsArray && structureErrorsArray.length > 0\">\n    <div class=\"validation-message\" *ngFor=\"let err of structureErrorsArray; index as i\">\n      <div class=\"message-type\" [ngClass]=\"err.messageType\">{{err.messageType}}</div>\n      <div class=\"message\">{{err.message}}<span *ngFor=\"let link of err.links\"><br />\n          <a [href]=\"fixLink(link.href)\" class=\"internal-link\" target=\"_blank\">\n            {{link.text}}\n          </a></span></div>\n      <button mat-icon-button matTooltip=\"Dismiss\" (click)=\"dismissErrorMessage(i)\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n      </button>\n    </div>\n  </div>\n  <app-structure-form [structure]=\"structure\" showSettings=\"true\" [type]=\"substanceType\">\n  </app-structure-form>\n  <div class=\"button-container\" *ngIf=\"substanceType === 'polymer'\">\n    <button class=\"mat-flat-button mat-primary\" color=\"primary\" (click)=\"generateSRU()\"\n      matTooltip=\"generate structural units for this structure\">Generate SRUs</button>\n  </div>\n</div>","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./substance-form-structure.module\";\nimport * as i2 from \"../../../../../node_modules/@angular/material/dialog/typings/index.ngfactory\";\nimport * as i3 from \"../../structure/structure-export/structure-export.component.ngfactory\";\nimport * as i4 from \"../../structure/structure-image-modal/structure-image-modal.component.ngfactory\";\nimport * as i5 from \"../../structure/structure-import/structure-import.component.ngfactory\";\nimport * as i6 from \"../../../../../node_modules/@angular/material/tooltip/typings/index.ngfactory\";\nimport * as i7 from \"../../../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i8 from \"../references/references-dialogs/refernce-form-dialog.component.ngfactory\";\nimport * as i9 from \"../references/references-dialogs/reuse-references-dialog.component.ngfactory\";\nimport * as i10 from \"../references/apply-reference/apply-reference.component.ngfactory\";\nimport * as i11 from \"../references/previous-references/previous-references.component.ngfactory\";\nimport * as i12 from \"../property-parameter-dialog/property-parameter-dialog.component.ngfactory\";\nimport * as i13 from \"../subunit-selector/subunit-selector.component.ngfactory\";\nimport * as i14 from \"../subunit-selector-dialog/subunit-selector-dialog.component.ngfactory\";\nimport * as i15 from \"../amount-form-dialog/amount-form-dialog.component.ngfactory\";\nimport * as i16 from \"../physical-parameter-form-dialog/physical-parameter-form-dialog.component.ngfactory\";\nimport * as i17 from \"../cv-dialog/cv-dialog.component.ngfactory\";\nimport * as i18 from \"../json-dialog/json-dialog.component.ngfactory\";\nimport * as i19 from \"../audit-info/audit-info.component.ngfactory\";\nimport * as i20 from \"../submit-success-dialog/submit-success-dialog.component.ngfactory\";\nimport * as i21 from \"../merge-concept-dialog/merge-concept-dialog.component.ngfactory\";\nimport * as i22 from \"../definition-switch-dialog/definition-switch-dialog.component.ngfactory\";\nimport * as i23 from \"../references/previous-references/previous-references-dialog/previous-references-dialog.component.ngfactory\";\nimport * as i24 from \"../../loading/loading-overlay/loading-overlay.component.ngfactory\";\nimport * as i25 from \"../../name-resolver/name-resolver-dialog.component.ngfactory\";\nimport * as i26 from \"./substance-form-structure-card.component.ngfactory\";\nimport * as i27 from \"@angular/common\";\nimport * as i28 from \"@angular/cdk/observers\";\nimport * as i29 from \"@angular/material/core\";\nimport * as i30 from \"@angular/cdk/overlay\";\nimport * as i31 from \"@angular/cdk/bidi\";\nimport * as i32 from \"@angular/material/dialog\";\nimport * as i33 from \"@angular/forms\";\nimport * as i34 from \"@angular/material/select\";\nimport * as i35 from \"@angular/material/menu\";\nimport * as i36 from \"@angular/material/tooltip\";\nimport * as i37 from \"@angular/platform-browser\";\nimport * as i38 from \"@angular/material/autocomplete\";\nimport * as i39 from \"../../dynamic-component-loader/dynamic-component-loader.module\";\nimport * as i40 from \"@angular/material/form-field\";\nimport * as i41 from \"@angular/cdk/platform\";\nimport * as i42 from \"@angular/cdk/text-field\";\nimport * as i43 from \"@angular/material/input\";\nimport * as i44 from \"@angular/material/button\";\nimport * as i45 from \"@angular/material/icon\";\nimport * as i46 from \"@angular/cdk/portal\";\nimport * as i47 from \"@angular/cdk/scrolling\";\nimport * as i48 from \"@angular/material/progress-bar\";\nimport * as i49 from \"ketcher-wrapper\";\nimport * as i50 from \"jsdraw-wrapper\";\nimport * as i51 from \"file-select\";\nimport * as i52 from \"@angular/cdk/a11y\";\nimport * as i53 from \"@angular/material/tabs\";\nimport * as i54 from \"../../substance/substance-image.module\";\nimport * as i55 from \"../../structure/structure.module\";\nimport * as i56 from \"../../structure-editor/structure-editor.module\";\nimport * as i57 from \"@angular/material/checkbox\";\nimport * as i58 from \"@angular/material/divider\";\nimport * as i59 from \"@angular/material/chips\";\nimport * as i60 from \"../../scroll-to/scroll-to.module\";\nimport * as i61 from \"@angular/cdk/table\";\nimport * as i62 from \"@angular/material/table\";\nimport * as i63 from \"@angular/cdk/accordion\";\nimport * as i64 from \"@angular/material/expansion\";\nimport * as i65 from \"@angular/material/badge\";\nimport * as i66 from \"@angular/material/radio\";\nimport * as i67 from \"../../expand-details/expand-details.module\";\nimport * as i68 from \"../../substance-text-search/substance-text-search.module\";\nimport * as i69 from \"@angular/router\";\nimport * as i70 from \"../../substance-selector/substance-selector.module\";\nimport * as i71 from \"@angular/material/list\";\nimport * as i72 from \"@angular/material/button-toggle\";\nimport * as i73 from \"ngx-json-viewer\";\nimport * as i74 from \"@angular/material/progress-spinner\";\nimport * as i75 from \"../substance-form.module\";\nimport * as i76 from \"../../loading/loading.module\";\nimport * as i77 from \"../../name-resolver/name-resolver.module\";\nimport * as i78 from \"@angular/cdk/keycodes\";\nimport * as i79 from \"../../dynamic-component-loader/dynamic-component-manifest\";\nimport * as i80 from \"./substance-form-structure-card.component\";\nvar SubstanceFormStructureModuleNgFactory = i0.ɵcmf(i1.SubstanceFormStructureModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.MatDialogContainerNgFactory, i3.StructureExportComponentNgFactory, i4.StructureImageModalComponentNgFactory, i5.StructureImportComponentNgFactory, i6.TooltipComponentNgFactory, i7.ɵangular_packages_router_router_lNgFactory, i8.RefernceFormDialogComponentNgFactory, i9.ReuseReferencesDialogComponentNgFactory, i10.ApplyReferenceComponentNgFactory, i11.PreviousReferencesComponentNgFactory, i12.PropertyParameterDialogComponentNgFactory, i13.SubunitSelectorComponentNgFactory, i14.SubunitSelectorDialogComponentNgFactory, i15.AmountFormDialogComponentNgFactory, i16.PhysicalParameterFormDialogComponentNgFactory, i17.CvDialogComponentNgFactory, i18.JsonDialogComponentNgFactory, i19.AuditInfoComponentNgFactory, i20.SubmitSuccessDialogComponentNgFactory, i21.MergeConceptDialogComponentNgFactory, i22.DefinitionSwitchDialogComponentNgFactory, i23.PreviousReferencesDialogComponentNgFactory, i24.LoadingOverlayComponentNgFactory, i25.NameResolverDialogComponentNgFactory, i26.SubstanceFormStructureCardComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i27.NgLocalization, i27.NgLocaleLocalization, [i0.LOCALE_ID, [2, i27.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i28.MutationObserverFactory, i28.MutationObserverFactory, []), i0.ɵmpd(4608, i29.ErrorStateMatcher, i29.ErrorStateMatcher, []), i0.ɵmpd(4608, i30.Overlay, i30.Overlay, [i30.ScrollStrategyOptions, i30.OverlayContainer, i0.ComponentFactoryResolver, i30.OverlayPositionBuilder, i30.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i27.DOCUMENT, i31.Directionality, [2, i27.Location]]), i0.ɵmpd(5120, i30.ɵc, i30.ɵd, [i30.Overlay]), i0.ɵmpd(5120, i32.MAT_DIALOG_SCROLL_STRATEGY, i32.MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, [i30.Overlay]), i0.ɵmpd(135680, i32.MatDialog, i32.MatDialog, [i30.Overlay, i0.Injector, [2, i27.Location], [2, i32.MAT_DIALOG_DEFAULT_OPTIONS], i32.MAT_DIALOG_SCROLL_STRATEGY, [3, i32.MatDialog], i30.OverlayContainer]), i0.ɵmpd(4608, i33.FormBuilder, i33.FormBuilder, []), i0.ɵmpd(4608, i33.ɵangular_packages_forms_forms_o, i33.ɵangular_packages_forms_forms_o, []), i0.ɵmpd(5120, i34.MAT_SELECT_SCROLL_STRATEGY, i34.MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, [i30.Overlay]), i0.ɵmpd(5120, i35.MAT_MENU_SCROLL_STRATEGY, i35.ɵb22, [i30.Overlay]), i0.ɵmpd(5120, i36.MAT_TOOLTIP_SCROLL_STRATEGY, i36.MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, [i30.Overlay]), i0.ɵmpd(4608, i37.HAMMER_GESTURE_CONFIG, i29.GestureConfig, [[2, i29.MAT_HAMMER_OPTIONS], [2, i29.MatCommonModule]]), i0.ɵmpd(5120, i38.MAT_AUTOCOMPLETE_SCROLL_STRATEGY, i38.MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, [i30.Overlay]), i0.ɵmpd(1073742336, i27.CommonModule, i27.CommonModule, []), i0.ɵmpd(1073742336, i39.DynamicComponentLoaderModule, i39.DynamicComponentLoaderModule, []), i0.ɵmpd(1073742336, i28.ObserversModule, i28.ObserversModule, []), i0.ɵmpd(1073742336, i40.MatFormFieldModule, i40.MatFormFieldModule, []), i0.ɵmpd(1073742336, i41.PlatformModule, i41.PlatformModule, []), i0.ɵmpd(1073742336, i42.TextFieldModule, i42.TextFieldModule, []), i0.ɵmpd(1073742336, i43.MatInputModule, i43.MatInputModule, []), i0.ɵmpd(1073742336, i31.BidiModule, i31.BidiModule, []), i0.ɵmpd(1073742336, i29.MatCommonModule, i29.MatCommonModule, [[2, i29.MATERIAL_SANITY_CHECKS], [2, i37.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i29.MatRippleModule, i29.MatRippleModule, []), i0.ɵmpd(1073742336, i44.MatButtonModule, i44.MatButtonModule, []), i0.ɵmpd(1073742336, i45.MatIconModule, i45.MatIconModule, []), i0.ɵmpd(1073742336, i46.PortalModule, i46.PortalModule, []), i0.ɵmpd(1073742336, i47.ScrollingModule, i47.ScrollingModule, []), i0.ɵmpd(1073742336, i30.OverlayModule, i30.OverlayModule, []), i0.ɵmpd(1073742336, i32.MatDialogModule, i32.MatDialogModule, []), i0.ɵmpd(1073742336, i48.MatProgressBarModule, i48.MatProgressBarModule, []), i0.ɵmpd(1073742336, i33.ɵangular_packages_forms_forms_d, i33.ɵangular_packages_forms_forms_d, []), i0.ɵmpd(1073742336, i33.ReactiveFormsModule, i33.ReactiveFormsModule, []), i0.ɵmpd(1073742336, i49.KetcherWrapperModule, i49.KetcherWrapperModule, []), i0.ɵmpd(1073742336, i50.JsdrawWrapperModule, i50.JsdrawWrapperModule, []), i0.ɵmpd(1073742336, i51.FileSelectModule, i51.FileSelectModule, []), i0.ɵmpd(1073742336, i52.A11yModule, i52.A11yModule, []), i0.ɵmpd(1073742336, i53.MatTabsModule, i53.MatTabsModule, []), i0.ɵmpd(1073742336, i54.SubstanceImageModule, i54.SubstanceImageModule, []), i0.ɵmpd(1073742336, i33.FormsModule, i33.FormsModule, []), i0.ɵmpd(1073742336, i55.StructureModule, i55.StructureModule, []), i0.ɵmpd(1073742336, i56.StructureEditorModule, i56.StructureEditorModule, []), i0.ɵmpd(1073742336, i29.MatPseudoCheckboxModule, i29.MatPseudoCheckboxModule, []), i0.ɵmpd(1073742336, i29.MatOptionModule, i29.MatOptionModule, []), i0.ɵmpd(1073742336, i34.MatSelectModule, i34.MatSelectModule, []), i0.ɵmpd(1073742336, i35._MatMenuDirectivesModule, i35._MatMenuDirectivesModule, []), i0.ɵmpd(1073742336, i35.MatMenuModule, i35.MatMenuModule, []), i0.ɵmpd(1073742336, i57._MatCheckboxRequiredValidatorModule, i57._MatCheckboxRequiredValidatorModule, []), i0.ɵmpd(1073742336, i57.MatCheckboxModule, i57.MatCheckboxModule, []), i0.ɵmpd(1073742336, i36.MatTooltipModule, i36.MatTooltipModule, []), i0.ɵmpd(1073742336, i58.MatDividerModule, i58.MatDividerModule, []), i0.ɵmpd(1073742336, i59.MatChipsModule, i59.MatChipsModule, []), i0.ɵmpd(1073742336, i38.MatAutocompleteModule, i38.MatAutocompleteModule, []), i0.ɵmpd(1073742336, i60.ScrollToModule, i60.ScrollToModule, []), i0.ɵmpd(1073742336, i61.CdkTableModule, i61.CdkTableModule, []), i0.ɵmpd(1073742336, i62.MatTableModule, i62.MatTableModule, []), i0.ɵmpd(1073742336, i63.CdkAccordionModule, i63.CdkAccordionModule, []), i0.ɵmpd(1073742336, i64.MatExpansionModule, i64.MatExpansionModule, []), i0.ɵmpd(1073742336, i65.MatBadgeModule, i65.MatBadgeModule, []), i0.ɵmpd(1073742336, i66.MatRadioModule, i66.MatRadioModule, []), i0.ɵmpd(1073742336, i67.ExpandDetailsModule, i67.ExpandDetailsModule, []), i0.ɵmpd(1073742336, i68.SubstanceTextSearchModule, i68.SubstanceTextSearchModule, []), i0.ɵmpd(1073742336, i69.RouterModule, i69.RouterModule, [[2, i69.ɵangular_packages_router_router_a], [2, i69.Router]]), i0.ɵmpd(1073742336, i70.SubstanceSelectorModule, i70.SubstanceSelectorModule, []), i0.ɵmpd(1073742336, i29.MatLineModule, i29.MatLineModule, []), i0.ɵmpd(1073742336, i71.MatListModule, i71.MatListModule, []), i0.ɵmpd(1073742336, i72.MatButtonToggleModule, i72.MatButtonToggleModule, []), i0.ɵmpd(1073742336, i73.NgxJsonViewerModule, i73.NgxJsonViewerModule, []), i0.ɵmpd(1073742336, i74.MatProgressSpinnerModule, i74.MatProgressSpinnerModule, []), i0.ɵmpd(1073742336, i75.SubstanceFormModule, i75.SubstanceFormModule, []), i0.ɵmpd(1073742336, i76.LoadingModule, i76.LoadingModule, []), i0.ɵmpd(1073742336, i77.NameResolverModule, i77.NameResolverModule, []), i0.ɵmpd(1073742336, i1.SubstanceFormStructureModule, i1.SubstanceFormStructureModule, []), i0.ɵmpd(256, i59.MAT_CHIPS_DEFAULT_OPTIONS, { separatorKeyCodes: [i78.ENTER] }, []), i0.ɵmpd(1024, i69.ROUTES, function () { return [[]]; }, []), i0.ɵmpd(256, i79.DYNAMIC_COMPONENT, i80.SubstanceFormStructureCardComponent, [])]); });\nexport { SubstanceFormStructureModuleNgFactory as SubstanceFormStructureModuleNgFactory };\n"],"sourceRoot":"webpack:///"}