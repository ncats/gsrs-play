include "gsrs-core.conf"

application.context="/ginas/app"
application.router=ix.ginas.Routes
application.appname="ginas"



ix.index.deepfields = ["ix.ginas.models.v1.Substance"]

#
# override to use only those models that we need
#
ebean.default ="ix.core.adapters.*,ix.core.models.*,ix.ginas.models.*,ix.ginas.controllers.plugins.*,ix.core.work.*"






application.global=ix.ginas.utils.GinasGlobal

api.version="1.0"
swagger.api.basepath="http://localhost:9000"


#Use this implementation as default
ix.ginas.PersistRecordWorkerFactoryImpl = "ix.core.plugins.SingleThreadedPersistRecordWorkerFactory"

#ix.ginas.PersistRecordWorkerFactoryImpl = "ix.core.plugins.MultiThreadedPersistRecordWorkerFactory"

#List of ExportFactory classes that can export Substances
#the list of classes is ordered by priority
#if more than one Exporter supports the same file extension,
#the class in the list that supports it fist wins.
ix.ginas.exportFactories = ["ix.ginas.exporters.SdfExporterFactory", 
							"ix.ginas.exporters.DefaultSubstanceSpreadsheetExporterFactory", 
							"ix.ginas.exporters.JsonExporterFactory",
							"ix.ginas.exporters.SPLValidatorXMLExporterFactory"
							]


#ix.tokenexpiretime=30000
ix.core.files.persist.location="<DB>"
ix.core.files.persist.maxsize="30MB"

ix.core.resourcefilter="ix.core.PopulatedResourceFilter"
ix.core.structureIndex.atomLimit=250

#Default number of facet values to load on UI
ix.core.facetValueCount=20

ix.core.users=[
	{
		"username":"admin",
		"email":"",
		"password":"admin",
                "roles":["Query", "DataEntry","SuperDataEntry", "Updater","SuperUpdate", "Approver", "Admin"],
                "groups": ["sysadmin"]
	}
]


ix.core.searchanalyzers = [
    	{
		"class":"ix.ginas.models.v1.Substance",
		"analyzer":"ix.core.search.ExplicitFieldSubstanceSearchAnalyzer",
		"with":{
			"maxanalyze":50
		}
	}
]

ix.home="ginas.ix"
ix.app="ginas"
ix.debug=1
ix.ginas.debug.profile=false
ix.ginas.debug.showheaders=false

#uncomment this line to use Inchi for structure hashing (default is Lychi)
#ix.structure-hasher = "ix.core.chem.InchiStructureHasher"

#CUSTOM VALIDATOR - This is not implemented yet
#ix.ginas.validator=ix.ginas.utils.SubstanceValidator

#ix.ginas.loader=old
ix.ginas.hazelcast=false
# this needs to be at least 1
ix.ginas.maxrecordqueue=2
ix.ginas.allowloading=true

#extract locators like "[INN]" from names, and add as references
ix.ginas.prepare.extractlocators=false

#set this to "true" to allow all users (authenticated or not) to behave as admins
ix.admin=false

ix.ginas.batch.validation=true
ix.ginas.batch.persist=true
ix.textindex.enabled=true
ix.textindex.fieldsuggest=true

# For debugging only, adds a delay to each fetch
# for a record
ix.settings.debug.dbdelay=0
# For debugging only, adds a delay to each processing of
# a Structure / Sequence record
ix.settings.debug.processordelay=0




ix.ginas.codes.order=[
	"BDNUM",
	"CAS",
	"WHO-ATC",
	"EVMPD",
	"NCI"
]


# This is the info for the admin contact
# to be used when access is not granted to a user
#
#
#ix.sysadmin={
#"username":"adminusername",
#"email":"display@email.com"
#}

ix.core.exactsearchfields=[
	{
		"class":"ix.ginas.models.v1.Substance",
		"fields":[
			"root_names_name",
			"root_approvalID",
			"root_codes_CAS"
		]
	}
]


ix.ginas.facets.substance.default=[
        "Deprecated",
	"Substance Class",
        "Molecular Weight",
        "GInAS Tag",
        "ATC Level 1",
        "ATC Level 2",
        "ATC Level 3",
        "ATC Level 4",
#       "Relationships",
        "Code System",
        "Material Type",
        "Family",
        "Parts",
        "Protein Type",
#	"root_approved",
#	"root_lastEdited",
#	"Record Level Access",
#	"Display Name Level Access"
#	"Definition Level Access"

]


ix.ginas.facets.substance.admin=[
        "root_approved"
]

#include mixtures in SSS / Similarity searches
ix.ginas.structure.search.includeMixtures=true

#include modifications in SSS / Similarity searches
ix.ginas.structure.search.includeModifications=true

#include polymer display structures in SSS / Similarity searches
#note that this only includes a pretty fuzzy form of the polymer
ix.ginas.structure.search.includePolymers=true


# Additional indexing operations can be supplied here
# Below is an example, where the fully qualified class
# name of an IndexValueMaker is specified for Substances.
#
# In order for the facets that it makes to appear in
# the UI by default, they would also have to be added
# as is done below
ix.core.indexValueMakers=[
	{
#		"class":"ix.ginas.models.v1.Substance",
#		"indexer":"ix.ginas.indexers.ExampleValueMaker"

		"class":"ix.ginas.models.v1.Substance",
		"indexer":"ix.ginas.indexers.RecordAccessIndexValueMaker"
	},
	{
		"class":"ix.ginas.models.v1.Substance",
		"indexer": "ix.ginas.indexers.DeprecatedIndexValueMaker"
	},
	{
		"class":"ix.ginas.models.v1.Substance",
		"indexer": "ix.ginas.indexers.BracketTermIndexValueMaker"
	},
	  {
                    "class":"ix.ginas.models.v1.Substance",
                    "indexer": "ix.ginas.indexers.MoietyTypeIndexValueMaker"
            },
        {
                "class":"ix.ginas.models.v1.Substance",
                "indexer": "ix.ginas.indexers.MolecularWeightPropertyIndexValueMaker"
        },
        {
                "class":"ix.ginas.models.v1.Substance",
                "indexer": "ix.ginas.indexers.MixtureLychiIndexValueMaker"
        },
        {
                "class":"ix.ginas.models.v1.Substance",
                "indexer":"ix.ginas.indexers.ATCIndexValueMaker"
        },
        {
                "class":"ix.ginas.models.v1.Substance",
                "indexer":"ix.ginas.indexers.NormalizedNameIndexValueMaker"
        },
        {       //Added 09/18/2019
                		"class":"ix.ginas.models.v1.Substance",
                		"indexer":"ix.ginas.indexers.InchiKeyIndexValueMaker"
                },
                {
                        "class":"ix.ginas.models.v1.Substance",
                        "indexer": "ix.ginas.indexers.PolymerLychiIndexValueMaker"
                },
                {
                        "class":"ix.ginas.models.v1.Substance",
                        "indexer": "ix.ginas.indexers.ModificationLychiIndexValueMaker"
                },
                #for enhanced definitions of what makes each type of substance unique
                		{
                                "class":"ix.ginas.models.v1.Substance",
                                "indexer": "ix.ginas.indexers.SubstanceDefinitionalHashIndexer"
                        }
]
#
# Explicitly add those facets you'd like to show
##ix.ginas.facets.substance.default+="Simple Ring Count"
##ix.ginas.facets.substance.default+="Carbon Mass Ratio"
#ix.ginas.facets.substance.default+="Moiety Type"
##ix.ginas.facets.substance.default+="Relationship Count"

ix.api.registeredfunctions=[
	{
		"class":"ix.core.util.pojopointer.extensions.StringLengthRegisteredFunction"
	},
	{
		"class":"ix.core.util.pojopointer.extensions.InChIRegisteredFunction"
	},
	{
            "class":"ix.core.util.pojopointer.extensions.InChIFullRegisteredFunction"
    },
	{
		"class":"ix.core.util.pojopointer.extensions.StringSplitRegisteredFunction"
	},
	{
		"class":"ix.core.util.pojopointer.extensions.SelectRegisteredFunction"
	},
	{
		"class":"ix.core.util.pojopointer.extensions.StringJoinRegisteredFunction"
	}
]

ix.core.initializers=[
	{
                "class": "ix.ginas.initializers.LoadControlledVocabInitializer",
                "path" : "cv/cv.json"
        },
        {
                    "class": "ix.ginas.initializers.ApprovalIdGeneratorInitializer"
        },
        {
                "class": "ix.ginas.initializers.LoadDefaultUsersInitializer"
        },
	{
               "class" : "ix.ginas.initializers.LoadValidatorInitializer"
        },
	{
                "class" : "ix.ginas.initializers.ChemkitInitializer"
        },
        {
                "class": "ix.ginas.initializers.StructureHasherInitializer"
        },
        {
                "class": "ix.ginas.initializers.StringConverterInitializer",
                "converterClass": "ix.ginas.models.converters.LaTeXStringConverter"
        },
	{
            "class": "ix.ginas.initializers.HierarchyFinderInitializer"
    },
	{
		"class":"ix.ginas.initializers.ReindexTaskInitializer"
	},
	# schedule a full dump of the data
	{
	    "class":"ix.ginas.initializers.ScheduledExportTaskInitializer",
	    "username":"admin",
	    "cron":"0 9 2 * * ?", #2:09 AM every day
	    "autorun":false,
	    "name":"Full GSRS export"
	},

  {
    "class" : "ix.ginas.initializers.ChronicStackDumper"

    "autorun": false,
    "dateFormat" : "yyyy.MMMM.dd hh:mm:ss a", #any valid Java 8 DateTimeFormatter

    "cron":"0 0/3 * * * ?", #every 3 mins

    "output.path" : "logs/all-running-stacktraces.log"
	},
  {
    "class" : "ix.ginas.initializers.DataRecorder"

    "autorun": false,
    "dateFormat" : "yyyy.MMMM.dd hh:mm:ss a", #any valid Java 8 DateTimeFormatter

		"cron":"0/10 * * * * ?", #every 10 seconds

    "output.path" : "logs/datarecorder.log"
  },
  {
    #THIS IS IMPORTANT, DO NOT REMOVE THIS
    "class": "ix.ginas.initializers.LoadValidatorInitializer"
  },
  {
    #THIS IS IMPORTANT, DO NOT REMOVE THIS
    "class" : "ix.ginas.initializers.ResaveBackupsTaskInitializer",
    "autorun": false,
    "entityClass":"ix.ginas.models.v1.Substance"
  },
  {
    #THIS IS IMPORTANT, DO NOT REMOVE THIS
    "class" : "ix.ginas.initializers.ResaveBackupsTaskInitializer",
    "autorun": false,
    "entityClass":"ix.ginas.models.v1.ControlledVocabulary"
  },
  {
    #THIS IS IMPORTANT, DO NOT REMOVE THIS
    "class" : "ix.ginas.initializers.StructureRecalcTaskInitializer",
    "autorun": false
  },
  {
    "class":"ix.ginas.initializers.UnusedRefReportTaskInitializer",
    "autorun": false,

    #Uncomment this to change action to fix, rather than report
    #"action":"fix",
    "action":"report",

    # You can set the output path for the report, defaults to
    # reports directory with timestamp and date
    #"output.path" : "reports/orphanReferences-%DATE%-%TIME%.txt"
  }
  
]

ix.core.entityprocessors=[
	# this ensures consistency across alternative definitions
	# also use by FDA. FDA modifies this class
	{
		"class":"ix.ginas.models.v1.Substance",
		"processor":"ix.ginas.processors.SubstanceProcessor"
	},
	{
		"class":"ix.ginas.models.v1.Substance",
		"processor":"ix.ginas.processors.PublicCleanProcessor"
	},
	#{
	#	"class":"ix.ginas.models.v1.Substance",
	#	"processor":"ix.ginas.processors.NewFastaFileReferenceProcessor"
	#},

	#{
    #	"class":"ix.ginas.models.v1.Substance",
	#	"processor":"ix.ginas.processors.LegacyAuditInfoProcessor"
	#},
	{
    	"class":"ix.ginas.models.v1.Substance",
		"processor":"ix.ginas.processors.PublicTagFlagger"
	},
	{
		"class":"ix.ginas.models.v1.Relationship",
		"processor":"ix.ginas.processors.RelationshipProcessor"
	},
        {
                "class":"ix.ginas.models.v1.Reference",
                "processor": "ix.ginas.processors.ReferenceProcessor"
        },

    # GenerateURLs for codes if need be
        {
                "class":"ix.ginas.models.v1.Code",
                "processor":"ix.ginas.processors.CodeProcessor"
        },

	# when a new group is added, this ensures that new group is added to controlled vocabulary
	{
		"class":"ix.core.models.Group",
		"processor":"ix.ginas.processors.GroupProcessor"
	},
	# when a new controlled vocabulary added, it ensures adding a new group
	{
		"class":"ix.ginas.models.v1.ControlledVocabulary",
		"processor":"ix.ginas.processors.CVProcessor"
	},
	# when updating a user profile, this class ensures to update the token
	{
		"class":"ix.core.models.UserProfile",
		"processor":"ix.ncats.processors.UserProfileProcessor"
	}
	//
]


##############################################
# THIS IS IMPORTANT, ADDITION OF VALIDATORS!
##############################################

# Validator for Relationship modifications (restrict to admins)
substance.validators += {
                "validatorClass" = "ix.ginas.utils.validation.validators.RelationshipModificationValidator",
                "newObjClass" = "ix.ginas.models.v1.Substance"
        }
substance.validators += {
                "validatorClass" = "ix.ginas.utils.validation.validators.CodeFormatValidator",
                "newObjClass" = "ix.ginas.models.v1.Substance"
        }
#Check that individual moieties of a multi-moiety chemical are registered separately
substance.validators += {
          "validatorClass" = "ix.ginas.utils.validation.validators.SaltValidator",
          "newObjClass" = "ix.ginas.models.v1.ChemicalSubstance"
        }
#check for uniqueness of several classes of substance based on definitional hashes
substance.validators += {
          "validatorClass" = "ix.ginas.utils.validation.validators.SubstanceUniquenessValidator",
          "newObjClass" = "ix.ginas.models.v1.Substance"
        }
#check the mol files of chemical substances and throw errors if there are SUP s-groups.
#to remove this check comment out or delete this statement.
substance.validators += {
         "validatorClass" = "ix.ginas.utils.validation.validators.SuperatomValidator",
        "newObjClass" = "ix.ginas.models.v1.Substance",
        "substanceClass" = "chemical"

        }

###############################################
# END OF VALIDATOR ADDITIONS
###############################################


contexts {
	simple-db-lookups {
		fork-join-executor {
			parallelism-factor = 10.0
		}
	}
	expensive-db-lookups {
		fork-join-executor {
			parallelism-max = 4
		}
	}
	db-write-operations {
		fork-join-executor {
			parallelism-factor = 2.0
		}
	}
	expensive-cpu-operations {
		fork-join-executor {
			parallelism-max = 2
		}
	}
}


### ADMIN ALL FILES DOWNLOAD PANEL
#paths are relative
admin.panel.download.folderBlackList =["ginas.ix", "lib", "share", "bin"]

## START AUTHENTICATION

# SSO HTTP proxy authentication settings - right now this is only used by FDA
#ix.authentication.trustheader=true
#ix.authentication.usernameheader="AUTHENTICATION_HEADER_NAME"
#ix.authentication.useremailheader="AUTHENTICATION_HEADER_NAME_EMAIL"

# set this "false" to only allow authenticated users to see the application
ix.authentication.allownonauthenticated=true

# set this "true" to allow any user that authenticates to be registered
# as a user automatically
ix.authentication.autoregister=true

#Set this to "true" to allow autoregistered users to be active as well
ix.authentication.autoregisteractive=false
## END AUTHENTICATION

################
#H2 example
db.default.driver=org.h2.Driver
db.default.url="jdbc:h2:"${ix.home}"/h2/ginas;MVCC=true"
db.default.user=sa
db.default.password=""
db.default.maximumPoolSize = 50
#END H2 example
################


#evolutionplugin=disabled

#This is for testing
#ebean.default2="ix.test.modelsb.*"
################
#H2 example
#db.default2.driver=org.h2.Driver
#db.default2.url="jdbc:h2:"${ix.home}"/h2/ginas;MVCC=true"
#db.default2.user=sa
#db.default2.password=""
#END H2 example
################



# You can specify the path to an additional mapping file to make 
# certain keys resolve as if they were other keys (e.g. old codes)

# The expected file format is a header-less 2-column tab-delimitted
# file. The first column is the key you want to map, and the second
# column is the key you want to map to. This will only be used during
# url resolving, and only when there are no matches with the standard
# ways that keys are resolved (using database lookups)

#ix.ginas.mapping.synonymsFile="./olduuidmapping.txt"


cardView.substanceDetails = [

        {
                substanceClass : "ix.ginas.models.v1.Substance",
                cardClass : "ix.ginas.utils.views.cards.SubstanceOverviewCard",
                viewType : "Substance"

        },
        {
                substanceClass : "ix.ginas.models.v1.ChemicalSubstance",
                cardClass : "ix.ginas.utils.views.cards.StructureCard",

        },
        {
                substanceClass : "ix.ginas.models.v1.Substance",
                cardClass : "ix.ginas.utils.views.cards.PrimaryDefinitionCard",
                viewType : "Substance"

        },
        {
                substanceClass : "ix.ginas.models.v1.Substance",
                cardClass : "ix.ginas.utils.views.cards.AlternativeDefinitionsCard",
                viewType : "Substance"

        },
        {
                substanceClass : "ix.ginas.models.v1.Substance",
                cardClass : "ix.ginas.utils.views.cards.VariantConceptsCard",
                viewType : "Substance"

        },
        {
                substanceClass : "ix.ginas.models.v1.Substance",
                cardClass : "ix.ginas.utils.views.cards.NamesCard",


        },
        {
                substanceClass : "ix.ginas.models.v1.Substance",
                cardClass : "ix.ginas.utils.views.cards.ClassificationsCard",


        },
        {
                substanceClass : "ix.ginas.models.v1.Substance",
                cardClass : "ix.ginas.utils.views.cards.IdentifiersCard",


        },
        #PROTEIN
        {
                substanceClass : "ix.ginas.models.v1.ProteinSubstance",
                cardClass : "ix.ginas.utils.views.cards.SubunitsCard",


        },
        {
                substanceClass : "ix.ginas.models.v1.ProteinSubstance",
                cardClass : "ix.ginas.utils.views.cards.DisulfidesCard",
                viewType : "Substance"

        },
        {
                substanceClass : "ix.ginas.models.v1.ProteinSubstance",
                cardClass : "ix.ginas.utils.views.cards.OtherLinksCard",
                viewType : "Substance"

        },
        {
                substanceClass : "ix.ginas.models.v1.ProteinSubstance",
                cardClass : "ix.ginas.utils.views.cards.GlycosylationCard",
                viewType : "Substance"

        },

        #CONCEPTS
        {
                substanceClassType : "concept",
                cardClass : "ix.ginas.utils.views.cards.ConceptDefinitionCard",
                viewType : "Substance"

        },

        #POLYMER
        {
                substanceClass : "ix.ginas.models.v1.PolymerSubstance",
                cardClass : "ix.ginas.utils.views.cards.PolymerStructureCard",


        },
        {
                substanceClass : "ix.ginas.models.v1.PolymerSubstance",
                cardClass : "ix.ginas.utils.views.cards.MonomersCard",
                viewType : "Substance"

        },
        {
                substanceClass : "ix.ginas.models.v1.PolymerSubstance",
                cardClass : "ix.ginas.utils.views.cards.SRUsCard",
                viewType : "Substance"

        },

        #NUCLEIC ACID
        {
                substanceClass : "ix.ginas.models.v1.NucleicAcidSubstance",
                cardClass : "ix.ginas.utils.views.cards.SubunitsCard",


        },
        {
                substanceClass : "ix.ginas.models.v1.NucleicAcidSubstance",
                cardClass : "ix.ginas.utils.views.cards.NaSugarsCard",


        },
        {
                substanceClass : "ix.ginas.models.v1.NucleicAcidSubstance",
                cardClass : "ix.ginas.utils.views.cards.NaLinkagesCard",


        },

        #MixtureSubstance

        {
                substanceClass : "ix.ginas.models.v1.MixtureSubstance",
                cardClass : "ix.ginas.utils.views.cards.MixtureSourceCard",
                viewType : "Substance"

        },
        {
                substanceClass : "ix.ginas.models.v1.MixtureSubstance",
                cardClass : "ix.ginas.utils.views.cards.MixtureComponentsCard",


        },
        #Important!
        #G1SS Substance
        {
                substanceClass : "ix.ginas.models.v1.SpecifiedSubstanceGroup1Substance",
                cardClass : "ix.ginas.utils.views.cards.Group1SpecifiedSubstanceComponentsCard",
                viewType : "Substance"

        },
        #Show mixtures that contain this record
        {
                substanceClass : "ix.ginas.models.v1.Substance",
                cardClass : "ix.ginas.utils.views.cards.MixtureParentsCard",
                viewType : "Substance"

        },
        #Show g1ss that contain this record
        {
                substanceClass : "ix.ginas.models.v1.Substance",
                cardClass : "ix.ginas.utils.views.cards.Group1SpecifiedSubstanceParentsCard",
                viewType : "Substance"

        },

        {
                substanceClass : "ix.ginas.models.v1.Substance",
                cardClass : "ix.ginas.utils.views.cards.DefaultRelationshipCards",
                viewType : "Substance"

        },

        {
                substanceClass : "ix.ginas.models.v1.Substance",
                cardClass : "ix.ginas.utils.views.cards.ModificationsCard",
                viewType : "Substance"

        },
        {
                substanceClass : "ix.ginas.models.v1.Substance",
                cardClass : "ix.ginas.utils.views.cards.PropertiesCard",
                viewType : "Substance"

        },

        {
                substanceClass : "ix.ginas.models.v1.Substance",
                cardClass : "ix.ginas.utils.views.cards.NotesCard",
                viewType : "Substance"

        },
        {
                substanceClass : "ix.ginas.models.v1.Substance",
                cardClass : "ix.ginas.utils.views.cards.AuditInfoCard",
                viewType : "Substance"

        },
        {
                substanceClass : "ix.ginas.models.v1.Substance",
                cardClass : "ix.ginas.utils.views.cards.ReferencesCard",
                viewType : "Substance"

        },
        {
                substanceClass : "ix.ginas.models.v1.Substance",
                cardClass : "ix.ginas.utils.views.cards.HistoryCard",
                viewType : "Substance"

        },
        {
                substanceClass : "ix.ginas.models.v1.ChemicalSubstance",
                cardClass : "ix.ginas.utils.views.cards.MoietiesCard",
                viewType : "Substance"

        },
]

## Approval ID Generator
# if not specified uses DefaultApprovalIDGenerator with default values

#ix.ginas.approvalIDGenerator = {
# "generatorClass" : "ix.ginas.utils.CodeSystemGenerator",
# "parameters" : {
#                 "name" : "EUTCT",
#                 "codeSystem" : "EUTCT"
#                }
#
#}

